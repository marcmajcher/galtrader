$! ------------------ CUT HERE -----------------------
$ v='f$verify(f$trnlnm("SHARE_VERIFY"))'
$!
$! This archive created by VMS_SHARE Version 7.2-007  22-FEB-1990
$!   On  6-MAY-1993 23:34:56.91   By user MASMUMMY 
$!
$! This VMS_SHARE Written by:
$!    Andy Harper, Kings College London UK
$!
$! Acknowledgements to:
$!    James Gray       - Original VMS_SHARE
$!    Michael Bednarek - Original Concept and implementation
$!
$!+ THIS PACKAGE DISTRIBUTED IN 14 PARTS, TO KEEP EACH PART
$!  BELOW 30 BLOCKS
$!
$! TO UNPACK THIS SHARE FILE, CONCATENATE ALL PARTS IN ORDER
$! AND EXECUTE AS A COMMAND PROCEDURE  (  @name  )
$!
$! THE FOLLOWING FILE(S) WILL BE CREATED AFTER UNPACKING:
$!       1. COMMON.H;1
$!       2. DISPLAY.BAS;1
$!       3. DISPLAY.E;1
$!       4. GAL-HELP.DAT;1
$!       5. GAL-TRADER.H;1
$!       6. GAL_TRADER4.BAS;1
$!       7. MAKEFILE.;3
$!       8. PNAME.BAS;1
$!
$set="set"
$set symbol/scope=(nolocal,noglobal)
$f=f$parse("SHARE_TEMP","SYS$SCRATCH:.TMP_"+f$getjpi("","PID"))
$e="write sys$error  ""%UNPACK"", "
$w="write sys$output ""%UNPACK"", "
$ if f$trnlnm("SHARE_LOG") then $ w = "!"
$ ve=f$getsyi("version")
$ if ve-f$extract(0,1,ve) .ges. "4.4" then $ goto START
$ e "-E-OLDVER, Must run at least VMS 4.4"
$ v=f$verify(v)
$ exit 44
$UNPACK: SUBROUTINE ! P1=filename, P2=checksum
$ if f$search(P1) .eqs. "" then $ goto file_absent
$ e "-W-EXISTS, File ''P1' exists. Skipped."
$ delete 'f'*
$ exit
$file_absent:
$ if f$parse(P1) .nes. "" then $ goto dirok
$ dn=f$parse(P1,,,"DIRECTORY")
$ w "-I-CREDIR, Creating directory ''dn'."
$ create/dir 'dn'
$ if $status then $ goto dirok
$ e "-E-CREDIRFAIL, Unable to create ''dn'. File skipped."
$ delete 'f'*
$ exit
$dirok:
$ w "-I-PROCESS, Processing file ''P1'."
$ if .not. f$verify() then $ define/user sys$output nl:
$ EDIT/TPU/NOSEC/NODIS/COM=SYS$INPUT 'f'/OUT='P1'
PROCEDURE Unpacker ON_ERROR ENDON_ERROR;SET(FACILITY_NAME,"UNPACK");SET(
SUCCESS,OFF);SET(INFORMATIONAL,OFF);f:=GET_INFO(COMMAND_LINE,"file_name");b:=
CREATE_BUFFER(f,f);p:=SPAN(" ")@r&LINE_END;POSITION(BEGINNING_OF(b));
LOOP EXITIF SEARCH(p,FORWARD)=0;POSITION(r);ERASE(r);ENDLOOP;POSITION(
BEGINNING_OF(b));g:=0;LOOP EXITIF MARK(NONE)=END_OF(b);x:=ERASE_CHARACTER(1);
IF g=0 THEN IF x="X" THEN MOVE_VERTICAL(1);ENDIF;IF x="V" THEN APPEND_LINE;
MOVE_HORIZONTAL(-CURRENT_OFFSET);MOVE_VERTICAL(1);ENDIF;IF x="+" THEN g:=1;
ERASE_LINE;ENDIF;ELSE IF x="-" THEN IF INDEX(CURRENT_LINE,"+-+-+-+-+-+-+-+")=
1 THEN g:=0;ENDIF;ENDIF;ERASE_LINE;ENDIF;ENDLOOP;t:="0123456789ABCDEF";
POSITION(BEGINNING_OF(b));LOOP r:=SEARCH("`",FORWARD);EXITIF r=0;POSITION(r);
ERASE(r);x1:=INDEX(t,ERASE_CHARACTER(1))-1;x2:=INDEX(t,ERASE_CHARACTER(1))-1;
COPY_TEXT(ASCII(16*x1+x2));ENDLOOP;WRITE_FILE(b,GET_INFO(COMMAND_LINE,
"output_file"));ENDPROCEDURE;Unpacker;QUIT;
$ delete/nolog 'f'*
$ CHECKSUM 'P1'
$ IF CHECKSUM$CHECKSUM .eqs. P2 THEN $ EXIT
$ e "-E-CHKSMFAIL, Checksum of ''P1' failed."
$ ENDSUBROUTINE
$START:
$ create 'f'
Xcommon (dstatus) &
X`09long scanner_id, &
X`09long text_length, &
X`09long new_pid, &
X`09long control_id, &
X`09string pname=7, &
X`09long ring,ray,   &
X`09long keyboard_id, &
X`09long io_id, &
X`09long text_id, &
X`09long big_id, &
X`09long trade_id, &
X`09long status_id, &
X`09long menu_id, &
X`09long row_pos,col_pos, &
X`09long manual_id, &
X`09long planet_id, &
X`09long scanner_displayed, &
X`09long scroll_ok, &
X`09long error_id, &
X`09long pending_error, &
X`09long dpos, &
X`09long denergy, &
X`09long ddir, &
X`09long dcredits, &
X`09long dfuel, &
X`09long dmissiles, &
X`09long cloak, &
X`09long lsj, &
X`09long ecm
X
$ CALL UNPACK COMMON.H;1 358025503
$ create 'f'
X        sub display (INTEGER dmode, STRING dtext)
X        ! ---------------------------------------------------------
X        !                  Subroutine Display
X        !            Written by: Stephan Meier  10/87
X        ! ---------------------------------------------------------
X        !
X        !     dmode is an integer specifying the display operation
X        !     dtext is a string containing text to be displayed
X        !
X        ! ---------------------- Externals ------------------------
X        %include "common.h"
X   `09%include "display.e"
X
X`09! ---------------------- Variables ------------------------
X        declare long keycode,text_len, prompt_len
X`09declare integer constant char_mask = 262144
X        ! ---------------------------------------------------------
X        !                  Perform requested operation
X        ! ---------------------------------------------------------
X        select dmode
X          case 1
X            !   get input + return in dtext
X            rs=smg$erase_display(io_id,,,,)
X            rs=smg$set_cursor_abs(io_id,1,1)
X            rs=smg$put_line(io_id,dtext,,,,,,)
X`09    prompt_len = len(dtext) + 1
X`09    text_len = prompt_len
X`09    dtext=""
X            rs=smg$set_cursor_abs(io_id,1,text_len)
X`09    rs=smg$read_keystroke(keyboard_id,keycode,,,io_id,,)
X`09    while (keycode<>13 and text_len<40)
X`09      call handle_key(keycode,dtext,text_len,prompt_len)
X`09      rs=smg$read_keystroke(keyboard_id,keycode,,,io_id,,)
X`09    next
X            dtext=edit$(dtext,152%)    ! remove excess spaces, tab
X`09    if pending_error = 1 then
X`09      rs=smg$erase_display(error_id,,,,)
X`09      pending_error = 0
X`09    end if
X            scroll_ok=0
X          case 2
X            ! set up smg environment
X`09    pending_error = 0
X            rs=smg$create_pasteboard(new_pid,,,,)
X            rs=smg$create_virtual_keyboard(keyboard_id)
X            rs=smg$create_virtual_display(11,58,scanner_id, &
X                smg$m_border,smg$m_reverse,)
X`09    rs=smg$erase_pasteboard(new_pid)
X            rs=smg$label_border(scanner_id,"Scanner Display",,, &
X                smg$m_bold, smg$m_reverse)
X            rs=smg$create_virtual_display(11,19,control_id, &
X                smg$m_border,,)
X            rs=smg$put_line(control_id,"CONDTION:",,,,,,)
X            rs=smg$put_line(control_id,"LANDING COMP:",,,,,,)
X            rs=smg$put_line(control_id,"DAMAGE REPORT:",,,,,,)
X            rs=smg$put_line(control_id,"",,,,,,)
X            rs=smg$put_line(control_id,"",,,,,,)
X            rs=smg$put_line(control_id,"PLANET:",,,,,,)
X            rs=smg$put_line(control_id,"RING:",,,,,,)
X            rs=smg$put_line(control_id,"RAY:",,,,,,)
X`09    rs=smg$put_line(control_id,"CLOAK:",,,,,,)
X`09    rs=smg$put_line(control_id,"LSJ:",,,,,,)
X`09    rs=smg$put_line(control_id,"ECM:",,,,,,)
X            rs=smg$label_border(control_id,"Control",,, &
X                smg$m_bold,)
X            rs=smg$create_virtual_display(1,80,status_id,,smg$m_reverse,)
X            rs=smg$create_virtual_display(14,78,trade_id, &
X                smg$m_border,,)
X            rs=smg$create_virtual_display(14,32,planet_id,smg$m_border,,)
X            rs=smg$label_border(planet_id,"Planet Info",,,smg$m_bold,)
X            rs=smg$create_virtual_display(5,80,text_id,,,)
X            rs=smg$create_virtual_display(8,80,manual_id,,,)
X            rs=smg$create_virtual_display(21,80,big_id,,,)
X            rs=smg$create_virtual_display(2,80,io_id,,,)
X            rs=smg$create_virtual_display(1,40,error_id,,,)
X`09    rs=smg$set_out_of_band_asts(new_pid by ref,char_mask by ref, &
X`09`09ast_refresh,0)
X`09    rs=smg$set_broadcast_trapping(new_pid, ast_broadcast,0)
X          case 3
X            !   display status line
X            k=6-len(str$(dpos))
X            l=4-len(str$(denergy))
X            m=4-len(str$(ddir))
X            n=7-len(str$(dcredits))
X            p=5-len(str$(dfuel))
X            q=5-len(str$(dmissiles))
X            b$="        "
X            if k>0 then c$=left$(b$,k) else c$="" end if
X            if l>0 then d$=left$(b$,l) else d$="" end if
X            if m>0 then e$=left$(b$,m) else e$="" end if
X            if n>0 then f$=left$(b$,n) else f$="" end if
X            a$="Pos: "+str$(dpos)+ c$+" Dir: "+str$(ddir)+e$+ &
X                " Energy: "+str$(denergy)+d$+" Missiles: "+str$(dmissiles)+
V &
X                space$(q)+" Fuel: "+str$(dfuel)+space$(p)+"  Credits: "+ &
X                str$(dcredits)+f$
X            rs=smg$set_cursor_abs(status_id,1,1)
X            rs=smg$put_line(status_id,a$,,,,,,)
X`09    if cloak = 1 then a$="ON" else a$= "OFF" end if
X            rs=smg$set_cursor_abs(control_id,9,12)
X            rs=smg$put_line(control_id,a$,,,,,,)
X`09    if lsj = 1 then a$="ON" else a$="OFF" end if
X            rs=smg$set_cursor_abs(control_id,10,12)
X            rs=smg$put_line(control_id,a$,,,,,,)
X`09    if ecm = 1 then a$="ON" else a$="OFF" end if
X            rs=smg$set_cursor_abs(control_id,11,12)
X            rs=smg$put_line(control_id,a$,,,,,,)
X          case 4
X            !   erase trading window and set cursor to home
X            rs=smg$erase_display(trade_id,,,,)
X          case 5
X            !   clear menu window
X            rs=smg$erase_display(menu_id,,,,)
X          case 6
X            !   print menu line
X            rs=smg$put_line(menu_id,dtext,,,,,,)
X          case 7
X            !   erase big window and set cursor to home
X            rs=smg$erase_display(big_id,,,,)
X          case 8
X            !   print line in big window
X            rs=smg$put_line(big_id,dtext,,,,,,)
X          case 9
X            !   clear input window
X            rs=smg$erase_display(io_id,,,,)
X          case 10
X            !  bring up scanner + control
X            scanner_displayed=1
X            rs=smg$begin_pasteboard_update(new_pid)
X            rs=smg$erase_display(scanner_id,,,,)
X            rs=smg$paste_virtual_display(scanner_id,new_pid,3,2)
X            rs=smg$paste_virtual_display(control_id,new_pid,3,61)
X            rs=smg$paste_virtual_display(manual_id,new_pid,15,1)
X            rs=smg$unpaste_virtual_display(trade_id,new_pid)
X            rs=smg$end_pasteboard_update(new_pid)
X          case 11
X            ! print line to scanner
X            rs= smg$put_line(scanner_id,dtext,,,,,,)
X          case 12
X    `09    ! remove scanner and control displays
X            rs=smg$begin_pasteboard_update(new_pid)
X            rs=smg$paste_virtual_display(trade_id,new_pid,3,2)
X            rs=smg$unpaste_virtual_display(scanner_id,new_pid)
X            rs=smg$unpaste_virtual_display(control_id,new_pid)
X            rs=smg$unpaste_virtual_display(manual_id,new_pid)
X            rs=smg$erase_display(trade_id,,,,)
X            rs=smg$end_pasteboard_update(new_pid)
X            scanner_displayed=0
X          case 13
X            ! clear scanner
X            rs=smg$erase_display(scanner_id,,,,)
X          case 14
X            ! display damage report
X            rs=smg$set_cursor_abs(control_id,4,1)
X            if dtext="ENERGY FAILING" then
X              rs=smg$put_line(control_id,dtext,,smg$m_blink,,,,)
X            else if dtext="ENERGY LOW." then
X                  rs=smg$put_line(control_id,dtext,,smg$m_reverse,,,,)
X                 else
X                  rs=smg$put_line(control_id,dtext,,,,,,)
X                end if
X            end if
X          case 15
X            ! display landing computer
X            rs=smg$set_cursor_abs(control_id,2,15)
X            rs=smg$put_line(control_id,dtext,,,,,,)
X            rs=smg$set_cursor_abs(control_id,6,12)
X            rs=smg$put_line(control_id,pname,,,,,,)
X            rs=smg$set_cursor_abs(control_id,7,12)
X            rs=smg$put_line(control_id,str$(ring),,,,,,)
X            rs=smg$set_cursor_abs(control_id,8,12)
X            rs=smg$put_line(control_id,str$(ray),,,,,,)
X          case 16
X            ! display condtion
X            rs=smg$set_cursor_abs(control_id,1,15)
X            if dtext="RED" then
X                rs=smg$put_line(control_id,dtext,,smg$m_blink,,,,)
X            else
X                rs=smg$put_line(control_id,dtext,,,,,,)
X            end if
X          case 17
X            ! Hit any key to continue
X            rs=smg$set_cursor_abs(io_id,2,1)
X            rs=smg$put_line(io_id,"--More--",,smg$m_reverse,,,,)
X            rs=smg$read_keystroke(keyboard_id,keycode,,,,,)
X            rs=smg$erase_display(io_id,,,,)
X          case 18
X            ! set up normal display
X            rs=smg$paste_virtual_display(text_id,new_pid,18,1)
X            rs=smg$paste_virtual_display(trade_id,new_pid,3,2)
X            rs=smg$paste_virtual_display(status_id,new_pid,1,1)
X          case 19
X            ! set up big display
X            rs=smg$paste_virtual_display(big_id,new_pid,2,1)
X          case 20
X            ! remove big display
X            rs=smg$unpaste_virtual_display(big_id,new_pid)
X          case 21
X            ! clear text window
X            rs=smg$erase_display(text_id,,,,)
X            rs=smg$erase_display(manual_id,,,,)
X          case 22
X            ! set up io + error window
X            rs=smg$paste_virtual_display(io_id,new_pid,23,1)
X            rs=smg$paste_virtual_display(error_id,new_pid,23,40)
X          case 23
X            ! print a line in text window
X            if scanner_displayed=0 then
X              rs=smg$put_line(text_id,dtext,,,,,,)
X            else
X               if scroll_ok=7 then
X                 scroll_ok=-1
X                 rs=smg$set_cursor_abs(io_id,2,1)
X                 rs=smg$put_line(io_id,"--More--"&
X`09`09     ,,smg$m_reverse,,,,)
X                 rs=smg$read_keystroke(keyboard_id,keycode,,,,,)
X                 rs=smg$erase_display(io_id,,,,)
X                 rs=smg$erase_display(manual_id,,,,)
X               end if
X               scroll_ok=scroll_ok+1
X               rs=smg$put_line(manual_id,dtext,,,,,,)
X            end if
X          case 24
X            ! print a line in trade window
X            rs=smg$put_line(trade_id,dtext,,,,,,)
X          case 25
X            ! print a line in io window
X            rs=smg$put_line(io_id,dtext,,,,,,)
X          case 26
X            ! read a single key
X            rs=smg$read_keystroke(keyboard_id,keycode,,,,,)
X            dtext=chr$(keycode)
X          case 27
X            ! print text at specified position in trade window
X            rs=smg$put_chars(trade_id,dtext,row_pos,col_pos,,,,)
X          case 28
X            ! display flashing title
X            rs=smg$put_chars(big_id,dtext,5,28,,smg$m_bold,,)
X          case 29
X            ! bring up planet info window
X            rs=smg$paste_virtual_display(planet_id,new_pid,3,48)
X          case 30
X            ! print info in planet display
X            rs=smg$put_line(planet_id,dtext,,,,,,)
+-+-+-+-+-+-+-+-  END  OF PART 1 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 2 -+-+-+-+-+-+-+-+
X          case 31
X            ! remove planet info window
X            rs=smg$unpaste_virtual_display(planet_id,new_pid)
X          case 32
X            ! clear planet info window
X            rs=smg$erase_display(planet_id,,,,)
X          case 33
X`09    ! display a line in error window
X`09    rs=smg$ring_bell(error_id,1)`09   `20
X            rs=smg$put_line(error_id,dtext,,,,,,)
X`09    pending_error = 1
X`09  case 34
X            !   get long input + return in dtext
X`09    rs=smg$repaste_virtual_display(io_id,new_pid,23,1)
X            rs=smg$erase_display(io_id,,,,)
X            rs=smg$set_cursor_abs(io_id,1,1)
X            rs=smg$put_line(io_id,dtext,,,,,,)
X`09    prompt_len = len(dtext) + 1
X`09    text_len = prompt_len
X`09    dtext=""
X            rs=smg$set_cursor_abs(io_id,1,text_len)
X`09    rs=smg$read_keystroke(keyboard_id,keycode,,,io_id,,)
X`09    while (keycode<>13 and text_len<80)
X`09      call handle_key(keycode,dtext,text_len,prompt_len)
X`09      rs=smg$read_keystroke(keyboard_id,keycode,,,io_id,,)
X`09    next
X            dtext=edit$(dtext,152%)    ! remove excess spaces, tab
X`09    re=smg$repaste_virtual_display(error_id,new_pid,23,40)
X            scroll_ok=0
X        end select
X     end sub
X
X    ! routine to handle keystroke
X    sub handle_key(long keycode, string text_buffer, long text_len, prompt_l
Ven)
X    %include "common.h"
X    %include "display.e"
X
X    select keycode
X      case 127
X        if text_len > prompt_len then
X`09  text_len = text_len - 1
X`09  text_buffer = left$(text_buffer,(text_len-prompt_len))
X`09  rs = smg$put_chars(io_id," ",1,text_len,,,,)
X`09  rs = smg$put_chars(io_id,"",1,text_len,,,,)
X        end if
X      case else
X`09text_buffer = text_buffer + chr$(keycode)
X        rs=smg$put_chars(io_id,chr$(keycode),1,text_len,,,,)
X`09text_len = text_len + 1
X    end select
X    end sub
X
X    ! ast_refresh routine to asynchrounously refresh screen.`20
X    sub ast_refresh(long a,b,c,d,e by ref)
X
X    %include "display.e"
X    %include "common.h"
X    declare integer rs
X
X    rs = smg$repaint_screen(new_pid)
X    rs = smg$repaint_line(new_pid,23,1)
X    end sub
X
X    ! display unsolicited input
X    sub ast_broadcast(long a,b,c,d,e by ref)
X
X    %include "display.e"
X    %include "common.h"
X    declare word m_len
X    declare string m_text
X    rs = smg$get_broadcast_message(new_pid, m_text, m_len,)
X    rs = smg$set_cursor_abs(io_id,2,1)
X    rs = smg$put_line(io_id,m_text,,,,,,)
X   `20
X    end sub
$ CALL UNPACK DISPLAY.BAS;1 2047544030
$ create 'f'
X`09! ------------------- display.e ----------------------------
X`09
X`09external long ast_refresh
X        external long ast_broadcast
X`09external long function smg$erase_pasteboard(long by ref)
X`09external long function smg$repaint_line(long by ref, long by ref, &
X`09`09long by ref)
X        external long function smg$create_pasteboard(LONG by ref, &
X                STRING by desc, LONG by ref, LONG by ref, LONG by ref)
X        external long function smg$create_virtual_display(LONG by ref, &
X                LONG by ref, LONG by ref, LONG by ref, LONG by ref, &
X                LONG by ref)
X        external long function smg$paste_virtual_display(LONG by ref, &
X                LONG by ref, LONG by ref, LONG by ref)
X        external long function smg$put_line(LONG by ref, STRING by desc, &
X                LONG by ref, LONG by ref, LONG by ref, LONG by ref, &
X                LONG by ref, LONG by ref)
X        external long function smg$return_cursor_pos(LONG,LONG,LONG)
X        external long function smg$erase_display(LONG, LONG, LONG, LONG, LON
VG)
X        external long function smg$unpaste_virtual_display(LONG, LONG)
X        external long function smg$repaste_virtual_display(LONG,LONG,LONG,LO
VNG)
X        external long function smg$repaint_screen(LONG by ref)
X        external long function smg$set_display_scroll_region(LONG, LONG, LON
VG)
X        external long function smg$delete_pasteboard (LONG by ref, LONG by r
Vef)
X        external long constant smg$m_border, smg$m_reverse, smg$m_bold, &
X                smg$m_blink
X        external long function smg$label_border(LONG,STRING by desc, LONG, &
X                LONG, LONG, LONG)
X        external long function smg$put_line(LONG,STRING by desc, LONG, LONG,
V &
X                LONG, LONG, LONG, LONG)
X        external long function smg$put_with_scroll(LONG,STRING by desc,LONG)
X        external long function smg$set_cursor_abs(LONG,LONG,LONG)
X        external long function smg$set_cursor_rel(LONG,LONG,LONG)
X        external long function smg$set_display_scroll_region(LONG,LONG,LONG)
X        external long function smg$put_chars(LONG,STRING by desc,LONG,LONG,
V &
X        `09LONG,LONG,LONG,LONG)
X        external long function smg$ring_bell(LONG,LONG)
X
X`09! ast functions
X`09external long function smg$enable_unsolicited_input(LONG,LONG,LONG)
X`09external long function smg$set_broadcast_trapping(long by ref, &
X`09`09long by ref, long by value)
X        external long function smg$set_out_of_band_asts(long by ref, &
X`09`09long by ref, long by ref, long by value)
X`09external long function smg$get_broadcast_message(long by ref, &
X`09`09string by desc, word by ref, word by ref)
X
X        ! virtual keyboard stuff
X        external long function smg$create_virtual_keyboard(LONG)
X        external long function smg$delete_virtual_keyboard(LONG)
X        external long function smg$read_string(LONG,STRING by desc,STRING &
X        `09by desc,LONG,LONG,LONG,STRING by desc,LONG,LONG,LONG)
X        external long function smg$read_keystroke(LONG by ref,long by ref, &
X`09`09string by desc, long by ref, long by ref, long by ref, &
X`09`09long by ref)
X    `20
X        ! constants
X        external long constant smg$m_blink,smg$m_bold,smg$m_reverse
$ CALL UNPACK DISPLAY.E;1 1263759743
$ create 'f'
Xmain
XThe following options are available from the main (MAIN>) menu.
X(b)roadcast       Sends a message to all the current players in the galaxy.
X(ba)ank           Pay a visit to the local Galactic Bank branch office.
X(c)heck status    Displays information about yourself and your ship.
X(j)ump            Engage your hyperspace drive and travel to another world.
X(l)and            When orbiting a world, activate your Delison drive to land
V.
X(o)ptions         Toggle default settings.
X(p)lanet          Display information on the current planet.
X(q)uit            Retire from galactic trading immediately.
X(s)end            Send a message to a specified player in the galaxy.
X(su)spend         Place your character in suspended animation.
X(t)rade           Pay a visit to the trading center on the current planet.
X(tu)ne`09`09  Tune comLink channels.
X(w)ho             Ask the Galactic Police for a list of all free traders.
X         `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
Xtrade
XThe following options are available from the trade (TRADE>) menu.
X(b)uy             Buy cargo from the trading center.
X(c)heck status    Displays information about yourself and your ship.
X(e)quipment       Purchase equipment for your ship.
X(f)uel            Buy fuel for your ship.
X(p)rices          Get a list of the current trading prices.
X(s)ell            Sell cargo you have in your ship to the trading center.
X(u)se computer    Activate your trading computer (if fitted.)
X(x)change ship    Visit the used ship dealer and see what he has to offer.
X(q)uit trading    Leave the trading center and return to the main menu.
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
Xcomp
XThe following options are available from the trading computer (COMP>) menu.
X(i)tem        View the prices by planet for a given commodity.
X(p)rices      View the trading computer's estimated prices for a planet.
X(pl)anets     View the list of planets on which the computer has data.
X(q)uit        Stop using the trading computer and return to trade menu.
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
X    `20
Xmanual
X(a)head full,+  Advance in your current direction as fast as your drives go.
X(ah)ead slow    Advance in your current direction at a slower speed.
X(ab)andon       Abandon your ship (if you have an escape capsule.)
X(bo)ard         Board an abandonned ship or starbase specified.
X(b)oadcast      Send a message to all players in the galaxy.
X(c)heck status  Displays information about yourself and your ship.
X(cl)oak (ls)j   Activate/Deactivate your cloaking device/LSJ.
X(d)odge         Take evasive action to reduce the chance of being hit.
X(e)energy bomb  Use an energy bomb (if fitted.)
X(ec)m           Activate/Deactivate your electronic counter measures.
X(f)orward       Fire your forward laser (if fitted.)
X(fl)ush         Open your cargo doors and flush your cargo hold.
X(j)ump          Attempt to reactivate your jump drive and leave the planet.
X(m)issile       Fire a single (or multiple if MFMR fitted) missile.
X(o)ptions       Toggle default settings.
X(r)ear          Fire your rear laser (if fitted.)
X(s)end          Send a message to a single player in the galaxy.
X(sa)nd          Use your sandblaster to produce a cloud of sand (if fitted.)
X(st)op, -       Stop motion.  Leaves ship swung through 180 degrees
X(lt)eft turn, `5B Rotate left 45 degrees
X(rt)ight turn,`5D Rotate right 45 degrees
X    `20
X    `20
X    `20
X
$ CALL UNPACK GAL-HELP.DAT;1 1010082469
$ create 'f'
X   ! --------------------------- gal-trader4.h -----------------------------
V-
X   record event_type
X           SINGLE p1
X           STRING source = 4
X           STRING dest = 4
X           STRING event = 2
X   end record event_type
X
X   record planetinfo_type
X           SINGLE zone
X           SINGLE law
X           SINGLE population
X           SINGLE tech
X           SINGLE xp
X           STRING pname = 15
X           SINGLE yp
X           SINGLE government
X           SINGLE trade
X   END RECORD planetinfo_type
X
X   record score_type
X           STRING sname = 10
X           SINGLE ships
X           INTEGER score
X           STRING rank = 12
X           SINGLE legal
X           SINGLE money
X   END RECORD score_type
X
X   record equip_type
X           SINGLE eprice
X           STRING ename =20
X           INTEGER usedeprice
X   END RECORD equip_type
X
X   record cargo_type
X           SINGLE ttech
X           SINGLE qtrade
X           SINGLE tprice
X           STRING unit
X           SINGLE pprice
X           SINGLE bprice
X           STRING trade = 20
X   END RECORD cargo_type
X
X   record shipstats_type
X           SINGLE soldhere
X           SINGLE mmissile
X`09   INTEGER temperature
X           STRING sname = 40
X           SINGLE slaser
X           SINGLE mlaser
X           SINGLE mcargo
X           SINGLE mfuel
X           SINGLE cargo(2)
X           SINGLE mdrive
X           SINGLE rarity
X           SINGLE reliability
X           SINGLE resale
X           SINGLE cost
X`09   INTEGER neg_cost
X           SINGLE menergy
X    END RECORD shipstats_type
X   `20
X    record targets_type
X           STRING  username=4
X           SINGLE others(2)
X           SINGLE sintent
X           SINGLE spos
X`09   SINGLE special
X           SINGLE senergy
X           SINGLE cargo(2)
X           SINGLE smissile
X           SINGLE player
X           SINGLE ship
X           SINGLE starget
X    END RECORD targets_type
X
X    record player_type
X           SINGLE score
X           SINGLE moves
X           SINGLE credits
X           SINGLE legal
X           SINGLE date(2)
X           SINGLE hash
X           SINGLE interest
X`09   STRING username=4
X           SINGLE due
X           SINGLE pmode
X           SINGLE rank
X           SINGLE planet
X           SINGLE kills
X           SINGLE equip(ntequip)
X           LONG timestamp(2)
X           SINGLE chan2
X           SINGLE escapes
X           SINGLE debt
X           SINGLE maxenergy
X           SINGLE rpos
X           SINGLE direction
X           SINGLE time_owned
X           SINGLE fshield
X           SINGLE scanrange
X           SINGLE shiptype
X           SINGLE fuel
X           SINGLE thargoid
X           SINGLE shipnum
X`09   INTEGER lsj
X           SINGLE energy
X           STRING personalname = 13
X           SINGLE maxfuel
X           SINGLE chan1
X           SINGLE maxcargo
X           SINGLE ban
X           SINGLE maxmissile
X           SINGLE totcargo
X           STRING message=bufsize
X           SINGLE cargo(ntcargo)
X           SINGLE on_ground
X           SINGLE dodge
X           SINGLE speed
X           SINGLE random_key
X`09   INTEGER cloak
X    END RECORD player_type
$ CALL UNPACK GAL-TRADER.H;1 388759627
$ create 'f'
X1   ! ----------------------------------------------------------------------
X    !        Galactic Trader v. 4.55  by Stephan Meier    8/87
X    !    (c) Copyright 1989,1990,1991 by Stephan Meier.  All rights reserved
V.
X    ! ----------------------------------------------------------------------
X    %IDENT "GT V4.55"
X
X    %LET %SECURITY = %VARIANT
X    %IF (%SECURITY = 0) %THEN`20
X      %PRINT "0 : LOW SECURITY    (superuser,override, debug)"
X    %ELSE %IF (%SECURITY = 1) %THEN
X      %PRINT "1 : MEDIUM SECURITY (superuser,no override, no debug)"
X    %ELSE %IF (%SECURITY = 2) %THEN
X      %PRINT "2 : HIGH SECURITY   (no superuser, no override, no debug)"
X    %ELSE`20
X`09%ABORT "Invalid Security Level specified"
X    %END %IF
X    %END %IF
X    %END %IF
X
X    a%=NOCTRLC
X    option angle=degrees
X    randomize
X`20
X    ! ----------------------- Constants -------------------------------
X    declare string  constant superusermode="10203040"  ! must be 8 chars
X    declare string  constant policemode="54321"        ! must be 5 chars
X    declare string  constant overridemode="xxxyyy"    `20
X    declare integer constant ntequip=24
X    declare integer constant ntcargo=10
X    declare integer constant ntships=23
X    declare integer constant maxships=200
X    declare integer constant maxscores=10
X    declare integer constant ntrank=10
X    declare integer constant ntlegal=5
X    declare integer constant bufsize=2000
X    declare integer constant maxplayers=4
X    declare integer constant maxevents=20
X    declare integer constant startmoney=200150
+-+-+-+-+-+-+-+-  END  OF PART 2 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 3 -+-+-+-+-+-+-+-+
X    declare integer constant nactions=22
X    declare integer constant timelimit=15
X    declare integer constant ctrlclimit=1000
X    declare integer constant maxplanets=200
X    declare integer constant ECM_COST=2
X    declare integer constant LSJ_COST=4
X    declare integer constant CLOAK_COST=3
X    declare integer constant TRUE=1
X    declare integer constant FALSE=0
X    ! ------------------------- Types ---------------------------------
X    %include "gal-trader.h"
X   `20
X    ! --------------------- Variables --------------------------------
X    declare equip_type e(ntequip)        ! info on equip sold on planet
X    declare player_type pr               ! your info
X    declare shipstats_type s(-1 to ntships)  ! general stats on ships
X    declare event_type ev(maxevents)     ! Event queue
X    declare SINGLE points(ntrank)        ! points needed to reach next rank
X    declare long return_status
X    declare string last_recipient`09 ! last message recipient
X    declare integer melt`09`09 ! set if your drive melts
X    declare integer l1`09`09`09 ! temporary variable for ship pos
X    dim rank$(ntrank)                    ! rank names
X    dim legal$(ntlegal)                  ! legal status names
X    dim tracomp%(maxplanets,13)`09`09 ! trading computer data
X    dim s0$(15),s1$(15),s2$(15),s3$(15),s4$(15) ! planet status descriptions
X    dim xp(maxplanets), yp(maxplanets), zone(maxplanets)`20
X    dim name$(maxplanets)
X    dim exist(maxships)                  ! valid targets array
X    dim action_cmd$(20)`09`09`09 ! commands to be parsed
X    dim action_cost$(nactions,2)`09 ! each action is move, combat, or free
X    dim g_option$(6)`09`09`09 ! current settings of game options
X   `20
X    ! --------------------- Map definitions ----------------------------
X    map (planetmap) planetinfo_type pt      ! static stats on planet
X    map (playermap) player_type op          ! other player info
X    map (actionmap) string planetaction=15,SINGLE noship,    &
X       targets_type t(maxships), cargo_type c(ntcargo)
X    map (scoremap) integer dummy, score_type sc(maxscores)
X    %include "common.h"`09`09`09    ! common block with display
X    common long timebuffer, fill1`09    ! buffer for system time value
X`20
X    ! ------------------- External Declarations ------------------------
X    external sub lib$spawn (string)       ! used to execute dcl commands
X    external sub lib$sys_trnlog(string by desc, INTEGER by ref, &
X                 string by desc, INTEGER by ref, INTEGER by ref)
X    external sub display(integer, string)
X    external string function pnamegen(string by desc)
X    external sub lib$put_screen(STRING by desc, INTEGER by ref, &
X                INTEGER by ref, INTEGER by ref)
X    external sub sys$gettim
X    external long function lib$getjpi(LONG by ref, LONG by ref, STRING by de
Vsc &
X`09`09,LONG by ref, STRING by desc, WORD by desc)
X    external long constant jpi$_username
X
X    ! ------------------- correct atan function ------------------------
X    def single atan(single x,y)
X      angle=0
X      if x<>0 then                                  `20
X        angle=atn(abs(y)/abs(x))                    `20
X        if sgn(x)+sgn(y)=0 then                     `20
X          angle=angle+2*(90-angle)                  `20
X  `09end if
X  `09if sgn(y)=-1 or (sgn(y)=0 and sgn(x)=-1) then
X    `09  angle=angle+180                           `20
X  `09end if                                 `20
X      else                                          `20
X  `09if sgn(y)=1 then                            `20
X    `09  angle=90                                  `20
X  `09else                                        `20
X    `09  angle=270                                 `20
X  `09end if                           `20
X      end if
X      atan=angle
X    end def
X
X    ! find the next available ship insertion point.
X    !
X    def integer next_ship
X       l12%=1
X       until (l12%=200 or t(l12%)::ship=0 or t(l12%)::ship = -1)
X         l12%=l12%+1
X       next
X       next_ship = l12%
X    end def
X
X    ! Returns true if string is a  valid (signed) integer
X    def integer integerp(string str_val$)
X      integerp=TRUE
X      if len(str_val$)=0 then integerp=FALSE end if
X      for cic=1 to len(str_val$)`09`20
X`09if (cic=1 and mid$(str_val$,cic,1)="-" and len(str_val$)>1) then
X`09  iterate
X`09end if
X        if ascii(mid$(str_val$,cic,1))<48 or ascii(mid$(str_val$,cic,1))>57
V then
X`09  integerp=FALSE
X        end if
X      next cic
X    end def
X
X
X    def integer valid_id(string x)
X      valid_id = 1
X      if x <> "GPHQ" then
X        when error in
X`09  find #2%, key #0% eq x, wait 60%
X        use
X  `09  call display(33,"The trader id "+x+" is invalid.")
X  `09  valid_id = 0
X        end when
X`09free #2%
X      end if
X    end def
X   `20
X    %IF (%SECURITY = 0)
X    %THEN
X    def integer valid_override()
X      a = noecho(0%)
X      input "Enter Override Password to proceed> ";a$
X      a = echo(0%)
X      a$=edit$(a$,32%)     `20
X!      b$=date$(0%)
X!      a=int((val(mid$(b$,1,2)+mid$(b$,8,2))-1)*val(mid$(b$,8,2)+ &
X!`09mid$(b$,1,2))/23+6)
X!      if a=val(a$) then
X      if a$=overridemode then
X        valid_override = 1
X      else
X        valid_override = 0`09! should be 0
X      end if
X    end def
X    %ELSE %IF (%SECURITY = 1 or %SECURITY = 2)
X      %THEN
X      def integer valid_override()
X        valid_override = 0
X      end def
X      %END %IF
X    %END %IF
X`20
X    ! checkint returns 1 if string is all integers, -1 otherwise
X    def integer checkint(string str_val$)
X      checkint=1
X      for cic=1 to len(str_val$)
X        if ascii(mid$(str_val$,cic,1))<48 or &
X`09`09ascii(mid$(str_val$,cic,1))>57 then
X`09  checkint=-1
X        end if
X      next cic
X      checkint=intp
X    end def
X          `20
X
X    ! ----------------------- Initializations --------------------------
X    when error in
X    melt = 0
X    pr::time_owned = 1
X    pr::chan1=1\pr::chan2=2
X    pr::score=0\pr::thargoid=0\pr::escapes=0 ! player stats initialization
X    pr::on_ground=1\pr::energy=0\pr::shiptype=0
X    pr::kills=0\pr::moves=0\pr::credits=startmoney
X    pr::legal=1\pr::rank=1\pr::scanrange=3\pr::shipnum=0\police_mode%=0
X    pr::planet=int(numplanets*rnd+1)\pr::rpos=0  ! starting planet - check f
Vile
X    pr::message=""\menumode$="none"
X    pr::date(0) = 0
X    pr::date(1) = 0
X    pr::pmode = 0`09`09`09  ! mode of player (god, police)
X    nocheck=0`09`09`09`09  ! timestamp checking enabled
X    ecm_status%=0`09`09`09  ! ecm (if present) is off
X    super_user_mode%=0`09`09`09  ! super_use_mode is off
X    debug%=0                              ! debug%=1 for debug, 0 for normal
X    last_recipient = ""`09`09`09  ! no last message recipient
X    g_option$(1)="OFF"\g_option$(2)="OFF" ! game_options
X    g_option$(3)="OFF"\g_option$(4)="ON"
X    g_option$(5)="OFF"\g_option$(6)="OFF"
X    ! find and hash real ID
X    return_status = lib$getjpi(jpi$_username,,,,n$,)
X    n$=edit$(n$,128%)
X    if len(n$)=3 then n$=n$+"X" end if
X    n$=right$(n$,len(n$)-3)
X    call lib$sys_trnlog("SYS$LOGIN",a%,a$,0%,0%)
X    a$=edit$(a$,160%)`09`09`09  ! convert to uppercase`20
X    a$=mid$(a$,len(a$)-4,4)
X    if left$(a$,1)="`5B" then
X      a$=mid$(a$,2,3)+"X"
X    end if
X    pr::username=a$ ! get username from log. name
X    if left$(n$,4) <> left$(a$,4) then
X      fake_id=1
X    else
X      fake_id=0
X    end if
X    numevents=0                           ! No events in event queue
X    gal_flag=1`09`09`09`09  ! Assume galaxy exists - check later
X    restore
X    for i=1 to 10\read s1$(i)\next i      ! read in planet desc messages
X    for i=1 to 11\read s2$(i)\next i
X    for i=1 to 12\read s3$(i)\next i
X    for i=1 to 10\read s4$(i)\next i
X    for i=1 to 10\read s0$(i)\next i
X    for i=1 to ntequip\read e(i)::ename, e(i)::usedeprice\next i
X    for i=1 to ntcargo
X      read c(i)::trade, c(i)::tprice, c(i)::ttech, checksum, c(i)::unit
X      if ((4*c(i)::tprice)`5E2+17*c(i)::ttech`5E3) <> checksum then
X        goto 10000
X      end if
X    next i
X    for i=1 to ntlegal\read legal$(i)\next i
X
X    for i=1 to ntships
X        read s(i)::sname, s(i)::menergy, s(i)::slaser, s(i)::mlaser, &
X        s(i)::mcargo, s(i)::mmissile, s(i)::rarity, s(i)::cost, &
X        s(i)::mdrive, s(i)::mfuel, s(i)::reliability, s(i)::resale,checksum
X    next i
X
X    for i=1 to ntrank
X        read rank$(i), points(i)
X    next i
X    for i=1 to nactions
X`09read action_cost$(i,1),action_cost$(i,2)
X    next i
X
X    ! ---------------------------------------------------------------
X    !                      Set up Files
X    ! ---------------------------------------------------------------
X
X    when error in
X      open "gal_disk:gal-planets2.dat" as file #1%, organization indexed fix
Ved, &
X          allow modify, access modify, primary key pt::pname duplicates, &
X          map planetmap, contiguous, filesize 100
X
X      open "gal_disk:gal-players1.dat" as file #2%, organization indexed fix
Ved, &
X         allow modify, access modify, primary key op::username, &
X         map playermap, contiguous, filesize 100
X`20
X      open "gal_disk:gal-action3.dat" as file #3%, organization indexed fixe
Vd, &
X         allow modify, access modify, primary key planetaction, &
X         map actionmap, contiguous, filesize 100, extendsize 50
X    use
X      print "Error opening game files - See your game manager."
X      continue 10000
X    end when
X    free #3%\free #1%
X`20
X    when error in                     ! enable control C trapping
X       restore #1%\get #1%, wait 60   ! check if galaxy exists
X    use
X       gal_flag = 0
X    end when`20
X    when error in                    ! check if any players in game     `20
X      restore #2%\get #2%, wait 60   ! eof error ==> create new gal
X    use
X      if gal_flag=1 then
X`09input "Previous Galaxy Saved.  Do you want to keep it (y/n) ";a$
X`09a$=edit$(a$,32%)
X        if a$<>"N" then
X`09  continue 547`09! keep galaxy
X        end if
X      end if
X      continue 2000`09! create new galaxy
X    end when
X547 free #2%\restore #1%
X550 numplanets=0
X    when error in
X      while numplanets<maxplanets
X        get #1%, wait 60
X        free #1%
X        numplanets=numplanets+1
X        xp(numplanets)=pt::xp
X        yp(numplanets)=pt::yp
X        zone(numplanets)=pt::zone
X        name$(numplanets)=pt::pname
X      next
X    use`20
X    end when
X       `20
X600  ! ---------------------------------------------------------------
X     !                        Start Game
X     ! ---------------------------------------------------------------
X     no_save_file=0
X     a$="gal_disk:gal-saves2.dat"
X     open a$ as file #4%, organization indexed fixed, &
X         allow modify, access modify, primary key op::username, &
X         map playermap
X     when error in
X       get #4%, key #0% eq pr::username, wait 60
X     use
X       close #4%
X       no_save_file=1
X     end when
X     if no_save_file=1 then
X       ! check if player is already in game
X       when error in`20
X`09 get #2%, key #0% eq pr::username, wait 60
X         print "Already in Game.  Enter N for a newgame, S to SU current gam
Ve."
X         print "Note:  Selecting S will result in your game being locked."
X         input "N or S > ";sel$
X         sel$=edit$(sel$,32%)
X!         if op::date(1)<>0 then
X!           a = noecho(0%)
X!           print
X!           input "You have a password set, Enter password: ";a$
X`09   a$=edit$(a$,32%)`09! convert to uppercase
X!           a = echo(0%)
X           ! now decrypt
X!           p = 0
X!           for i=1 to len(a$)
X!             p=p+ascii(mid$(a$,i,1))*i
X!           next i
X!           if p<>op::date(1) then goto bad_pass end if
X!         end if
X`09 if sel$="N" or sel$="n" then
X           print "Starting a new game."
X           delete #2%
X           free #2%
X           goto init_planet
X         else
X`09   pr = op
X           print "SUing your game.  See your game manager to get it unlocked
V."
X           pr::date(1)=11
X           gosub 5100
X           goto 8000
X         end if
X       use
X         if fake_id=1 then
X           print "You are not allowed to use an ID alias when creating"
X           print "a character.  ID aliases may only be used to link to"
X           print "an existing character."
X           print
X           if valid_override = 1 then
X             continue init_planet
X`09   else
X             continue 10000
X           end if
X`09 else
X           continue init_planet
X`09 end if
X       end when
X     else    ! player has a save file
X       ! if player has a save file, and is already in game - ditch game
X       when error in
X`09 find #2%, key #0% eq pr::username
X`09 delete #2%\free #2%
X       use
X`09 free #2%
X       end when
X     end if
X     pr = op
X     print "Successful revival from suspended animation."
X     if pr::energy <0 then
X`09print "You have DIED in suspended animation..."
X`09delete #4%
X`09goto 10000
X     end if
X     if pr::shiptype = 0 then
X`09print "No current ship.  Assigning a Yugo..."
X`09pr::shiptype = 23
X`09pr::energy = s(23)::menergy
X`09pr::credits = pr::credits - s(23)::cost
X     end if
X     if pr::date(1)=11 then
X        call sys$gettim(timebuffer)
X        ! if time is up, then allow revival
X       if abs((fill1-pr::timestamp(2)))>ctrlclimit then
X         print "Your CTRL-C lockout has been automatically purged."
X         pr::date(1)=0
X       else
X         print "Your save file is locked due to use of CTRL-C.  Note that"
X`09 print "CTRL-C is *NOT* to be abused.  Your game will be automatically"
X         print "freed in ";ctrlclimit-(fill1-pr::timestamp(2));" ticks."
X         print
X         goto bad_pass
X       end if
X     end if
X     if pr::date(1)<>0 then
X        print
X        a = noecho(0%)
X        input "You have a password set, Enter password: ";a$
X`09a$=edit$(a$,32%)`09! convert to uppercase
X        a = echo(0%)
X        ! now decrypt
X        p = 0
X        for i=1 to len(a$)
X          p=p+(ascii(mid$(a$,i,1))+1)*i
X        next i
X        if p<>pr::date(1) then`20
X          print "User authorization failure - incorrect password."
X          goto bad_pass`20
X        end if
X      end if
X      goto 611
Xbad_pass:
+-+-+-+-+-+-+-+-  END  OF PART 3 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 4 -+-+-+-+-+-+-+-+
X    ! wrong password
X    when error in
X      if valid_override = 1 then
X         pr::date(1)=0
X        goto 611`20
X      end if
X    use
X    end when
X
X    if fake_id = 0 then
X      input "Do you want to DELETE this saved game?  (y/n)";a$
X      if a$="y" or a$="Y" then
X        delete #4%
X        free #4%
X        print "Saved Game DELETED.  Re-run GT to start a new game."  `20
X      end if
X    end if
X    close #4%
X    goto 10000
X
X611 ! success revival from su
X    delete #4%
X    close #4%
X    ! turn on scanner if player is in space
X    if pr::rpos=1 then scanner_on=1\new_smg=1 end if
X    revived$="OK"
X
Xinit_planet:
X    get #1%, key #0 eq name$(pr::planet), wait 60\free #1%
X    gosub 1900
X    gosub restore_options
X    call display(2,)`09`09      `09       ! initialize screens
X    call display(22,)`09`09`09       ! display input window
X    if revived$<>"OK" then
X      gosub 7800                               ! initial display
X      call display(18,)
X      gosub 6000                               ! ship selection
X    else
X      call display(18,)
X    end if
X    call display(4,)
X    op=pr
X    gosub 1700  `09`09`09       ! display status
X    gosub timestamp
X    put  #2`09`09`09`09       ! update timestamp
X    free #2`20
X    sender$="GPHQ"
X    if revived$="OK" then
X      m$=pr::username+ " has just been revived from suspended animation."
X    else
X      m$=pr::username+" has just been granted a trading license."
X    end if
X    chan=0
X    gosub broadcast_message
X    free #1%
X`20
X    ! ----------------------------------------------------------------
X    !                          Main Input Loop
X    ! ----------------------------------------------------------------
X    a%= CTRLC
X    while 1=1
X      get #2%, key #0% eq pr::username, wait 60\free #2%
X      if mid$(op::message,1,1)<>" " then`09`09! process incoming
X        gosub 1200
X      end if
X      menumode$="main"
X720   option$="MAIN> "\call display(1,option$)
X      sender$=pr::username
X      select option$
X`09   case "?","help"
X               gosub help
X           case "q"
X               gosub 900
X                  if quit=1 then
X                  a$="You retire."
X                  call display(23,a$)
X                  goto 8000
X               end if
X           case "su"
X               if pr::on_ground<>1 then
X                 call display(33,"You have to land to suspend.")
X               else
X!                 if pr::date(1)=0 then
X!                   a = noecho(0%)
X!                   a$="Enter password> "
X!`09`09   call display(1,a$)
X!`09`09   a$=edit$(a$,32%)
X!                   a = echo(0%)
X                   ! now encrypt
X!                   pr::date(1) = 0
X!                   for i=1 to len(a$)
X!                     pr::date(1)=pr::date(1)+ascii(mid$(a$,i,1))*i
X!                   next i
X!                 end if
X                 gosub 5100
X               end if
X           case "ba"
X               if pr::on_ground<>1 then
X                 call display(33,"You have to land to bank.")
X               else
X                 gosub 1800
X               end if
X           case "w"
X               gosub 1300
X           case "p"
X               gosub 2100
X`09       call display(17,)
X`09       call display(31,)
X           case "c"
X              gosub 2200
X           case "j"
X               gosub 2300
X           case "l"
X               gosub 2400
X           case "t"
X               gosub 2500
X           case "o"
X               gosub 2800
X           case "s"
X               gosub 1000
X           case "b"
X               gosub 1100
X`09   case "tu"
X`09       gosub tune_comlink
X`09   case ""
X`09`09! do nothing
X           case else
X               call display(33,"Invalid Command - Enter '?' for help")
X               goto 720
X      end select
X      for i=1 to ntrank
X        if pr::score>=points(i) then
X          pr::rank=i
X        end if
X      next i
X      get #2%, key #0% eq pr::username, wait 60
X      gosub timestamp
X      pr::timestamp(1) = op::timestamp(1)
X      pr::timestamp(2) = op::timestamp(2)
X      op::legal=pr::legal\op::rank=pr::rank\op::kills=pr::kills
X      op::credits=pr::credits\op::planet=pr::planet\op::score=pr::score
X      op::shiptype=pr::shiptype
X      update #2%\free #2%
X    next                                         ! end main loop
X
XTimestamp:
X    ! ----------------------- Timestamp ---------------------------
X    call sys$gettim(op::timestamp(1))
X    return
X
XChecktime:
X    ! ----------------------- Check time --------------------------
X    when error in
X      call sys$gettim(timebuffer)
X      ! if time is up, then remove offending record
X      if abs((fill1-op::timestamp(2)))>timelimit then
X`09if op::username<>pr::username then
X`09  get #2%, key #0% eq op::username, wait 60%
X`09  expired_planet=op::planet
X`09  gosub other_save`09`09! try to save player
X`09  delete #2%
X`09  get #3%, key#0% eq name$(expired_planet), wait 60%
X`09  for i=1 to maxships
X`09    if t(i)::username=op::username then
X`09      t(i)::ship=-1
X`09      t(i)::sintent=-1
X`09      t(i)::player=0
X`09      t(i)::username="t up"
X`09    end if
X`09  next i
X`09  update #3%
X`09end if
X      end if
X    use
X    end when
X    free #2%\free #3%     `20
X    return
X
Xtune_comlink:
X     ! -------------- Tune comlink radio channels ------------------
X     a$="Channel 1 setting (01 to 99) `5B"+str$(pr::chan1)+"`5D> "
X     call display(1,a$)
X     a = val(a$)
X     if a<0 or a>99 or a<>int(a) then
X       call display(33,"Invalid Channel Number")
X       goto tune_comlink
X     end if
X     if a<>0 then
X       pr::chan1 = a
X     end if
Xtune_second:
X     a$="Channel 2 setting (01 to 99) `5B"+str$(pr::chan2)+"`5D> "
X     call display(1,a$)
X     a = val(a$)
X     if a<0 or a>99 or a<>int(a) then
X       call display(33,"Invalid Channel Number")
X       goto tune_second
X     end if
X     if a<>0 then
X       pr::chan2 = a
X     end if
X
X! update channels and mode in the player record
Xupdate_player:`20
X     get #2%, key# 0% eq pr::username, wait 60%
X     op::chan1 = pr::chan1
X     op::chan2 = pr::chan2
X     op::pmode = pr::pmode
X     update #2%\free #2%
X
X     return
X
X900  ! -------------------------------------------------------------
X     !                          Quit
X     ! -------------------------------------------------------------
X     p$= "REALLY QUIT? (Y/N) "\call display(1,p$)
X     if p$="y" then
X        quit=1\m$=pr::username+" has retired."\sender$="GPHQ"
X        chan=0
X        gosub broadcast_message
X     else quit=0
X     end if
X     return
X`20
X1000 ! ------------------------------------------------------------
X     !                         Send
X     ! ------------------------------------------------------------
X     sender$=pr::username
X1020 if last_recipient = "" then
X`09u$="SEND TO> "
X     else
X`09u$="SEND TO ("+last_recipient+") "
X     end if
X     call display(1,u$)
X     u$=edit$(u$,32%)
X     if u$="" and last_recipient <> "" then
X`09u$=last_recipient
X     end if
X     if pr::on_ground = 0 then
X       for i=1 to noship
X         if u$=edit$(t(i)::username,128%) and t(i)::player=0 then
X           goto send_valid
X         end if
X       next i
X     end if
X     if valid_id(u$)=0 then`20
X       return
X     end if
Xsend_valid:
X     last_recipient = u$
X
X     m$="MESSAGE> "
X     call display(34,m$)
X
X     if m$ = "" then return end if
X     if super_user_mode%=0 then
X       if instr(1%,m$,"%%")<>0 or instr(1%,m$,"@")<>0 then`20
X         call display(33,"Control Characters not allowed.")
X         goto 1020
X       end if
X     end if
X     if u$="GPHQ" then
X        if left$(m$,3)="who" then`20
X          goto 1300
X
X`09! police mode for Public Safety`20
X        else`20
X           if left$(m$,5)=policemode then
X`09    police_mode%=1
X`09  %IF (%SECURITY = 0 or %SECURITY = 1)
X          %THEN
X`09`09! Super user mode for "testing"
X`09  else`20
X             if left$(m$,8)=superusermode then
X`09      if len(m$)>9 then`09`09`09! get mode bits`09`09`09
X                pr::pmode = val(mid$(m$,10,5))
X              else
X                pr::pmode = 0
X              end if
X`09      super_user_mode%=1
X              gosub update_player
X`09    else`09`09`09`09`09! else, clear it all
X              police_mode%=0
X              super_user_mode%=0
X              pr::pmode = 0
X              gosub update_player
X            end if
X`09  %END %IF
X          end if
X          sender$="GPHQ"\u$=pr::username
X          m$="Insufficient authorization - Get lost."
X        end if
X     end if
X     if pr::on_ground =0 then
X       for i=1 to noship
X          if u$=edit$(t(i)::username,128%) and t(i)::player=0 then
X             gosub 1400
X             if u$="" then`20
X`09       return
X             end if
X          end if
X       next i
X     end if
X     m$ = " "+m$
X
Xsend_message:
X     when error in
X       get #2%, key #0% eq u$, wait 60
X       if mid$(op::message,1,1)=" " then
X          op::message=sender$+":"+m$+"@"
X       else
X`09  op::message=left$(op::message,instr(1,op::message,"@ "))+sender$ &
X`09   +":"+m$+"@"
X       end if
X       update #2%\free #2%
X     use
X       call display(33,"The trader id "+u$+" is invalid.")
X       free #2%
X     end when
X     return
X`20
X1100 ! -------------------------------------------------------------
X     !                       Broadcast
X     ! -------------------------------------------------------------    `20
X     m$= "CHANNEL (RETURN for public)> "
X     call display(34,m$)
X     chan=val(m$)
X     if chan<0 or chan>99 or chan<>int(chan) then
X       call display(33,"Invalid channel Number.")
X       goto 1100
X     end if
X     if chan<> 0 then
X       m$="MESSAGE`5B"+str$(chan)+"`5D> "
X     else
X       m$="MESSAGE> "
X     end if
X     call display(34,m$)
X     if police_mode%=1 then
X       sender$="GPHQ"
X     else`20
X       sender$=pr::username
X     end if
X     if m$="" then return end if
X     if super_user_mode%=0 then
X       if instr(1%,m$,"%%")<>0 or instr(1%,m$,"@")<>0 then
X         call display(33,"Control Characters not allowed.")
X         return
X       end if
X     end if
X
Xbroadcast_message:
X     restore #2%
X     u$="0000"
X     if chan<>0 then
X       m$="`5B"+str$(chan)+"`5D '"+m$+"'"
X     else
X       m$ = " '"+m$+"'"
X     end if
X     when error in
X       for j=1 to maxplayers
X         get #2%, key #0 gt u$, wait 60
X         u$=op::username
X         if (op::chan1=chan or op::chan2=chan) or (chan=0) or (op::pmode>1)t
Vhen
X`09   gosub checktime
X           gosub send_message
X         end if
X         free #2%
X       next j
X     use
X     end when
X     return
X`20
X1200 ! -------------------------------------------------------------
X     !                      Print Messages
X     ! -------------------------------------------------------------
X     i% = 1
X
Xprint_loop:
X     e% = instr(i%,op::message,"@")
X     if e%=0 then
X`09goto done_print
X     else
X      if mid$(op::message,i%+5,2)="%%" then        ! decode event + enqueue
V it
X         if numevents<20 then numevents=numevents+1 end if
X         ev(numevents)::event=mid$(op::message,i%+7,2)
X         ev(numevents)::source=mid$(op::message,i%,4)
X         select ev(numevents)::event
X           case "ab"
X           case "eb"
X           case "mi","la","mo"
X             ev(numevents)::dest=mid$(op::message,i%+9,4)
X`09     ev(numevents)::p1=val(mid$(op::message,i%+13,e%-i%-14))
X         end select
X      else`09`09`09`09`09! not event, show it
X`09call display(23,mid$(op::message,i%,e%-i%))
X      end if
X     end if
X     i% = e%+1`09`09`09`09`09! i points to start of next
X     goto print_loop
X
Xdone_print:`09`09`09`09`09! all done, clear incoming
X     op::message = ""
X     find #2%, key #0% eq pr::username, wait 60%
X     update #2%
X     free #2%
X     return
X`20
X
X1300 ! -------------------------------------------------------------
X     !                      Galactic Report
X     ! -------------------------------------------------------------
X     if scanner_on=1 then call display(12,) end if
X     call display(4,)`20
X     if pr::legal>1 then
X        a$="Surrender to the nearest Galactic Police ship immediately."
X`09call display(24,a$)
X     else
X        u$="0000"
X        a$="Galactic Police Status Report as of "+time$(0%)+" GST"
X        call display(23,a$)
X        a$="Trader ID       Commander       Legal Status     Rank" &
X`09`09+"       Kills      Planet"
X        call display(24,a$)
X        call display(24,"")
X        when error in
X          for j=1 to maxplayers
X            get #2%, key #0 gt u$, wait 60
X            free #2%\u$=op::username\a$=op::personalname
X            m$=u$+space$(16-len(u$))+a$+space$(16-len(a$))
X            a$=legal$(op::legal)
X            if(op::pmode>100) then
X`09      b$ = "**GOD**"
X            else
X              b$=rank$(op::rank)
X            end if
X`09    c$=str$(op::kills)
X            m$=m$+a$+space$(17-len(a$))+b$+ &
X               space$(14-len(b$))+c$+space$(8-len(c$))+name$(op::planet)
X            call display(24,m$)
X          next j
X       use
X         free #2%
X`09 continue 1320
X       end when
X     end if
X1320 if scanner_on=1 then
X`09new_smg=1
X`09gosub 3000
X     end if
X     return
X`20
X1400 ! ---------------------------------------------------------------
X     !                Computer Controlled Ship Replies
X     ! ---------------------------------------------------------------
X     sender$=t(i)::username\u$=pr::username
X     if t(i)::ship<>1 then
X       if rnd>.6 and t(i)::ship<>10 then
X          m$="Shut up or I'll E-Bomb you."
X       else u$=""
X       end if
X       return
X     end if
X     if pr::legal=1 then m$="ComLink Abuse is a Galactic Offense." end if
X     if pr::legal=2 then
X       if (left$(m$,1)="a" or left$(m$,1)="A") then
X          if menumode$="manual" then
X            m$="Good.  I'm glad you've decided to cooperate.  Stand by for"
X            m$=m$+" boarding."
X            get #3%, key #0% eq name$(pr::planet), wait 60
X            t(i)::sintent=15
+-+-+-+-+-+-+-+-  END  OF PART 4 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 5 -+-+-+-+-+-+-+-+
X            update #3%\free #3%
X            pr::legal=1
X          else
X            m$="You are not authorized to respond from hyperspace, SCUM."
X          end if
X       else
X          if left$(m$,1)="r" or left$(m$,1)="R" then
X            m$="As you like it... You're doomed now."
X            t(i)::sintent=2
X            pr::legal=3
X          else
X            m$="Please Accept or Refuse boarding, this is your last chance."
X          end if
X       end if
X     end if
X     if pr::legal>2 then
X        m$="It's too late for words now, you're going to PAY with your life.
V."
X     end if
X     return
X
X
X
X     ! add a player to the current action file.  Note - this routine
X     ! returns with the action file locked (if rec found) An update on it sh
Vould
X     ! be done as soon as possible following return from this code.      `20
Xadd_player_to_action:
X     ! print "Adding player to action record"
X     new_action = 0
X     when error in
X       get #3%, key #0% eq name$(pr::planet), wait 60
X     use
X       if err=155 then
X         new_action = 1
X         ! no action record -> must create one`20
X         planetaction = name$(pr::planet)
X         for i=1 to maxships
X           t(i)::sintent=0\t(i)::player=0\t(i)::others(1)=0\t(i)::others(2)=
V0
X           t(i)::ship=0\t(i)::smissile = 0
X`09   t(i)::special=0
X         next i
X         noship = 0
X       else
X         continue 9000
X       end if
X     end when
X
X     i=next_ship
X     ! print "Adding into slot ";i
X     if i=200 then goto 9000 end if`09! action file capacity exceeded
X     if i > noship then
X       noship = i
X     end if
X     pr::shipnum = i
X     ! add record
X     t(i)::username=pr::username\t(i)::senergy=pr::energy
X     t(i)::smissile=pr::equip(13)\t(i)::sintent=0
X     t(i)::spos=pr::rpos\t(i)::player=2\t(i)::others(1)=0
X     t(i)::others(2)=0
X     t(i)::ship=pr::shiptype
X     ! cargo carried    cargo(1) is # of item, cargo(2) is amount
X     t(i)::cargo(1)=0\t(i)::cargo(2)=0
X     for a1=1 to ntcargo`09`09! determine primary cargo
X       if pr::cargo(a1)>t(i)::cargo(1) then
X         t(i)::cargo(1)=a1
X         t(i)::cargo(2)=pr::cargo(a1)
X       end if
X     next a1
X
X     ! far away thargs appear when someone jumps into a WZ.
X     if (pt::zone=1) and noship<140 then
X       b=int(pr::thargoid*rnd+3)
X     else`20
X       b=0
X     end if
X     where = int (50+50*rnd)
X     for a1=1 to b
X       if noship<150 then
X         noship=noship+1
X         t(noship)::ship=9
X         t(noship)::spos=int(5*rnd + where)
X         shipno=noship
X         gosub 3100
X         t(noship)::senergy=s(9)::menergy
X         t(noship)::smissile=s(9)::mmissile
X         t(noship)::username="TH"+str$(int(noship))
X       end if
X     next a1    `20
X     return
X    `20
Xdelete_player_from_action:
X     when error in
X       get #3, key #0% eq name$(oldplanet), wait 60
X     use
X       if err=155 then
X         ! print "Not in an old action record."
X`09 continue done_delete ! action record has disappeared
X       else
X       `09 continue 9000`09`09! can't handle error
X       end if
X     end when    `20
X     ! print "Deleted from old action record"
X     keep=0                     ! set keep if someone else there
X     for i=1 to maxships
X       if t(i)::player<>0 and t(i)::username<>pr::username then keep=1
X       end if
X       if t(i)::username=pr::username and (t(i)::player=1 or &
X`09`09`09`09`09  t(i)::player=2) then
X          t(i)::ship=-1
X`09  t(i)::sintent=-1
X          t(i)::username="GONE"
X          t(i)::player=0
X       end if
X     next i
X     if keep=1 then`09`09! save action record (other player present)
X       ! print "Saving the old action record"
X       update #3%
X       free #3%
X     else`09`09`09! trash action record
X       ! print "Trashing the old action record - no one else there."
X       delete #3%
X       free #3%
X     end if
Xdone_delete:
X     return
X`20
X1700 ! -------------------- Display Status Line ---------------
X     dpos=pr::rpos*2000\ddir=pr::direction\denergy=pr::energy\dfuel=pr::fuel
X     dmissiles=pr::equip(13)\dcredits=pr::credits\call display(3,)
X     cloak=pr::cloak\ lsj = pr::lsj\ecm = ecm_status%
X     return
X`20
X1800 ! ------------------------- Bank ---------------------------
X     if scanner_on=1 then call display(12,) end if
X     call display(4,)
X     if pt::tech<3 then
X        a$= "Banking facilities not available on "+edit$(pt::pname,128%)+"."
X        call display(23,a$)
X        return
X     end if
X     if revived$="OK" then
X`09a$= "The Bank is temporarily closed for restructuring."
X        call display(23,a$)
X`09return
X     end if
X`09call display(4,)
X        a$= "Welcome to the local branch of the Galactic Bank."
X`09call display(24,a$)
X        call display(24,"")
X        a$= "1) Request a Loan."
X`09call display(24,a$)
X        a$= "2) Repay a Loan."
X`09call display(24,a$)
X        a$= "3) ComLink credits transfer."
X`09call display(24,a$)
X        a$="Select option (0 to exit.)"
X`09call display(23,a$)`09
X1810    a$="OPTION> "
X        call display(1,a$)\a=val(a$)
X        select a
X          case 1
X`09    if loan_reject=1 then
X`09      a$= "You've already been rejected.  Get Out!"
X              call display(23,a$)
X`09      goto 1810
X`09    end if
X            a$="Enter amount to borrow> "\call display(1,a$)\a=val(a$)
X`09    if a<=0 then
X`09`09call display(33,"Cancelled.")
X`09`09goto 1810`20
X`09    end if
X`09    if a+int(a/2*rnd)>pr::credits*2 then goto reject end if
X`09    if pr::legal<>1 then goto reject end if
X`09    if pr::escapes>50 then goto reject end if
X`09    if pr::debt>0 then goto reject end if
X`09    pr::interest=20+int(10*rnd)
X`09    a$= "Congratulations - Your loan request has been approved."
X            call display(23,a$)
X`09    a$= "You are hereby loaned "+str$(a)+&
X`09`09" credits at a per jump interest"
X            call display(23,a$)
X`09    a$= "rate of "+str$(pr::interest)+ &
X`09`09"%.  The principal and interest are"
X            call display(23,a$)
X`09    a$= "due after 5 jumps."
X            call display(23,a$)
X`09    pr::due=pr::moves+5
X`09    pr::credits=pr::credits+a
X`09    gosub 1700
X`09    pr::debt=a
X`09    loan_reject = 1
X`09    goto 1810
Xreject:`09    a$= "We regret to inform you that we cannot approve your loan.
V"
X            call display(23,a$)
X`09    loan_reject=1
X`09  case 2
X`09    a$= "You owe "+str$(pr::debt)+" due in "+str$(pr::due-pr::moves)+ &
X`09`09" jumps."
X            call display(23,a$)
X`09    a$="Enter amount to repay> "\call display(1,a$)\a=val(a$)
X`09    if a<=0 or pr::credits-a < 0 then`20
X`09`09call display(33,"Cancelled.")
X`09`09goto 1810`20
X`09    end if
X`09    pr::credits=pr::credits-a
X`09    gosub 1700
X`09    pr::debt=pr::debt-a
X`09    a$= "Thank you for your payment."
X            call display(23,a$)
X`09    if pr::debt<0 then pr::debt=0 end if
X          case 3
X            if pr::moves<5 and super_user_mode%=0 then
X`09      a$= "As a new trader, you are not authorized to transfer credits."
X              call display(23,a$)
X            else
X`09      u$ = "Enter beneficiary of transfer> "
X              call display(1,u$)
X              u$=edit$(u$,32%)
X              if u$ = "" then
X`09        goto 1810
X`09      end if
X`09      if valid_id(u$) = 0 then
X`09        goto 1810
X              end if
X              a$= "Enter amount to be sent> "
X              call display(1,a$)
X              a=val(a$)
X              if a<0 or a>pr::credits-pr::debt then
X                call display(33,"Invalid amount.")
X                goto 1810
X              end if
X`09      if a>1000000 then
X`09`09call display(33,"Credit Transaction cannot be performed without Federa
Vtion approval.")
X`09`09goto 1810
X`09      end if
X              pr::credits=pr::credits-a
X              get #2%, key #0% eq pr::username, wait 60
X`09      op::credits=pr::credits
X              update #2%\free #2%
X              gosub 1700
X              sender$=pr::username
X              m$="%%mo"+u$+str$(int(a*9/10))+"."
X              a$= "Sending... Transaction charges: "+str$(int(a*1/10))
X              call display(23,a$)
X              gosub send_message
X            end if
X          case 0
X            goto 1850
X       end select
X     goto 1810
X1850 if scanner_on=1 then
X        new_smg=1
X        gosub 3000
X     end if
X     return
X
Xinit_equipment:
X     factor=1-(pt::tech*2)/100+(10-pt::population)/20
X     fuelprice=int(5-pt::tech/2+int(2*rnd))
X     for i=1 to 24
X       e(i)::eprice=-1
X     next i
X     if pt::tech>8 then
X       e(16)::eprice=int(15000*factor+2000*rnd)
X       e(23)::eprice=int(6000*factor+1000*rnd)
X       e(14)::eprice=int(60000*factor+6000*rnd)
X       e(18)::eprice=int(18000*factor+3000*rnd)
X     end if
X     if pt::tech=10 then
X       e(19)::eprice=int(40000*factor+2000*rnd)
X       e(15)::eprice=int(70000*factor+5000*rnd)
X       if rnd>.98 then e(22)::eprice=int(50000*factor+5000*rnd) end if
X     end if
X     if pt::tech>7 then
X       e(5)::eprice=int(8000*factor+1000*rnd)
X       e(6)::eprice=int(8000*factor+1000*rnd)
X       e(9)::eprice=int(5000*factor+500*rnd)
X       e(12)::eprice=800*factor
X       e(24)::eprice=int(4000*factor+1000*rnd)
X     end if
X     if pt::tech>3 then
X       e(3)::eprice=int(4000*factor+500*rnd)
X       e(4)::eprice=int(4000*factor+500*rnd)
X       e(7)::eprice=int(2000*factor+200*rnd)+int(1500+1000*rnd)*pr::escapes
X       e(11)::eprice=int(5000*factor+200*rnd)
X     end if
X     e(1)::eprice=int(500*factor+100*rnd)
X     e(2)::eprice=int(500*factor+100*rnd)
X     e(8)::eprice=int(800*factor+200*rnd)
X     e(10)::eprice=int(700*factor+100*rnd)
X     e(13)::eprice=50
X     shipsale=pt::tech+pt::population
X     for i=1 to ntships
X       s(i)::soldhere=0
X       if ((shipsale*rnd*rnd)>=s(i)::rarity) and (s(i)::rarity<9) then
X         s(i)::soldhere=1
X       end if
X       if i=9 and pt::zone<>4 then s(i)::soldhere=0 end if
X       if pt::zone=1 and i=12 and rnd>.5 then s(i)::soldhere=1 end if
X       s(i)::neg_cost = s(i)::cost
X       s(i)::temperature = -1
X     next i
X     return
X
X1900 ! ---------------------- Initialize Planet -------------------
X     gosub init_equipment
X     for i=1 to 10
X        c(i)::pprice=int(c(i)::tprice*(.7+rnd/2))
X        if pt::tech<c(i)::ttech then
X          c(i)::qtrade=-1
X        else
X          c(i)::qtrade=pt::population*10+int(50*rnd)
X        end if
X        if pt::zone=1 and c(i)::qtrade<>-1 then c(i)::qtrade=c(i)::qtrade*2+
V &
X           int(100*rnd)
X        end if
X        if pt::zone=4 and c(i)::qtrade<>-1 then c(i)::qtrade=c(i)::qtrade*3
X`09end if
X        if pt::zone=2 and c(i)::qtrade<>-1 then c(i)::qtrade=c(i)::qtrade+ &
X           int(30*rnd)
X`09end if
X      next i
X`20
X      if pt::trade=1 then c(1)::qtrade=c(1)::qtrade+50+ &
X         int(10*pt::population*rnd)
X      end if
X      if pt::trade=1 then c(9)::pprice=c(9)::pprice+int(10*rnd) end if
X      if pt::trade=3 then c(9)::pprice=c(9)::pprice-int(10*rnd) end if
X      if pt::trade=3 then c(9)::qtrade=c(9)::qtrade+int(50*rnd) end if
X      if pt::trade=5 then c(6)::pprice=c(6)::pprice+int(20*rnd) end if
X      if pt::tech>8 then c(8)::pprice=c(8)::pprice-int(15*rnd) end if
X      if pt::government=10 or pt::government=5 then c(7)::pprice= &
X         int(c(7)::pprice/2)
X      end if
X      if pt::population>7 then c(1)::pprice=c(1)::pprice+int(2*rnd+1) end if
X      if pt::tech<5 then c(6)::pprice=c(6)::pprice-int(10*rnd+5) end if
X      if pt::tech<5 then c(7)::pprice=c(7)::pprice-int(20*rnd) end if
X      if pt::tech>8 then c(7)::pprice=c(7)::pprice+int(50*rnd+10) end if
X      if pt::trade=10 then c(4)::pprice=int(c(4)::pprice/2) end if
X      if pt::tech>6 then c(5)::pprice=c(5)::pprice+int(10*rnd+6) end if
X      if pt::tech<4 then c(3)::pprice=c(3)::pprice-int(5*rnd+1) end if
X      if pt::law<5 then c(2)::pprice=c(2)::pprice+int(10*rnd+10) end if
X      if pt::trade<5 then c(1)::pprice=c(1)::pprice+int(2*rnd) end if
X      if pt::trade=2 then c(1)::pprice=c(1)::pprice+int(2*rnd) end if
X      if (pt::trade=6 and (c(2)::pprice>0)) then c(2)::pprice=c(2)::pprice-
V &
X         int(3*rnd)
X      end if
X      c(10)::pprice=int(50*rnd+50)
X      if c(3)::pprice=0 then c(3)::pprice=1 end if
X      if pt::zone=1 then
X        c(8)::pprice=c(8)::pprice*2+int(70*rnd+20)
X        c(9)::pprice=c(9)::pprice*3
X        c(6)::pprice=c(6)::pprice-int(60*rnd+50)
X      end if
X      ! set  base prices to initial current prices
X      for i=1 to ntcargo
X        c(i)::bprice = c(i)::pprice
X      next i
X      if pt::zone=4 then c(7)::pprice=int(c(7)::pprice/2) end if
X      if pt::zone=3 then c(10)::pprice=c(10)::pprice-int(10*rnd+5) end if
X      return
X`20
X2000 ! --------------------------------------------------------------
X     !                      Create New Galaxy
X     ! --------------------------------------------------------------
X     print "Please wait while I set off the Big Bang..."
X     close #1%
X     close #3%
X     when error in
X       kill "gal_disk:gal-planets2.dat"
X       kill "gal_disk:gal-action3.dat"
X       open "gal_disk:gal-planets2.dat" as file #1%, organization indexed fi
Vxed, &
X          allow modify, access modify, primary key pt::pname duplicates, &
X          map planetmap, contiguous, filesize 100
X       open "gal_disk:gal-action3.dat" as file #3%, organization indexed fix
Ved, &
X          allow modify, access modify, primary key planetaction, &
X          map actionmap, contiguous, filesize 100, extendsize 50
X     use
X       print "Insufficient Priv to initiate Big Bang - See your Game Manager
V."
X       continue 10000
X     end when
X     restore #1%
X     ! loop in which galaxy initialized
X     numplanets = 100      ! 100 planets standard galaxy size
X2030 for i=1 to numplanets
X        pt::pname=edit$(pnamegen(""),32%)
X        pt::zone=int(10*rnd+1)
X        pt::xp=int(60*rnd+1)+int(20*rnd+1)-40
X        if sqr(pt::xp`5E2+pt::yp`5E2)<5 then pt::zone=5
X        end if
X        pt::population=int(10*rnd+1)
X        if pt::zone=1 then pt::government=int(3*rnd)+8
X        end if
X        if pt::zone=2 then pt::government=int(4*rnd)+5
X        end if
X        if pt::zone=3 then
X           pt::government=int(10*rnd+1)
+-+-+-+-+-+-+-+-  END  OF PART 5 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 6 -+-+-+-+-+-+-+-+
X        else
X           if pt::zone=4 then pt::government=4
X             else
X                pt::government=int(4*rnd+1)
X             end if
X        end if
X        pt::law=int(10*rnd+1)
X        pt::trade=int(12*rnd+1)
X        select pt::zone
X`09  case 1
X`09    pt::tech=int(5*rnd+3)
X          case 2
X`09    pt::tech=int(4*rnd+7)
X          case 3
X            pt::tech=int(5*rnd+1)
X          case 4
X`09    pt::tech=int(2*rnd+9)
X`09  case else
X            pt::tech=int(9*rnd+1)
X `09end select
X        pt::yp=int(60*rnd+1)+int(20*rnd+1)-40
X`09put #1%
X      next i
X     free #1%
X     goto 550   ! read in local galaxy data
X`20
X2070 ! --------------- Generate Random Name -------------------
X     letter=int(2*rnd)
X     n$=''
X     v$="AEIOU"
X     c$="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
X     for j=1 to int(rnd*3+4)
X        if letter=1 then
X           a=int(5*rnd+1)\n$=n$+mid$(v$,a,1)\letter=0
X        else
X           a=int(26*rnd+1)\n$=n$+mid$(c$,a,1)\letter=1
X        end if
X     next j
X     return
X`20
X2100 ! ----------------- Describe Planet ---------------------
X     call smg$begin_pasteboard_update(new_pid)
X     if scanner_on=1 then call display(12,) end if
X     call display(32,)
X     call display(29,)
X     call smg$end_pasteboard_update(new_pid)
X     a$="Data on:         "+edit$(pt::pname,128%)
X     call display(30,a$)
X     r=sqr(pt::xp`5E2+pt::yp`5E2)
X     ra=atan(pt::xp,pt::yp)
X     a$=""
X     call display(30,a$)
X     a$="Classification:  "+s0$(pt::zone)
X     call display(30,a$)
X     a$="Galactic Coords. Ring:"+str$(int(r))+" Ray:"+ &
X     str$(int(ra))
X     call display(30,a$)
X     a$="Population:      "+str$(pt::population)+" Billion"
X     call display(30,a$)
X     a$="Government:"
X     call display(30,a$)
X     a$="  "+s1$(pt::government)
X     call display(30,a$)
X     a$="Law Level:"
X     call display(30,a$)
X     a$="  "+s2$(pt::law)
X     call display(30,a$)
X     a$="Trade Class:"
X     call display(30,a$)
X     a$="  "+s3$(pt::trade)
X     call display(30,a$)
X     a$="Technical Level: "
X     call display(30,a$)
X     a$="  "+s4$(pt::tech)
X     call display(30,a$)
X     if scanner_on=1 then
X       new_smg=1\gosub 3000
X       call display(31,)
X     end if
X     return
X
Xupdate_prices:
X     ! check whether prices on a planet are to be changed
X     when error in
X       get #3%, key#0% eq name$(pr::planet), wait 60%
X       tp=75*(3+pt::population)
X       for i=1 to ntcargo
X         if c(i)::qtrade>tp then`20
X           c(i)::pprice=int(c(i)::bprice/2+EXP(-(c(i)::qtrade-tp)/(2*tp))* &
X                 c(i)::bprice/2)
X         else
X           c(i)::pprice=c(i)::bprice
X         end if
X       next i
X       update #3%\free #3%
X     use
X     end when
X     return
X`20
X2200 ! ----------------------- Status -------------------------
X     call display(4,)
X     if scanner_on=1 then call display(12,) end if
X     a$="----- Commander "+edit$(pr::personalname,128%)+" ------"
X     call display(24,a$)
X     a$=""
X     call display(24,a$) `20
X     a$="Rank:               "+rank$(pr::rank)
X     call display(24,a$) `20
X     a$="Kills:              "+str$(pr::kills)
X     call display(24,a$)
X     a$="Legal Status:       "+legal$(pr::legal)
X     call display(24,a$) `20
X     call display(24,"")
X     call display(24,"------- Ship Status -------")
X     a$="Type:               "+ edit$(s(pr::shiptype)::sname,128%)
X     call display(24,a$)
X     a$="Empty Cargo Space:  "+ str$(pr::maxcargo)+" units"
X     call display(24,a$)
X     a$="Jump Range:         "+ str$(pr::maxfuel)+" light years"
X     call display(24,a$)
X     a$="Maneuver Speed:    "+ str$((pr::speed)*2000)+" km/s"
X     call display(24,a$)
X     a$="Comlink1, Comlink2: "+str$(pr::chan1)+", "+str$(pr::chan2)
X     call display(24,a$)
X     call display(24,"")
X     if pr::totcargo<>0 then
X`09col_pos=48
X`09row_pos=1
X        a$="Cargo carried  Amount"
X        call display(27,a$)
X        n = 0
X        for i=1 to ntcargo
X          if pr::cargo(i)<>0 then
X            n = n + 1
X            a$=left$(c(i)::trade,13)+"  "+str$(pr::cargo(i))
X            a$=a$+ " "+edit$(c(i)::unit,128%)+"s"`20
X`09    row_pos=n + 2
X            call display(27,a$)
X          end if
X       next i
X     end if   `20
X     call display(17,)
X     call display(4,)
X     a$="Equipment mounted"
X     call display(24,a$)
X     call display(24,"")
X     for i=1 to ntequip
X       if i<>13 and pr::equip(i)=1 then`20
X         a$=" - "+edit$(e(i)::ename,128%)
X         call display(24,a$)
X       end if
X     next i
X     if scanner_on=1 then
X        new_smg=1
X        gosub 3000
X     end if
X     return
X`20
X2300 ! ------------------- Interplanetary Jump ----------------------
X     if pr::on_ground=1 then melt=0 end if
X     if melt=3 then
X       a$="Your ionization reactor is shut down - No jump is possible."
X       call display(23,a$)
X       return
X     end if
X     if scanner_on=1 then call display(12,) end if
X     call display(4,)
X     call display(21,)
X     a$="Worlds within jump range from "+edit$(pt::pname,128%)+ &
X      " are listed above."
X     call display(23,a$)
X     a$="World          Distance    Ring   Ray      Zone"
X     call display(24,a$)
X     p_count=1
X     for i=1 to numplanets
X       ra=atan(xp(i),yp(i))
X       r=sqr(xp(i)`5E2+yp(i)`5E2)
X       d=sqr((xp(i)-pt::xp)`5E2+(yp(i)-pt::yp)`5E2)
X       if d<=pr::fuel and pt::pname<>name$(i) then
X         if p_count/14=int(p_count/14) then`20
X`09   call display(17,)
X           call display(4,)
X         end if
X         a1$=str$(int(d))
X`09 a2$=str$(int(r))
X`09 a3$=str$(int(ra))
X         a$= name$(i)+a1$+space$(12-len(a1$))+a2$+space$(8-len(a2$))+ &
X           a3$+space$(8-len(a3$))+s0$(zone(i))    `20
X        p_count=p_count+1
X`09call display(24,a$)    `20
X       end if
X     next i
X     call display(23,"")
X2320 while 1=1
X       b$=""
X       a$="World to jump to> "\call display(1,a$)
X       if a$="" then
X         if scanner_on=1 then
X           new_smg=1
X           gosub 3000
X         end if
X         return
X       end if
X       b$=edit$(a$,32%)
X       for i=1 to numplanets
X         if b$=name$(i) then`20
X`09   goto 2330`20
X         end if
X       next i
X       call display(33,"Planet name not found.")
X     next
X2330 newplanet=i\d=sqr((xp(newplanet)-pt::xp)`5E2+(yp(newplanet)-pt::yp)`5E2
V)
X     if int(d)>pr::fuel and super_user_mode%=0 then
X       call display(33,"That world is out of jump range.")
X       goto 2320
X     end if
X     if pr::planet=newplanet then melt=2 end if
X     call display(4,)
X     pr::fuel=pr::fuel-int(d)
X     oldplanet=pr::planet
X     pr::planet=newplanet
X     pr::moves=pr::moves+1
X     a$="===== ENGAGING HYPERSPACE DRIVE ====="
X     call display(24,a$)    `20
X     if numevents>0 then gosub 5200 end if
X     row_pos=3
X     col_pos=1
X     for i=3 to 1 step -1
X       a$="HYPERDRIVE ACTIVATION INITIATING: "+str$(i)
X       call display(27, a$)
X       sleep 1
X       if rnd*100>(s(pr::shiptype)::reliability) and melt=2 and &
X`09`09`09`09`09`09`09pr::on_ground=0 then
X`09 call display(24,"")
X         a$="IONIZATION REACTOR OVERLOAD - EMERGENCY ABORT SEQUENCE ACTIVATE
VD"
X         call display(24,a$)
X         melt=1
X       end if
X     next i
X     if melt=1 and rnd>.5 then
X       a$="ABORT PROCESS COMPLETE - REACTOR STABILIZED"
X       call display(24,a$)
X       pr::planet=oldplanet
X       melt=3
X     end if
X     if melt=1 then
X       a$="REACTOR SHUT DOWN FAILED"`20
X       call display(24,a$)
X       condition$="RED"\call display(16,condition$)
X     end if
X     row_pos=5
X     col_pos=1
X     a$="===== HYPERSPACE DRIVE ENGAGED ====="
X     call display(27,a$)
X     call display(24,"")
X     call display(24,"")
X     pr::ban=0\pr::on_ground=0
X     temp = 100 - pr::time_owned/50*s(pr::shiptype)::reliability
X     if temp< s(pr::shiptype)::reliability then`20
X`09temp = s(pr::shiptype)::reliability`20
X     end if
X     if ((rnd*100>temp or melt=1) &
X`09and melt<>3 and super_user_mode%=0) then
X       a$="MISJUMP - Your ship shakes and jerks wildly before stablizing !!!
V!"
X       call display(24,a$)
X       condition$="YEL"\call display(16,condition$)
X       pr::planet=int(numplanets*rnd)+1
X     end if
X     ! update names to be displayed on scanner.
X     pname=name$(pr::planet)
X     ray=atan(xp(pr::planet),yp(pr::planet))
X     ring=sqr(xp(pr::planet)`5E2+yp(pr::planet)`5E2)
X     get #1%, key #0% eq name$(pr::planet), wait 60\free #1%
X     a$="Jump completed - You are orbiting "+edit$(pt::pname,128%)+"."
X     call display(24,a$)
X     revived$=""
X     gosub 4900\gosub 4800`09! tharg messages, zone messages
X     gosub 2100`09`09`09! describe planet
X     loan_reject=0`09`09! free to apply again
X     pr::debt=pr::debt+int(pr::debt*(pr::interest/100))
X     if pr::due-pr::moves=0 and pr::debt>0 then
X`09m$= "Complete Loan repayment of "+str$(pr::debt)+" is due on landing."
X`09sender$="GBNK"
X`09u$=pr::username
X`09gosub send_message
X     end if
X     if pr::due-pr::moves<0 and pr::debt>0 then
X`09m$="You are OVERDUE on your loan repayment.  Your account has been@"+ &
X`09`09"turned over to the police for collection."
X`09sender$="GBNK"
X`09u$=pr::username
X`09gosub send_message
X`09pr::legal=2
X     end if
X     if pr::due-pr::moves<-10 and pr::debt>0 then pr::legal=3 end if
X     pr::rpos=int(12*rnd+5)\pr::direction=1
X     gosub delete_player_from_action`09! delete from last planet
Xadd_to_action:
X     gosub add_player_to_action`09`09! add to new planet action file
X
X     if new_action = 0 then`09! stuff already there - free up action file
X       update #3%\free #3%
X       gosub init_equipment
X       gosub update_prices
X       new_smg=1\gosub 3000
X       return
X     end if
X
X     ! first player to arrive here - initialize everything....
X     ! regenerate quantities available
X     gosub 1900
X     ! determine ships present on completing jump
X     if (pt::zone=2 and rnd>.5) or (pt::zone=3 and rnd>.2) or (pt::zone=4) t
Vhen
X       goto 2381
X     end if
X     if pt::zone>4 and pt::population>3 and pt::tech>3 then
X       ! starbase
X       noship=noship+1
X       t(noship)::ship=20
X       t(noship)::senergy=s(20)::menergy
X       t(noship)::spos=pt::population
X       t(noship)::sintent=0
X       t(noship)::smissile=130
X       t(noship)::username="SB-1"
X     end if
X     for i=1 to pt::law
X       a=rnd
X       if a>.6 then
X`09  ! police ships
X          noship=noship+1
X          t(noship)::ship=1
X          t(noship)::senergy=s(1)::menergy
X          t(noship)::spos=int(15*rnd+1)
X          t(noship)::sintent=0
X          t(noship)::smissile=s(1)::mmissile
X          t(noship)::username="GP"+STR$(noship)
X       end if
X     next i
X2381 for i=1 to pt::government
X       a=rnd
X       if a>.7 then
X`09  ! arbitrary ships other than police
X          noship=noship+1
X          t(noship)::ship=int(9*rnd+2)
X          if t(noship)::ship=10 then t(noship)::ship=19 end if
X          t(noship)::spos=int(15*rnd+1)
X          shipno=noship
X          gosub 3100
X          t(noship)::senergy=s(t(noship)::ship)::menergy
X          if rnd>.97 and pr::moves>10 then`20
X`09    t(noship)::senergy=t(noship)::senergy+100`20
X`09  end if
X          t(noship)::smissile=s(1)::mmissile
X          t(noship)::username="S"+str$(noship)+str$(int(10*rnd))
X       end if
X       if a>.5 then
X`09  ! asteroids
X          noship=noship+1
X          t(noship)::ship=10
X          t(noship)::spos=int(15*rnd+1)
X          shipno=noship
X          gosub 3100
X          t(noship)::senergy=s(10)::menergy
X          t(noship)::smissile=s(10)::mmissile
X          t(noship)::username="-"
X       end if
X       if a>.7 then t(noship)::sintent=0
X       end if
X     next i
X     a=rnd\where=5
X     if (a>.9 and pt::zone>4) or (a>.3 and pt::zone=1) or (pt::zone=4) then
X       b=int((pr::thargoid/1.5)*rnd+1)
X     else b=0
X     end if
X     if b>3 and rnd>.78 then
X       ! thargoid mothership
X       noship=noship+1
X       t(noship)::ship=21
X       t(noship)::spos=int(10*rnd)
X       shipno=noship
X       gosub 3100
X       t(noship)::senergy=s(21)::menergy
X       t(noship)::smissile=s(21)::mmissile
X       t(noship)::username="TMS1"
X     else
X       ! thargoid raid
X       for i=1 to b
X         noship=noship+1
X         t(noship)::ship=9
X         t(noship)::spos=int(5*rnd+where)
X         shipno=noship
X         gosub 3100
X         t(noship)::senergy=s(9)::menergy
X         t(noship)::smissile=s(9)::mmissile
X         t(noship)::username="TH"+str$(int(noship))
X       next i
X     end if
X     if pr::moves>25 or debug%=1 then
X       if rnd>.965 or debug%=1 then
X`09 ! exotic ship encounter
X         noship=noship+1
X         t(noship)::ship=int(4*rnd+15)
X         !t(noship)::ship = 15
X`09 t(noship)::spos = int(7*rnd + 5)
X         shipno=noship
X         gosub 3100
X         t(noship)::senergy=s(t(noship)::ship)::menergy
X         t(noship)::smissile=s(t(noship)::ship)::mmissile
X         t(noship)::username="S"+str$(noship)+str$(int(10*rnd))
X       end if
X     end if
X     if pt::zone=1 then gosub 4500 end if
X     gosub galactic_fleet
X     if pr::rank>3 and pr::legal>2 then gosub 4030 end if
X     if pr::rank>1 and pr::legal>2 then gosub 4000 end if
X     when error in
X       put #3%\free #3%
X     use
X       if err=134 then`09`09! retry adding record if duplicate key
X         continue add_to_action
X       end if
X     end when
X     new_smg=1\gosub 3000
X     return
X`20
X2400 ! ------------------- land on planet -----------------------
X     ! check if already on the ground.
X     jump_flag=0
X     if pr::on_ground=1 then
X        call display(33,"You're already on the planetary surface.")
X        return
X     end if
X     ! display computer activated if in computer mode
X     get #3%, key #0 eq name$(pr::planet), wait 60
X     t(pr::shipnum)::player = 1
X     update #3%\free #3%
X     if g_option$(4)="ON" then
X       a$="===== Landing Computer activated ====="
X       call display(23,a$)
X       call display(15,"ON ")
X     end if
X     ! 50% chance of you having the initiative if landing in manual.
X     if g_option$(4)="OFF" and rnd>.5 then gosub 3300 end if
+-+-+-+-+-+-+-+-  END  OF PART 6 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 7 -+-+-+-+-+-+-+-+
X
X     ! main landing_loop - iterate until ground is reached
X     if debug% = 1 then print "rpos: ";pr::rpos;" on_gnd ";pr::on_ground &
X        ;" jump: ";jump_flag end if
X     while (pr::rpos>0 and pr::on_ground=0 and jump_flag=0)
X       if g_option$(4)="OFF" then
X         a$="MANUAL landing mode active."
X         call display(23,a$)
X         call display(15,"OFF")
X         gosub 3200
X         iterate
X       end if
X       gosub 3300`09`09! update surrounding ships
X       ! check for comlink messages
X       get #2%, key #0% eq pr::username, wait 60\free #2%
X       if mid$(op::message,1,1)<>" " then
X         gosub 1200
X       end if
X       gosub 1700               ! display status
X       ! switch off landing comp if near something of significance
X       if near_important=1 then gosub 2450 end if
X       get #3%, key #0 eq name$(pr::planet), wait 60
X       pr::rpos=pr::rpos-pr::speed
X       if pr::rpos<0 then pr::rpos=0 end if
X       update #3%\free #3%
X     next
X     ! check if player aborted landing sequnce by doing a combat jump
X     if jump_flag=1 then
X       return
X     end if
X     ! make sure player is on ground
X     get #3%, key #0 eq name$(pr::planet), wait 60
X     t(pr::shipnum)::spos = 0
X     update #3%\free #3%
X     call display(4,)\call display(12,)\scanner_on=0
X     a$="===== Landing completed successfully ====="
X     call display(24,a$)
X     if (pr::cargo(2)+pr::cargo(7))<>0 and rnd>.7 and pr::legal=1 then
X         pr::legal=2
X     end if
X     ! update trading computer, if installed
X     if pr::equip(23)=1 then
X       for i=1 to ntcargo
X`09 tracomp%(pr::planet,i)=tracomp%(pr::planet,i)*tracomp%(pr::planet, &
X`09   ntcargo+3)+c(i)::pprice
X`09 if tracomp%(pr::planet,ntcargo+3)<>0 then
X           tracomp%(pr::planet,i)=int(tracomp%(pr::planet,i)/ &
X`09     (tracomp%(pr::planet,ntcargo+3)+1))
X`09 end if
X       next i
X       tracomp%(pr::planet,ntcargo+3)=tracomp%(pr::planet,ntcargo+3)+1
X     end if
X     pr::time_owned = pr::time_owned + 1
X     a=(pr::maxfuel-pr::fuel)*fuelprice+10\melt=0\ecm_status%=0
X     select int((pt::tech+pt::population)/2)
X        case 1,2
X          a$= "You land in a blackened, muddy clearing with wooden huts "+&
X            "surrounding it."
X        case 3,4
X         a$= "You land at a small pre-fab spaceport with minimal facilities.
V"
X        case 5,6
X          a$= "You arrive at a modest, but well-maintained spaceport."
X        case 7,8
X          a$= "You land at an extensive, up-to-date spacecenter."
X        case 9,10
X          a$="You land in a gleaming modern spaceport/trading center on "+ &
X            edit$(pt::pname,128%)+"."
X     end select
X     call display(24,a$)
X     if pt::tech<3 and pr::energy<pr::maxenergy and rnd>.4 then
X        a$= "The energy recharging unit is out of service - Energy not "+ &
X           "recharged."
X        call display(24,a$)
X     else
X        if pr::energy<pr::maxenergy then
X          a$="You recharge your energy unit to maximum capacity."
X          call display(24,a$)
X          pr::energy=pr::maxenergy
X        end if
X     end if
X     if g_option$(5)="ON" and a<=pr::credits then
X       a$="Refueling performed. Cost: "
X       pr::fuel=pr::maxfuel
X       pr::credits=pr::credits-a
X       a$= a$+str$(a)+" Credits."
X       call display(24,a$)
X     end if
X     if g_option$(6)="ON" then
X        a=(pr::maxmissile-pr::equip(13))*50+10
X        if a>pr::credits or a=10 then`20
X`09  a$="No missiles purchased."
X          call display(24,a$)
X        else
X          pr::credits=pr::credits-a
X          a$= str$((a-10)/50)+" Missiles purchased. "+&
X          "Cost:"+str$(a)+" credits."
X           call display(24,a$)\pr::equip(13)=pr::maxmissile
X        end if
X     end if
X     pr::on_ground=1\condition$="GRE"\call display(16,condition$)
X     gosub 1700        !display status
X     return
X    `20
X2450 !  Switch off landing computer - something interesting nearby
X     a$="===== Ship detected nearby - Switching to manual ====="
X     call display(23,a$)
X     condition$="YEL"
X     call display(16,condition$)
X     call display(15,"OFF")
X     gosub 3200
X     ecm_status%=0
X     pr::direction=1
X     if jump_flag=1 then return end if`09`09! combat jump
X     if pr::rpos<>0 then
X       call display(15,"ON ")
X       condition$="GRE"\call display(16,condition$)
X       a$="===== No ships in immediate vicinity - Reactivating landing" &
X         +" computer ====="
X       call display(23,a$)
X     else
X       a$="===== Surface reached - activating landing computer ====="
X       call display(23,a$)
X     end if
X     return
X`20
X2500 ! ------------------------ Trade --------------------------
X     if pr::on_ground<>1 then
X         call display(33,"You have to be on the surface to trade.")
X         return
X     end if
X     call display(4,)
X     call display(5,)\call display(6,a$)
X2510 a$="TRADE> "\call display(1,a$)
X     menumode$="trade"
X     select a$
X`09case "q",""
X`09  return
X`09case "?","help"
X`09  gosub help
X`09case "x"
X`09  gosub 6000
X`09case "f"
X`09  gosub 2550
X`09case "e"
X`09  gosub 2570
X`09case "p"
X`09  gosub 2600
X`09case "b"
X`09  gosub 2650
X`09case "s"
X`09  gosub 2680
X`09case "c"
X`09  gosub 2200
X        case "u"
X`09  if pr::equip(23)<>1 then`20
X`09    call display(33,"Trading computer not fitted.")
X`09  else gosub 2530 end if
X`09case else
X          call display(33,"Invalid Command - Enter '?' for help")
X`09  goto 2510
X      end select
X      goto 2510
X
X2530 ! ---------------------- Use Trading Computer -------------------
X     call display(5,)\call display(6,a$)\menumode$="comp"
X2535 a$="QUERY COMPUTER> "\call display(1,a$)
X     select a$
X`09case "?","help"
X`09  gosub help
X`09case "pl"
X`09  call display(4,)
X`09  a$= "Trade data is available on the following planets."
X          call display(24,a$)`09 `20
X`09  for i=1 to 100
X`09    if tracomp%(i,1)<>0 then`20
X`09      a$= name$(i)
X              call display(24,a$)
X`09    end if
X`09  next i
X`09case "p"
X`09  a$="PLANET> "\call display(1,a$)
X`09  a$=edit$(a$,32%)
X`09  for i=1 to numplanets
X`09    if name$(i)=a$ and tracomp%(i,1)<>0 then goto 2540 end if
X          next i
X`09  call display(33,"No data available on "+a$+".")
X`09  goto 2535
X2540`09  call display(4,)
X`09  a$= "Trading Data on "+edit$(name$(i),32%)+":"
X          call display(24,a$)
X`09  a$= "Item                estimated Price     Samples"
X          call display(24,a$)
X`09  for j=1 to ntcargo
X            a1$=str$(tracomp%(i,j))
X`09    a2$=str$(tracomp%(i,ntcargo+3))
X`09    a$=c(j)::trade+ a1$+space$(20-len(a1$))+ &
X`09`09a2$
X`09    call display(24,a$)
X`09  next j
X`09case "i"
X`09  a$= "Enter Number of item on which you want trading information."
X          call display(23,a$)
X2542`09  a$="ITEM> "\call display(1,a$)
X`09  a=val(a$)\if a=0 then return end if
X`09  if a<1 or a>ntcargo then`20
X`09    call display(33,"Invalid item number.")
X`09    goto 2542
X`09  end if
X`09  call display(4,)
X`09  pmax=0
X`09  pmin=10000
X`09  a$= "Planet              "+edit$(c(a)::trade,128%)+" price."
X`09  call display(24,a$)
X`09  for i=1 to 100
X`09    if tracomp%(i,a)<>0 then`20
X              a$= name$(i)+space$(20-len(name$(i)))+str$(tracomp%(i,a))
X`09      call display(24,a$)
X`09      if tracomp%(i,a)>pmax then
X`09        pmax=tracomp%(i,a)
X`09        psell$=name$(i)
X`09      end if
X`09      if tracomp%(i,a)<pmin then
X`09        pmin=tracomp%(i,a)
X`09        pbuy$=name$(i)
X`09      end if
X`09    end if
X`09  next i
X
X`09  a$= "The best place to buy "+edit$(c(a)::trade,128%)+" is "+pbuy$+&
X`09`09" (price = "+str$(pmin)+")"
X`09  call display(24,a$)
X`09  a$="and the best place to sell is "+psell$+" (price = "+str$(pmax)+")"
X`09  call display(24,a$)
X`09case "","q"
X`09  return
X`09case else
X`09  call display(33,"Invalid command - Enter '?' for help.")
X     end select
X     goto 2535
X    `20
X2550 ! buy fuel
X     call display(4,)
X     a$="Fuel is selling at "+str$(fuelprice)+" credits/lightyear."
X     call display(24,a$)
X     a$="How much do you want to purchase (max "+str$(pr::maxfuel-pr::fuel)+
V")"
X     call display(24,a$)
X2552 a$="FUEL> "\call display(1,a$)\a=val(a$)
X     if a<0 then goto 2550 end if
X     if a=0 then return end if
X     if a+pr::fuel>pr::maxfuel then
X         call display(33,"Your tanks won't hold that much.")
X         goto 2552
X     end if
X     if (pr::credits-fuelprice*a)<0 then
X         call display(33,"You don't have enough money for that!")
X         goto 2552
X     end if
X     pr::credits=pr::credits-fuelprice*a\gosub 1700
X     pr::fuel=pr::fuel+a
X     gosub 1700`09`09`09! update status
X     a$= "You buy "+str$(a)+" lightyears of fuel."
X     call display(24,a$)
X     return
X
X2570 ! equip ship
X     call display(4,)
X     a$="Item                     Price     Item                     Price"
X     call display(24,a$)
X     col_pos=36
X     row_pos=2
X     for i=1 to ntequip
X         if e(i)::eprice<>-1 or super_user_mode% = 1 then
X`09    a1$=str$(e(i)::eprice)
X            a$= str$(i)+space$(3-len(str$(i)))+e(i)::ename+"  "+a1$
X`09    if i>12 then`20
X`09      call display(27,a$)
X`09      row_pos=row_pos+1`09     `20
X            else
X              call display(24,a$)
X`09    end if
X         end if
X     next i
X     call display(24,"")
X     col_pos=1
X     row_pos=14
X     a$="Note: The purchase of an escape capsule includes ship destructi" &
X`09`09+"on insurance."
X     call display(27,a$)
X2583 a$= "Item to purchase> "
X     call display(1,a$)
X     if a$="" then return end if
X     a=val(a$)
X     if a=0 then return end if
X     if a<0 or a>ntequip or a<>int(a) then
X`09call display(33,"Invalid item - re-enter")
X`09goto 2583
X     end if
X     if super_user_mode%=1 then goto 2590 end if
X     if (pr::credits-e(a)::eprice)<0 then`20
X`09call display(33,"You can't afford that!")
X`09goto 2583
X     end if
X     if ((a=1 or a=3 or a=5) and ((a+1)/2>s(pr::shiptype)::mlaser)) or &
X`09(a=14 and s(pr::shiptype)::mlaser<4) or (a=17 and &
X`09s(pr::shiptype)::mlaser<5) then
X       a$="You can't fit that laser on a "+edit$(s(pr::shiptype)::sname,128%
V)
X       call display(23,a$)
X       goto 2583
X     end if
X     if ((a=2 or a=4 or a=6) and (a/2>s(pr::shiptype)::mlaser)) then
X        a$="You can't fit that laser on a "+edit$(s(pr::shiptype)::sname,128
V)
X        call display(23,a$)    `20
X        goto 2583
X     end if
X     if e(a)::eprice=-1 then
X`09call display(33,"That is not sold on this world.")
X`09goto 2583`20
X     end if
X     if a<>13 and pr::equip(a)=1 then
X         call display(33,"You already have one of those!")
X    `09 goto 2583
X     end if
X     if a=13 and pr::equip(a)=pr::maxmissile then
X         call display(23,"Your missile rack is full.")
X         goto 2583
X     end if
X2590 if a=12 then pr::maxmissile=pr::maxmissile+3 end if
X     if a<>13 then
X        a$="You buy a "+edit$(e(a)::ename,128%)+ &
X`09`09" and install it in your ship."
X        call display(23,a$)
X        pr::credits=pr::credits-e(a)::eprice
X        if a=16 then pr::scanrange=4.5 end if
X        gosub 1700
X     end if
X     if a=1 or a=3 or a=5 or a=14 or a=17 then
X         b=(pr::equip(1)+4*pr::equip(3)+8*pr::equip(5)+pr::equip(14)*16 &
X`09`09+ pr::equip(17)*40)*300
X         a$="You get "+str$(b)+" Credits rebate for trading in your old lase
Vr."
X         call display(23,a$)
X         pr::credits=pr::credits+b
X         gosub 1700
X         pr::equip(1)=0
X         pr::equip(3)=0
X         pr::equip(5)=0
X         pr::equip(14)=0
X         pr::equip(17)=0
X     end if
X     if a=2 or a=4 or a=6 or a=10 then
X         b=int(pr::equip(2)+4*pr::equip(4)+8*pr::equip(6)+pr::equip(10)/2)*3
V00
X         a$="You get "+str$(b)+" credits rebate for turning in your old lase
Vr."
X         call display(23,a$)
X         pr::credits=pr::credits+b\gosub 1700
X         pr::equip(2)=0
X         pr::equip(4)=0
X         pr::equip(6)=0
X         pr::equip(10)=0
X     end if
X     if a=13 then
X        gosub 2900
X     else
X        pr::equip(a)=pr::equip(a)+1
X        if a=8 then pr::maxcargo=pr::maxcargo*2 end if
X        if a=11 then pr::maxenergy=pr::maxenergy+100 end if
X     end if
X     goto 2583
X
X2600 ! see rates
X     call smg$begin_display_update(trade_id)
X     call display(4,)
X     a$="The official trade rates on "+edit$(pt::pname,128%)+ &
X`09" are listed above."
X     call display(23,a$)
X     a$="Item                Price          Quantity"
X     call display(24,a$)
X     when error in`20
X       get #3%, key #0% eq name$(pr::planet), wait 60%\free #3%
X     use
X     end when
X     for i=1 to ntcargo
X       a1$=str$(c(i)::pprice)
X       if c(i)::qtrade=-1 then a2$="Not available"
X       else`20
X         a2$=str$(c(i)::qtrade)
X`09 a2$=a2$+space$(5-len(a2$))+edit$(c(i)::unit,128%)+"s"
X       end if
X       a$=str$(i)+space$(3-len(str$(i)))+c(i)::trade+a1$+space$(15-len(a1$))
V+a2$
X       call display(24,a$)
X     next i
X     call display(24,"")
X     a$="Note - the items marked (*) are classified as illegal by the" &
X`09 +" galactic police"
X     call display(24,a$)    `20
X     call smg$end_display_update(trade_id)
X     return
X
X2650 ! buy cargo
X     if revived$="OK" then`20
X`09a$= "The trading center is closed by government order."
X        call display(23,a$)
X        return
X     end if
X2657 gosub 2600    ! view prices
X
X2667 a$="Item to purchase> "
X     call display(1,a$)
X     a=val(a$)
X     if a=0 then return end if
X     if a<0 or a>10 or a<>int(a) then`20
X`09call display(33,"Re-enter")
X        goto 2667
X     end if
X     if a=2 then`20
X`09a$="Note that the slave trade is looked down upon by the" &
X`09`09+" Galactic Police"
X        call display(23,a$)
X      end if
X     a$="<Can afford : "+str$(int(pr::credits/c(a)::pprice))+" "+ &
X`09edit$(c(a)::unit,128%)+ &
X     "s of "+edit$(c(a)::trade,128%)+"  Can carry : "
X     a$=a$+str$( pr::maxcargo-pr::totcargo)+" "+edit$(c(a)::unit,128%)+"s.>"
X     call display(23,a$)
X     if a=7 then
X        a$="Narcotics are a risky business. Beware..."
X`09call display(23,a$)
X     end if
X     if (c(a)::qtrade = -1) then
X        call display(33,"That item isn't available.")
+-+-+-+-+-+-+-+-  END  OF PART 7 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 8 -+-+-+-+-+-+-+-+
X        goto 2657
X     end if
X     a$="Amount to purchase> "\call display(1,a$)\q=val(a$)
X     if q=0 then return end if
X     if q<0 then
X`09call display(33,"Invalid amount - re-enter")
X`09goto 2667
X     end if
X
X     ! make sure quantity available has been updated
X     when error in
X       get #3%, key#0% eq name$(pr::planet), wait 60%
X     use
X     end when
X
X     if q>c(a)::qtrade then`20
X`09call display(33,"There isn't that much for sale.")
X        free #3%
X`09goto 2667
X     end if
X     if q*c(a)::pprice>pr::credits then`20
X        a$="You can only afford up to "+ &
X`09str$(int(pr::credits/c(a)::pprice))+" of "+edit$(c(a)::trade,128%)+"."
X`09call display(23,a$)
X        free #3%
X        goto 2667
X     end if`20
X     if (pr::totcargo+q>pr::maxcargo) then
X        a$="You only have room for "+str$(pr::maxcargo-pr::totcargo)+" "+ &
X           edit$(c(a)::unit,128%)+"s in your hold."
X`09call display(23,a$)
X        free #3%
X        goto 2667
X     end if`20
X     pr::cargo(a)=pr::cargo(a)+q
X     pr::totcargo=pr::totcargo+q
X     if pr::legal=1 and (pr::cargo(2)+pr::cargo(7))*rnd>50*rnd then
X         pr::legal=2
X     end if
X     c(a)::qtrade=c(a)::qtrade-q
X     when error in
X       update #3%\free #3%
X     use
X     end when
X     pr::credits=pr::credits-q*c(a)::pprice\gosub 1700
X     goto 2657
X
X2680 ! sell cargo
X     if revived$="OK" then`20
X`09a$= "The trading center is closed by government order."
X`09call display(23,a$)
X        return
X     end if
X     a$="The traders offer you the above rates per unit of cargo"
X     call display(23,a$)
Xshow_goods:
X     call smg$begin_display_update(trade_id)
X     call display(4,)`09! clear`20
X     a$="Item                   Price          Quantity in hold"
X     call display(24,a$)
X     for i=1 to ntcargo
X        a1$=str$(c(i)::pprice)
X`09a2$=str$(pr::cargo(i))
X        if pr::cargo(i)<>0 then
X          a$=str$(i)+space$(3-len(str$(i)))+c(i)::trade+a1$+ &
X`09     space$(15-len(a1$))+&
X`09     a2$+space$(5-len(a2$))+edit$(c(i)::unit,128%)+"s"
X`09  call display(24,a$)
X       end if
X     next i
X     call smg$end_display_update(trade_id)
X2691 a$="Item to sell> "\call display(1,a$)\a=val(a$)
X     if a<0 or a>10 or a<>int(a) then goto 2691 else if a=0 then return end
V if
X     a$="Quantity to sell> "\call display(1,a$)
X     q=val(a$)
X     if q=0 then return end if
X     if q<0 then q=0 end if
X     if pr::cargo(a)<q then`20
X`09a$="You only have "+str$(pr::cargo(a))+" "+edit$(c(a)::unit,128%)+" "+ &
X`09`09edit$(c(a)::trade,128%)+"."
X        call display(23,a$)
X`09goto 2691
X     end if
X     a$="You sell "+str$(q)+" "+edit$(c(a)::unit,128%)+"s of "+ &
X`09edit$(c(a)::trade,128%)+" and receive "+str$(c(a)::pprice*q)+" credits."
X     call display(23,a$)
X     when error in
X       get #3%, key#0% eq name$(pr::planet), wait 60%
X       c(a)::qtrade=c(a)::qtrade+q
X       update #3%\free #3%
X     use
X       c(a)::qtrade=c(a)::qtrade+q
X     end when
X     pr::cargo(a)=pr::cargo(a)-q
X     pr::credits=pr::credits+c(a)::pprice*q
X     gosub 1700
X     pr::totcargo=pr::totcargo-q
X     if pr::totcargo<>0 then goto show_goods end if
X     return
X`20
X2800 ! ---------------------- Options ------------------------
X     call smg$begin_pasteboard_update(new_pid)
X     if scanner_on=1 then call display(12,) end if
X     call display(4,)
X     a$="             Toggle Controls"
X     call display(24,a$)
X     call display(24,"")
X     a$="1) Ignore Police on Landing          "+g_option$(2)
X     call display(24,a$)
X     a$="2) Ignore Asteroids on Landing       "+g_option$(3)
X     call display(24,a$)
X     a$="3) Landing Computer                  "+g_option$(4)
X     call display(24,a$)
X     a$="4) Automatic Fuel Purchase           "+g_option$(5)
X     call display(24,a$)
X     a$="5) Automatic Missile Purchase        "+g_option$(6)
X     call display(24,a$)
X     a$="6) Save Options settings`09      "
X     call display(24,a$)
X     call display(24,"")
X     call display(24,"")
X     a$="Enter number of feature you want to toggle or return to cancel"
X     call display(24,a$)
X     call smg$end_pasteboard_update(new_pid)
Xtoggle_option:
X     call display(26,a$)
X     if a$="0" or a$=CR or a$=LF then
X        if scanner_on=1 then
X          new_smg=1
X          gosub 3000
X        end if
X        return
X     end if
X     if a$<"1" or a$>"7" then goto toggle_option end if
X     a=val(a$)
X     select a
X       %IF (%SECURITY = 0) %THEN
X       case 7
X! Only allow superusers to use debug mode
X         if super_user_mode%=1 then debug%=1 end if
X       %ELSE
X       case 7
X       %END %IF`20
X       case 6
X         gosub save_options
X       case else
X         if g_option$(a+1)="ON" then g_option$(a+1)="OFF"`20
X         else g_option$(a+1)="ON" end if
X     end select
X     goto 2800
X
Xhelp:
X     ! provide a list of relevant commands along with a 1 line description
X     when error in
X       open "gal_disk:gal-help.dat" for input as file #4%
X       input #4%, a$
X       while a$<>menumode$
X`09 input #4%,a$
X       next
X       call display(7,)
X       call display(19,)
X       ! display 21 lines of help text
X       for a=1 to 21
X         input #4%,a$
X         call display(8,a$)
X       next a
X       call display(17,)
X       call display(20,)
X     use
X`09a$="An error has occured in HELP.  Check that gal-help.dat is"
X`09call display(23,a$)
X`09a$="present and up to date."
X`09call display(23,a$)
X     end when
X     close #4%
X     return
X
Xrestore_options:
X     ! -------------------- Restore Menu Options ------------------
X     saved_options=1
X     when error in
X       open "sys$login:"+pr::username+".OPT" for input as file #4%
X       for i=2 to 6
X         input #4%, g_option$(i)
X       next i
X     use
X       saved_options=0
X     end when
X     close #4%
X     return
X
Xsave_options:
X     ! ---------------------- Save Menu Options -------------------
X     when error in
X       open "sys$login:"+pr::username+".OPT" for output as file #4%
X       for i=2 to 6
X`09 print #4%, g_option$(i)
X       next i
X       print #4%, pr::personalname
X       a$="Current options saved."
X       call display(23,a$)
X     use
X       a$="Error occured saving options: "+ert$(err)
X       call display(23,a$)
X     end when
X     close #4%
X     return
X
X2900 ! ------------------------ Buy Missile -----------------------
X     a$="You have room for "+str$(pr::maxmissile-pr::equip(a))+" missiles an
Vd "&
X`09+"can afford "+str$(int(pr::credits/50))+"."
X     call display(23,a$)
X2912 a$="Number of missiles to purchase> "\call display(1,a$)\b=val(a$)
X     if b<0 or b<>int(b) then goto 2900 end if
X     if b>pr::maxmissile-pr::equip(a) then `20
X`09call display(33,"You don't have room for that many.")
X`09goto 2912
X     end if
X     if 50*b>pr::credits then`20
X`09call display(33,"You can't afford that many.")
X`09goto 2912
X     end if
X     a$="You buy "+str$(b)+" missiles and install them in your ship."
X     call display(23,a$)
X     pr::equip(a)=pr::equip(a)+b
X     pr::credits=pr::credits-b*50
X     gosub 1700
X     if pr::equip(a)=pr::maxmissile then`20
X`09call display(23,"Your missile rack is now full.")
X     return
X`20
X3000 ! -------------- describe ships in vicinity ----------------
X     if new_smg=1 then
X        gosub damage_report
X`09call display(15," ")
X        call display(17,)
X`09call display(13,)
X        call display(10,)
X`09call display(31,)
X        scanner_on=1
X     end if
X     call smg$begin_pasteboard_update(new_pid)
X     nearest=50
X     gosub 1700 !display status
X     a=3\a$="                                      "
X     call display(13,)`20
X     for i=1 to noship
X        if t(i)::ship=-1 or t(i)::player=2 then iterate end if
X        d=abs(t(i)::spos-pr::rpos)
X        e=sgn((pr::rpos-t(i)::spos)*pr::direction)
X        b$=str$(i)+": "+edit$(s(t(i)::ship)::sname,128%)
X        if t(i)::ship<>10 or t(i)::ship<>14 then
X          b$=b$+" ("+t(i)::username+") "
X        end if
X        if e=-1 then c$="-"
X        else if e=1 then c$="+"
X          else let c$=" " end if
X        end if
X        if d<nearest then nearest=d end if
X        if debug%=0 and t(i)::username=pr::username then iterate end if
X        if d<pr::scanrange then
X          b$=b$+left$(a$,40-len(b$))+c$+str$(d*2000)+" km"
X          if t(i)::sintent=3 or t(i)::sintent=2 or t(i)::sintent=8 &
X`09`09or t(i)::sintent=6 then
X            b$=b$+"  *"
X          end if
X          if (t(i)::sintent=9 or t(i)::sintent < -1) then b$=b$+"  Ab" end i
Vf
X`09  if t(i)::special = 1 and rnd < (1-1/(d+1)) then iterate end if
X          call display(11,b$)
X        end if
X     next i
X     if nearest>=pr::scanrange then
X       b$="Ship(s) further than "+ str$((pr::scanrange-1)*2000)+" km detecte
Vd."
X       call display(11,b$)
X     end if
X     call smg$end_pasteboard_update(new_pid)
X     if new_smg=1 then new_smg=0 end if
X     return
X
X3100  ! ------------- Determine Other Ships Next Move ----------------
X      if (t(shipno)::sintent=9 or t(shipno)::sintent<-1) or &
X`09t(shipno)::player<>0 then return end if
X      if t(shipno)::ship=1 or t(shipno)::ship=18 then
X`09if pr::lsj = 0 or rnd > .9 then `20
X`09   gosub police_action
X`09end if
X      end if
X      if t(shipno)::ship>10 and t(shipno)::ship<14 then`20
X`09gosub fleet_action
X      end if
X      if t(shipno)::ship=4 or t(shipno)::ship=7 or t(shipno)::ship=8 or &
X          t(shipno)::ship=17 or t(shipno)::ship=19 or t(shipno)::ship=16 the
Vn`20
X        gosub pirate_action
X      end if
X      if t(shipno)::others(1)=0 then t(shipno)::others(1)=shipnum end if
X      if t(shipno)::ship=9 or t(shipno)::ship=21 then`20
X`09t(shipno)::sintent=2
X      end if
X      if t(shipno)::ship=2 or t(shipno)::ship=3 or &
X             t(shipno)::ship=6 then`20
X`09gosub trader_action
X      end if
X      if t(shipno)::ship=5 or t(shipno)::ship=15 then`20
X`09gosub scout_action
X      end if
X      if t(shipno)::ship=10 then t(shipno)::sintent=0 end if
X      if t(shipno)::sintent=3 or t(shipno)::sintent=2 then
X        if t(shipno)::sintent=2 and t(shipno)::senergy<s(t(shipno)::ship)::
V &
X`09menergy/3 and rnd>.6 and t(shipno)::ship<>1 and t(ship)::ship<>9 then`20
X`09  t(shipno)::sintent=6`09`09! wimp out
X        end if
X        if pr::moves>=5 then
X          ! missile actions
X          if pr::legal=5 and t(shipno)::ship=1 and rnd>.8 then`20
X`09    t(shipno)::sintent=8\return
X          end if
X          if (t(shipno)::ship=2 or t(shipno)::ship=8) and rnd>.8 then`20
X`09    t(shipno)::sintent=8\return
X          end if
X          if t(shipno)::ship=9 and pr::moves>20 and rnd>.85 then`20
X`09    t(shipno)::sintent=8\return
X          end if
X          if (t(shipno)::ship=4 or t(shipno)::ship=7) and rnd>.9 then
X`09   t(shipno)::sintent=8\return
X          end if
X          if t(shipno)::ship=3 and rnd>.5 then t(shipno)::sintent=8 end if
X         end if
X       end if
X     return
X
Xpolice_action:
X     if (t(shipno)::sintent=12 or t(shipno)::sintent=7) and pr::legal=2 then
X`09 return
X     end if
X     if (t(shipno)::sintent=15 or t(shipno)::sintent=7) then return end if
X     if pr::legal<=2 then t(shipno)::sintent=pr::legal-1`20
X     else t(shipno)::sintent=2
X     end if
X     return
X
Xpirate_action:
X     if t(shipno)::sintent=0 and rnd>.4 then t(shipno)::sintent=3
X     else
X`09if rnd>.4 then t(shipno)::sintent=2 end if
X     end if
X     if t(shipno)::sintent=0 then
X`09if rnd>.5 then t(shipno)::sintent=6
X`09else t(shipno)::sintent=4
X`09end if
X     end if
X     return
X
Xtrader_action:
X     ! if ship is not a transport then there is chance it will sit and attac
Vk
X     if t(shipno)::sintent=0 and t(shipno)::ship<>3 then
X`09if rnd>.3 then t(shipno)::sintent=3 end if
X     end if
X     if t(shipno)::sintent=0 then`20
X`09if rnd>.5 then t(shipno)::sintent=4 end if
X     end if
X     if t(shipno)::sintent=0 then`20
X`09if rnd>.5 then t(shipno)::sintent=5 end if
X     end if
X     return
X
Xscout_action:
X     if t(shipno)::sintent=0 then
X       if rnd>.4 then t(shipno)::sintent=2
X       else t(shipno)::sintent=5
X       end if
X     end if
X     return
X
Xfleet_action:
X     if t(shipno)::sintent=0 then`20
X`09if rnd>.5 then t(shipno)::sintent=4`20
X`09else t(shipno)::sintent=5
X        end if
X     end if
X     if pr::legal=5 then t(shipno)::sintent=2 end if
X     return
X`20
X3200 ! ----------------------- Manual Mode ----------------------------
X     pr::dodge=0
X     gosub 3000
X     get #2%, key #0% eq pr::username, wait 60\free #2%
X     if mid$(op::message,1,1)<>" " then
X       gosub 1200
X     end if
X     if numevents>0 then gosub 5200 end if       ! process events
X     call display(5,)\call display(6,a$)\menumode$="manual"
X3215 a$="`7E"
X     while a$="`7E" or len(a$)>20
X       a$="ACTION> "\call display(1,a$)
X       a$=a$+"`7E"
X     next
X     oops_flag=0
X     action_move=0
X     action_free=0
X     action_combat=0
X     num_moves=1
X     a=1
X     i=1
X     while mid$(a$,i,1)<>"`7E"
X        if mid$(a$,i,1)=" " then
X          action_cmd$(num_moves)=mid$(a$,a,i-a)
X`09  a=i+1
X`09  num_moves=num_moves+1
X        end if
X`09i=i+1
X     next
X     action_cmd$(num_moves)=mid$(a$,a,i-a)
X     action_cmd$(num_moves+1)="$$$"
X     for i=1 to num_moves
X       for j=1 to nactions
X`09 if action_cmd$(i)=action_cost$(j,1) then
X`09    select action_cost$(j,2)
X`09      case "m"
X`09`09action_move=action_move+1
X`09      case "f"
X`09`09action_free=action_free+1
X `09      case "c"
X`09`09action_combat=action_combat+1
X`09    end select
X`09  end if
X`09next j
X     next i
X     if action_move+action_free+action_combat=0 then
X       call display(33,"Invalid command sequence. Enter '?' for help.")
X       goto 3215
X     end if
X     ! check that requested moves are legal
X     if pr::equip(22)=1 then
X`09if action_combat>2 or action_move>1 then
X`09  oops_flag=1
X        end if
X     else
X        if action_combat+action_move>1 then
X`09  oops_flag=1
X`09end if
X     end if
X     if oops_flag=1 then
X       a$= "You aren't allowed that combination of moves in a turn."
X       call display(23,a$)
X       goto 3215
X     end if
+-+-+-+-+-+-+-+-  END  OF PART 8 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 9 -+-+-+-+-+-+-+-+
X     ! main move processing loop
X     for move_count=1 to num_moves
X       jump_flag=0
X       select action_cmd$(move_count)
X`09    case "j"
X`09`09a$= "WARNING:  Re-activation of the Ionization reactor is "+&
X`09`09`09"unpredictable."
X                call display(23,a$)
X`09`09a$="PROCEED> (Y/N)"\call display(1,a$)
X`09`09if a$="n" then
X`09`09  action_move=action_move-1
X`09`09else
X`09`09  a$= "IONIZATION CONTROL RODS REMOVED - ION GENERATION "+&
X`09`09`09"RESUMING."
X                  call display(23,a$)
X`09`09  gosub 3300
X`09`09  if rnd>(.4+.4*s(pr::shiptype)::reliability/100) then
X`09`09    a$= "REACTOR STABILITY ALERT: CAN'T ACHIEVE ION EQUIL"+&
X`09`09`09"BRIUM."
X                    call display(23,a$)
X`09`09    if rnd>(.3+.4*s(pr::shiptype)::reliability/100) then
X`09`09      a$= "SCRAMING! REACTOR STABILIZED - JUMP ABORTED."
X`09              call display(23,a$)
X`09`09    else
X`09`09      a$= "SCRAM FAILURE!  IONIZATION CHAMBER OVERLOAD!"
X`09              call display(23,a$)
X`09`09      a$= "BBOOOOMMMMMMM!!!!!  You've been VAPORIZED."
X`09              call display(23,a$)`09
X`09`09      sleep(1%)
X`09`09      goto 8000
X`09`09    end if
X`09`09  else
X`09`09    a$= "RE-IONIZATION ACHEIVED"
X`09            call display(23,a$)
X`09`09    jump_flag=1
X`09`09  end if
X`09`09end if
X`09    case "?","help"
X`09`09gosub help
X`09    case "re"
X`09`09gosub 3000
X            case "ah"
X`09`09gosub 3240
X            case "ab"
X                gosub 3800
X                if pr::on_ground=1 then return
X                end if
X            case "a"
X`09        gosub 3231
X            case "c"
X                gosub 2200
X            case "t"
X                pr::direction=pr::direction*-1
X                a$="You fire your maneouver rockets and swing through a "
X                a$=a$+"tight semicircle."
X                call display(23,a$)
X            case "o"
X                gosub 2800
X            case "m"
X                gosub 3600
X            case "r","f"
X`09`09gosub 3500
X            case "b"
X                gosub 1100
X            case "d"
X                pr::dodge=1
X            case "e"
X                gosub 3700
X            case "s"
X                gosub 1000
X            case "bo"
X                gosub 3900
X            case "fl"
X                a$="Cargo hold flushed - All cargo except gold discarded."
X                call display(23,a$)
X                for k=1 to 9\pr::cargo(k)=0\next k\pr::totcargo=pr::cargo(10
V)
X            case "sa"
X                gosub sand_blaster
X`09    case "cl"
X`09`09if pr::equip(21)=0 then`20
X`09`09  call display(33,"Your ship is not fitted with a cloak.")
X`09`09  action_combat = action_combat - 1
X`09`09else
X`09`09  if pr::cloak = 1 then`20
X`09`09    pr::cloak = 0`20
X`09`09  else`20
X`09`09    pr::cloak = 1
X`09`09  end if
X`09`09  gosub 1700
X`09`09end if
X`09    case "ls"
X`09`09if pr::equip(20)=0 then`20
X`09`09  call display(33,"Your ship is not fitted with a LSJ.")
X`09`09  action_combat = action_combat - 1
X`09`09else
X`09`09  if pr::lsj = 1 then`20
X`09`09    pr::lsj = 0
X`09`09  else`20
X`09`09    pr::lsj = 1
X`09`09  end if
X`09`09  call display(23,a$)
X`09`09  gosub 1700
X`09`09end if
X`09    case "ec"
X`09`09if pr::equip(19)=0 then
X`09`09  call display(33,"Your ship is not fitted with ECM.")
X`09`09  action_combat=action_combat-1`09`09 `20
X`09`09else
X`09`09  if ecm_status%=1 then ecm_status%=0 else ecm_status%=1 end if
X`09`09  gosub 1700
X`09`09end if
X            case else
X                call display(33,"Invalid command - Enter '?' for help")
X       end select
X       if jump_flag=1 then return end if
X     next move_count
X     if action_move+action_combat=0 then goto 3200 end if
X     gosub 3300
X     if pr::rpos<0 then pr::rpos=0 end if
X     if g_option$(4)="OFF" and pr::rpos<>0 then goto 3200 end if
X     if near_important=0 or pr::rpos=0 then return end if
X     goto 3200
X
X3231 ! ahead full
X     pr::rpos=pr::rpos-pr::speed*pr::direction
X     select pr::speed
X       case .75
X         a$="C"
X       case 1
X         a$="B"
X       case 1.25
X         a$="A"
X       case 1.5
X         a$="A ultra"
X     end select
X     a$="Your Delison class "+a$+" drive puts out maximum power."
X     call display(23,a$)
X     return
X
X3240 ! ahead slow
X     a$="Enter distance to advance> "\call display(1,a$)\a=val(a$)
X     if a=0 then return end if
X     if a/2000>pr::speed then`20
X`09call display(33,"Your drive can't go fast enough.")
X        goto 3240
X     end if
X     if a<0 then 3240 end if
X     a=int(a/500)/4\pr::rpos=pr::rpos-a*pr::direction
X     a$="You advance "+str$(a*2000)+" km."
X     call display(23,a$)
X     if pr::rpos<0 then pr::rpos=0 end if
X     return
X`20
X`20
X3300 ! --------------- Update Ships and Calculate Nearest ------------
X     gosub 3650         `09! check for missile hit
X     nearest=50
X     near_important=0
X     d=50
X     get #3%, key #0% eq name$(pr::planet), wait 60
X     pr::energy=t(pr::shipnum)::senergy
X     if pr::cloak = 1 and pr::energy > CLOAK_COST then
X       pr::energy = pr::energy - CLOAK_COST
X     else`20
X       if pr::cloak = 1 then
X         a$="Insufficient energy for Cloaking device - Deactivating."
X         call display(23,a$)
X         pr::cloak = 0
X       end if
X     end if
X     if pr::lsj = 1 and pr::energy > LSJ_COST then
X       pr::energy = pr::energy - LSJ_COST
X     else`20
X       if pr::lsj = 1 then
X`09 a$="Insufficient energy for LSJ - Deactivating."
X`09 call display(23,a$)
X`09 pr::lsj = 0
X       end if
X     end if
X     t(pr::shipnum)::special = pr::cloak
X     if ecm_status%=1 and pr::energy > ECM_COST then
X        pr::energy=pr::energy - ECM_COST
X     else if ecm_status%=1 then
X`09 a$="Insufficient energy for ECM - switching to standby mode."
X         call display(23,a$)
X         ecm_status%=0
X       end if
X     end if
X     for i=1 to noship
X       if t(i)::ship=-1 or i=pr::shipnum then iterate end if
X       if t(i)::spos>0 or t(i)::player<>0 then d=abs(t(i)::spos-pr::rpos) en
Vd if
X       if d<nearest then nearest=d end if
X       shipno=i
X       if d<=pr::scanrange then
X         if t(i)::ship=1 and (g_option$(2)="OFF" or pr::legal<>1) then
X            near_important=1
X         end if
X         if t(i)::ship=10 and g_option$(3)="OFF" then near_important=1 end i
Vf
X         if t(i)::ship<>1 and t(i)::ship<>10 and t(i)::ship<>-1 and &
X`09`09t(i)::player<>2 then
X            near_important=1
X         end if
X       end if
X       if t(i)::player=0 then
X         ! don't determine action for human players
X         if t(i)::others(2)=pr::shipnum and t(i)::ship<>14 then
X           if rnd>.7 then
X             a=t(i)::others(1)
X             t(i)::others(1)=t(i)::others(2)
X             t(i)::others(2)=a
X           end if
X         end if
X         me=0
X         if t(i)::others(1)=pr::shipnum or t(i)::others(1)=0 then
X           ! if ship is responding to player or free - can change sintent
X               gosub 3100\me=1
X         end if
X        ! note: me is set if ship is responding to current player
X        if me=1 then
X          if t(i)::sintent=6 and t(i)::spos>0 then gosub 3420 end if
X          if t(i)::sintent=7 then gosub 3380 end if
X          if t(i)::sintent=4 and t(i)::spos>0 then
X            t(i)::spos=t(i)::spos-s(t(i)::ship)::mdrive
X            if t(i)::spos<0 then t(i)::spos=0 end if
X          end if
X          if t(i)::sintent=5 then
X            t(i)::spos=t(i)::spos+s(t(i)::ship)::mdrive
X          end if
X          if t(i)::sintent=15 then
X            t(i)::sintent=7
X          end if
X          if (t(i)::sintent=1 or t(i)::sintent=12) and d<3 then
X            gosub 3390
X          end if
X          if t(i)::sintent=3 and d<3 then gosub attack_player end if
X          if t(i)::sintent=2 then gosub move_attack_player end if
X          if t(i)::sintent=8 and d<3 and t(i)::smissile > 0 then`20
X            gosub 3440`20
X          end if
X        end if                  ! end of me=1 cases
X        if me=0 and t(i)::others(1)=-1 then
X          t(i)::others(1)=t(i)::others(2)
X          if t(i)::others(2)=-1 then t(i)::others(1)=0 end if
X        end if
X        ! responsible for moving missiles that you fired at non-players
X        ! others(1) is target, others(2) is sender
X        ! sintent=11 for just fired, 10 for missile tracking active
X        if t(t(i)::others(1))::player=0 then
X          if t(i)::sintent=10 and t(i)::others(2)=pr::shipnum then
X            gosub 3480
X          end if
X          if t(i)::sintent=11 and t(i)::others(2)=pr::shipnum then
X            t(i)::sintent=10
X          end if
X        end if
X        ! also responsible for moving missiles targeted at oneself
X        if t(i)::others(1)=pr::shipnum then
X          if t(i)::sintent=10 then
X            gosub 3480
X          end if
X          if t(i)::sintent=11 then
X            t(i)::sintent=10
X          end if
X        end if
X       end if
X     next i
X     t(pr::shipnum)::senergy=pr::energy\t(pr::shipnum)::spos=pr::rpos
X     update #3%\free #3%
X     return
X`20
Xmove_attack_player:
X     ! attack routine
X     if t(pr::shipnum)::special = 1 then ! player has cloak up
X`09if rnd < (1 -  1/(1+d)) then    ! if detect fails, move randomly
X`09  t(i)::spos = t(i)::spos + int(3*rnd-1)*s(t(i)::ship)::mdrive
X`09  if t(i)::spos < 0 then t(i)::spos = 0 end if
X`09  return
X`09end if
X     end if
X     if d<s(t(i)::ship)::mdrive then`20
X       t(i)::spos=pr::rpos
X     else
X       if t(i)::spos>pr::rpos then
X         t(i)::spos=t(i)::spos-s(t(i)::ship)::mdrive
X       else
X         if t(i)::spos<pr::rpos then`20
X`09   t(i)::spos=t(i)::spos+s(t(i)::ship)::mdrive
X         end if
X       end if
X     end if
X     if t(i)::ship=14 or t(i)::ship=-1 then return end if
X     if abs(t(i)::spos-pr::rpos)<3 then
X       if t(i)::ship=20 then`09`09! starbase attack - launch defenders
X`09 if (t(i)::smissile > 100) then
X`09   for a1 = 1 to 15
X             a$= "Commando launched from Starbase " + &
X`09`09" ("+t(i)::username+")    Range: "+str$(d*2000)+" km"
X             call display(23,a$)
X
X`09     l1 = next_ship
X`09     if (l1>noship) then noship = noship+1 end if
X`09     t(l1)::ship = 18
X             t(l1)::spos=t(i)::spos
X             t(l1)::senergy=s(t(l1)::ship)::menergy
X`09     t(l1)::smissile = s(t(l1)::ship)::mmissile
X             t(l1)::sintent=2
X             t(l1)::others(1)=pr::shipnum
X             t(l1)::others(2)=0
X             t(l1)::player=0
X             t(l1)::username=left$(t(i)::username,2)+"C"+str$(a1)
X`09   next a1
X`09   t(i)::smissile = t(i)::smissile - 15
X`09 else`20
X`09   if (t(i)::smissile > 0) then
X`09     for mi_l = 1 to 10
X               gosub 3440
X`09     next mi_l
X`09   end if
X`09 end if
X       end if
X       if t(i)::ship<>17 and t(i)::ship<>16 then
X`09 if (t(i)::ship = 21 and rnd>.4 and t(i)::smissile> 0) then
X           a$= "Thargoid launched from Mothership " + &
X`09`09" ("+t(i)::username+")    Range: "+str$(d*2000)+" km"
X           call display(23,a$)
X`09   l1 = next_ship
X`09   if (l1>noship) then noship=noship+1 end if
X`09   t(i)::smissile = t(i)::smissile -1`09! 1 less thargoid
X           t(l1)::ship=9
X           t(l1)::spos=t(i)::spos
X           t(l1)::senergy=s(t(l1)::ship)::menergy
X`09   t(l1)::smissile = s(t(l1)::ship)::mmissile
X           t(l1)::sintent=2
X           t(l1)::others(1)=pr::shipnum
X           t(l1)::others(2)=i
X           t(l1)::player=0
X           t(l1)::username=left$(t(i)::username,3)+"T"
X`09 else`20
X           if (t(i)::ship = 15 and t(i)::senergy< 150 and &
X`09`09`09rnd > .7) then
X`09     bomber = i
X`09     gosub launch_ebomb
X           else
X             gosub attack_player
X           end if
X         end if
X       else     ! death star or battle platform attack
X         if rnd>.6 and t(i)::smissile > 0 then
X           ! launch a Krait or Adder attack
X           a$= "Fighter launched from "+edit$(s(t(i)::ship)::sname,128%) + &
X`09`09 " ("+t(i)::username+")    Range: "+str$(d*2000)+" km"
X           call display(23,a$)
X`09   l1 = next_ship
X           if (l1>noship) then noship=noship+1 end if
X`09   t(i)::smissile = t(i)::smissile -1`09! 1 less ship to launch
X           t(l1)::ship=4
X           if rnd>.5 then t(l1)::ship=7 end if
X           t(l1)::spos=t(i)::spos
X           t(l1)::senergy=s(t(l1)::ship)::menergy
X           t(l1)::smissile=s(t(l1)::ship)::mmissile
X           t(l1)::sintent=2
X           t(l1)::others(1)=pr::shipnum
X           t(l1)::others(2)=i
X           t(l1)::player=0
X           t(l1)::username=left$(t(i)::username,3)+"F"
X         else
X           if t(i)::ship=16 then
X`09     if rnd>.4 then
X`09       gosub attack_player
X             else
X`09       if t(i)::smissile>0 then
X`09`09 for mi_l =1 to 3
X`09           gosub 3440
X`09`09 next mi_l
X`09       end if
X             end if
X           else
X             if t(i)::smissile>0 then
X`09       for mi_l = 1 to 3
X                 gosub 3440
X`09       next mi_l
X             else
X               if rnd>.8 then
X`09`09 bomber = i
X`09         gosub launch_ebomb
X               end if
X             end if
X           end if
X         end if
X       end if
X     end if
X     return
X
Xlaunch_ebomb:
X     for ii=1 to noship
X      if t(ii)::ship=-1 or t(ii)::ship=20 or t(ii)::ship=17 then iterate end
V if
X      if ii=bomber then iterate end if
X      if abs(t(ii)::spos-t(bomber)::spos)<4 then
X`09if (t(ii)::player=0) then
X          a$ = edit$(s(t(ii)::ship)::sname,128%)+" VAPORIZED."
X`09  call display(23,a$)
X          t(ii)::ship=-1
X          t(ii)::senergy=-1
X          t(ii)::sintent=-1
X        else
X`09  if (t(ii)::player=1) then
X            m$="%%eb"
X            sender$=t(bomber)::username
X            u$=t(ii)::username
X            isave=i
X            gosub send_message
X            i=isave
X`09  end if
X        end if
X      end if
X     next ii
X     return
X`20
Xattack_player:
X     ! ---------------------- attack ----------------------------
X     condition$="RED"\call display(16,condition$)
X     a$="LASER ATTACK!  Ship: "+edit$(s(t(i)::ship)::sname,128%)+" ("+ &
X`09t(i)::username+")    Range: "+str$(d*2000)+" Km"
X     call display(23,a$)
+-+-+-+-+-+-+-+-  END  OF PART 9 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 10 -+-+-+-+-+-+-+-+
X     hit=((3-d)+s(t(i)::ship)::slaser)/2+((3-d)+s(t(i)::ship)::slaser)*rnd/2
X     damage=0\hit=hit-pr::dodge
X     if hit>2.4 then
X        damage=int(10*s(t(i)::ship)::slaser*rnd+s(t(i)::ship)::slaser*3)
X     end if
X3369 for ii=1 to noship
X       if t(ii)::spos=pr::rpos and t(ii)::ship=22 then
X          damage=damage*(.66)
X       end if
X     next ii
X     if damage=0 then
X        a$="The laser beam skims past your ship, missing by a narrow margin"
X      else
X        if damage<10 then
X          a$="You feel your ship shudder as it takes relatively minor damage
V."
X        end if
X      end if
X     if damage<20 and damage>9 then
X        a$="MAJOR LASER BURN! Your ship shakes wildly prior to stabilizing."
X     end if
X     if damage>19 then
X        a$="DIRECT HIT! You black out momentarily as your ship spins madly."
X     end if
X     call display(23,a$)
X     if damage>25 and rnd>.9 then
X       gosub 4400`20
X       pr::energy = pr::energy - int(0.7 * damange)
X     else
X       pr::energy=pr::energy - damage
X     end if
X     gosub 1700 ! display status
X     gosub damage_report ! damage report
X     if pr::energy<0 then goto 8000 end if
X     return
X`20
X3380 ! -------------------- Police Boarding --------------------
X     t(i)::sintent=0\t(i)::spos=pr::rpos
X     a$="The Viper docks and two galpol toughs board your ship."
X     call display(23,a$)
X     if pr::cargo(2)<>0 then`20
X       a$="They confiscate all your slaves and lecture you on the evils of "
X       call display(23,a$)
X       a$="selling sentient beings."
X       call display(23,a$)
X     end if
X     if pr::cargo(7)<>0 then
X`09 a$="An electronic 'sniffer' tracks down your cargo of narcotics " &
X`09`09+"which the two"
X         call display(23,a$)
X`09 a$= "galpol agents proceed to destroy."
X         call display(23,a$)
X     end if
X     if pr::cargo(2)=0 and pr::cargo(7)=0 then
X`09a$="Well, we haven't caught you red handed but we know of your " &
X`09`09+"illicit dealing."
X        call display(23,a$)
X`09a$="You'll be fined accordingly."
X        call display(23,a$)
X     end if
X     a=0
X     if pr::debt>0 and pr::due<pr::moves then
X`09a$= "You are fined "+str$(pr::debt*2)+" for an overdue loan."
X        call display(23,a$)
X`09a=pr::debt*2
X`09pr::debt=0
X     end if
X     a=a+int(pr::cargo(2)*80+pr::cargo(7)*190*(rnd+0.5))
X     if (a<>0) then
X       a$="You are fined - "+str$(a)+" credits."
X     else
X       a$="No fine this time.  Next time we won't be so nice to you, SCUM."
X     end if
X     call display(23,a$)
X     pr::totcargo=pr::totcargo-pr::cargo(2)-pr::cargo(7)
X     pr::cargo(2)=0\pr::cargo(7)=0
X     pr::credits=pr::credits-a
X     if pr::legal=2 then pr::legal=1 end if
X     gosub 1700
X     return
X`20
X3390 ! --------------------- police warning -----------------------
X     m$="Surrender your cargo immediately and consider yourself under arrest
V."
X     m$=m$+"@Please accept or refuse boarding.  Reply IMMEDIATELY or risk "
V &
X`09+"attack"
X     sender$=t(i)::username\u$=pr::username\save=i\gosub send_message\i=save
X     if t(i)::sintent=12 then
X        if rnd>.5 then`20
X           t(i)::sintent=2
X`09   if rnd>.8 then
X             pr::legal=3`20
X`09   end if
X        end if
X     end if
X     if t(i)::sintent=1 then t(i)::sintent=12 end if
X     return
X`20
X3420 ! ------------------------- run away ---------------------------
X     if t(i)::spos>pr::rpos then`20
X`09t(i)::spos=t(i)::spos+1`20
X     else`20
X`09t(i)::spos=t(i)::spos-1
X     end if
X     if abs(t(i)::spos-pr::rpos)<3 then gosub attack_player end if
X     return
X
X3440 ! ---------------------- enemy missile fire ---------------------
X     if t(i)::smissile > 0 then t(i)::smissile = t(i)::smissile -1 end if`20
X     a$="INCOMING MISSILE detected from "+edit$(s(t(i)::ship)::sname,128%)+
V &
X        " ("+t(i)::username+")  Range: "+str$(d*2000)+"km"
X     call display(23,a$)
X     condition$="RED"\call display(16,condition$)
X     !   firer of missile now goes back to regular attack
X     if t(i)::player=0 then t(i)::sintent=2 end if
X     l1 = next_ship
X     if (l1 > noship) then noship=noship+1 end if
X     t(l1)::ship=14
X     t(l1)::spos=t(i)::spos
X     t(l1)::senergy=s(t(l1)::ship)::menergy
X     t(l1)::sintent=11
X     t(l1)::others(1)=pr::shipnum
X     t(l1)::others(2)=i
X     t(l1)::player=0
X     t(l1)::username=left$(t(i)::username,3)+"M"
X     t(l1)::special=0
X     return
X`20
X3480 ! ------------------- Update Missiles --------------------------
X     if ecm_status%=1 and rnd>.4 then
X       a$= "ECM frequency lock on achieved - Missile DESTROYED."
X       call display(23,a$)
X       t(i)::ship=-1
X       t(i)::sintent=-1
X     end if
X     if abs(t(i)::spos-t(t(i)::others(1))::spos)<1 then
X        t(i)::spos=t(t(i)::others(1))::spos
X     end if
X     if t(i)::spos>t(t(i)::others(1))::spos then
X        t(i)::spos=t(i)::spos-1
X     else
X        if t(i)::spos<t(t(i)::others(1))::spos then
X          t(i)::spos=t(i)::spos+1
X`09end if
X     end if
X     if t(i)::spos=0 then
X        t(i)::ship=-1
X        t(i)::sintent=-1
X        if abs(t(i)::spos-pr::rpos)<pr::scanrange then
X           a$="The missile burns up in the atmosphere."
X           call display(23,a$)
X        end if
X     end if
X     update #3%
X     gosub 3650                 ! check for missile hit
X     ! need to have a current record
X     get #3%, key #0 eq name$(pr::planet), wait 60
X     return
X
X3500 ! ------------------------- Laser Fire -----------------------------
X     if action_cmd$(move_count)="r" then`20
X`09a=pr::equip(2)+pr::equip(10)+2*pr::equip(4)+3*pr::equip(6)\d$="rear"
X     end if
X     if action_cmd$(move_count)="f" then`20
X`09a=pr::equip(1)+2*pr::equip(3)+3*pr::equip(5)+4*pr::equip(14) + &
X`09+5*pr::equip(17)\d$="front"
X     end if
X     if a=0 then
X`09a$="You don't have a "+d$+" laser."
X        call display(23,a$)
X`09action_combat=action_combat-1
X`09return`20
X     end if
X     for i=1 to maxships\exist(i)=0\next i
X     for i=1 to noship
X       if t(i)::ship=-1 or t(i)::username=pr::username then
X         iterate
X       end if
X       d=abs(t(i)::spos-pr::rpos)
X       e=sgn((pr::rpos-t(i)::spos)*pr::direction)
X       b$=edit$(s(t(i)::ship)::sname,128%)
X       exist(i)=0
X       if d<pr::scanrange and action_cmd$(move_count)="f" and (e=0 or e=1) t
Vhen
X`09  exist(i)=1`20
X       end if
X       if d<pr::scanrange and action_cmd$(move_count)="r" and (e=0 or e=-1)
V &
X`09  then exist(i)=1
X       end if
X     next i
X
X3540 d$="Number of target ship> "\call display(1,d$)\b=val(d$)
X     if b=0 then`20
X`09a$="Laser firing aborted."
X        call display(23,a$)
X`09action_combat=action_combat-1
X`09return`20
X     end if
X     if b<0 or b>noship or b<>int(b) then goto 3540 end if
X     if (exist(b)=0 and b<>0) or (t(b)::player=2) then`20
X`09call display(33,"That object is not in laser range.")
X`09goto 3540`20
X     end if
X     if t(b)::ship=22 then
X       call display(33,"Can't target a sand cloud.")
X       goto 3540
X     end if
X     if t(b)::ship>10 and t(b)::ship<14 and t(b)::player=0 then`20
X`09pr::legal=5
X     end if
X     if (t(b)::ship=2 or t(b)::ship=3) and rnd>.7 and t(b)::player=0 then
X       get #3%, key #0 eq name$(pr::planet), wait 60
X       t(b)::sintent=6
X       t(b)::others(2)=t(b)::others(1)
X       t(b)::others(1)=pr::shipnum
X       update #3%\free #3%
X     end if
X3545 b$=edit$(s(t(b)::ship)::sname,128%)
X     if pr::legal=5 then goto 3547 end if
X     if t(b)::ship=1 then
X       pr::legal = 4
X       t(pr::shipnum)::others(2)=t(pr::shipnum)::others(1)
X       t(pr::shipnum)::others(1)=b
X       t(pr::shipnum)::sintent=2
X     end if
X 3546 if (t(b)::ship<>10 and t(b)::ship<>14 and (t(b)::sintent<>2 and &
X       `09  t(b)::sintent<>3 and t(b)::sintent<>18 and &
X          t(b)::sintent<>6 and t(b)::sintent<>9 and t(b)::sintent<-1))&
X`09`09 and t(b)::player=0 then
X       pr::legal=4-(t(b)::ship>10)
X       t(pr::shipnum)::others(2)=t(pr::shipnum)::others(1)
X       t(pr::shipnum)::others(1)=b
X       t(pr::shipnum)::sintent=2
X     end if
X3547 d=abs(t(b)::spos-pr::rpos)
X     pr::energy=pr::energy-a
X     get #3%, key #0% eq name$(pr::planet), wait 60
X     t(pr::shipnum)::senergy=t(pr::shipnum)::senergy-a
X     update #3%\free #3%
X     if pr::energy<0 then
X       a$= "Your laser drained your last energy units, shutting off LIFE " &
X`09+"SUPPORT..."
X       call display(23,a$)
X       goto 8000
X     end if
X3548 if t(b)::ship<>10 and t(b)::sintent<>9 and t(b)::sintent<>6 and &
X`09t(b)::player=0 then
X       get #3%, key #0% eq name$(pr::planet), wait 60
X       t(b)::others(2)=t(b)::others(1)
X       t(b)::others(1)=pr::shipnum\t(b)::sintent=2\update #3%\free #3%
X     end if
X3549 if (a=1 and pr::equip(10)=1 and t(b)::ship=10 and action_cmd$(move_coun
Vt) &
X`09`09="r") then
X        a$="You fire the mining laser at the asteroid."
X        call display(23,a$)
X`09mine=1
X`09goto 3554
X     end if
X     select a
X`09case 1
X          a$="You send a stream of energy pulses at the "+b$+"."
X  `09case 2
X          a$="You fire a continuous high energy beam at the "+b$+"."
X  `09case 3
X          a$="You blast the "+b$+" with a precision focused energy beam."
X`09case 4
X          a$="You loose an ultra-coherent beam of UV radiation at the "+b$+"
V."
X        case 5
X          a$="Stimulated emission ultra high Q X-rays blast the "+b$+"."
X     end select
X     call display(23,a$)
X     if t(b)::spos <=0 and pt::trade<>9 and pt::trade<>10 then
X        a$= "Your laser beam disperses harmlessly in the atmosphere."
X        call display(23,a$)
X        mine=0
X        return
X     end if
X3554 hit=((3.3-d)+a)/2+((3.3-d)*rnd/2)
X     if hit>2.2 then
X`09if a>3 then a=a+1 end if
X        damage=int((15*a)*rnd+a*6-(a>3)*15) else damage=0
X     end if
X     for ii=1 to noship
X        if t(ii)::spos=pr::rpos and t(ii)::ship=22 then
X          damage = int(damage*.66)
X        end if
X     next ii
X     if t(b)::player=1 then
X        m$="%%la"+t(b)::username+str$(damage)+"."
X        u$=t(b)::username
X        gosub 5000
X     end if
X3555 if damage=0 then
X        a$="Your laser narrowly misses the "+b$+"."
X        call display(23,a$)
X`09mine=0
X`09return
X     end if
X3556 tar=b              ! use missile hit routine
X3558 if mine=1 then
X        get #3%, key #0% eq name$(pr::planet), wait 60
X        t(b)::ship=-1
X        t(b)::senergy=-1
X        update #3%\free #3%
X        b=int(15*rnd+5)\c=4
X        if rnd>.98 then c=10 end if
X        if c=4 then`20
X`09  a$="The asteroid is reduced to "+str$(b)+" tons of minerals."
X          call display(23,a$)
X        else`20
X`09  a$= "You find "+str$(b)+" kilos of GOLD!"`20
X          call display(23,a$)
X`09end if
X        gosub 3935
X        return
X     end if
X3559 if t(b)::ship=10 then
X        a$="Your laser hits the asteroid and destroys it totally."
X        call display(23,a$)
X        get #3%, key #0% eq name$(pr::planet), wait 60
X        t(b)::ship=-1
X        t(b)::senergy=-1
X        update #3%\free #3%
X        return
X     end if
X3560 a$="You see a red flash on "+b$+"'s hull indicating you hit."
X     call display(23,a$)
X3562 gosub 3690
X3594 return
X`20
X3600 ! -------------------- Fire Missiles ------------------------
X3601 if pr::equip(13)=0 then`20
X`09call display(33,"You're out of missiles!")
X`09action_combat=action_combat-1
X`09return
X     end if
X3602 a$="Targeting computer engaged - Please select missile target"
X     call display(23,a$)
X3603 for i=1 to maxships\exist=0\next i
X3604 for i=1 to noship
X       if t(i)::ship=-1 or t(i)::username=pr::username then
X         iterate
X       end if
X       if abs(t(i)::spos-pr::rpos)<pr::scanrange then exist(i)=1 end if
X     next i
X3613 if pr::equip(15)=1 then gosub 4300\return
X
X3614 a$="Target ship> "\call display(1,a$)\a=val(a$)
X     if a=0 then`20
X`09a$="Firing aborted."
X        call display(23,a$)
X        action_combat=action_combat-1
X`09return
X     end if
X3615 if a<1 or a>noship or a<>int(a) then`20
X        call display(33,"Invalid target - re-enter")
X        goto 3614`20
X     end if
X     if exist(a)=0 or t(a)::player=2 then
X        call display(33,"Out of Range")
X`09goto 3614
X     end if
X     if t(a)::ship=22 then
X        a$= "Target Lock in Failure - Can't enable tracking system."
X         call display(23,a$)
X       goto 3614
X     end if
X3616 if (t(a)::ship=2 or t(a)::ship=3) and rnd>.7 and t(a)::player=0 then
X`09! change response to new attacking player
X        get #3%, key #0% eq name$(pr::planet), wait 60
X        t(a)::sintent=6\t(a)::others(2)=t(a)::others(1)
X        t(a)::others(1)=pr::shipnum\update #3%\free #3%
X     end if
X3617 if pr::legal<4 then
X       if (t(a)::ship<>10 and t(a)::ship<>14 and (t(a)::sintent=0 or &
X          t(a)::sintent=1 or t(a)::sintent=15 or t(a)::sintent=7 or &
X`09  t(a)::sintent=12 or t(a)::sintent=18 or &
X          t(a)::sintent=5 or t(a)::sintent=4)) and t(a)::player=0 then
X             pr::legal=4-(t(a)::ship>10)
X       end if
X     end if
X     pr::equip(13)=pr::equip(13)-1\if t(a)::ship>10 and t(a)::ship<14 &
X          and t(a)::player=0 then pr::legal=5 end if
X     if t(a)::sintent<>9 and t(a)::ship<>10 and t(a)::sintent<>6 and &
X`09  t(a)::player=0 then
X        get #3%, key #0% eq name$(pr::planet), wait 60
X        t(a)::sintent=2\t(a)::others(2)=t(a)::others(1)
X        t(a)::others(1)=pr::shipnum\update #3%\free #3%
X     end if
X     a$="Targetcom programmed - Xionite warhead armed   5 4 3 2 1 Ignition!"
X      call display(23,a$)
X     a$="The sleek Demon Mark II missile begins tracking the "+ &
X`09  edit$(s(t(a)::ship)::sname,128%)
X     call display(23,a$)
X     if t(a)::player=1 then
X        m$="%%mi"+t(a)::username+str$(noship)+"."
X        asave=a
X        gosub 5000
X        a=asave
X     end if
X3630 get #3%, key #0% eq name$(pr::planet), wait 60
X     l1 = next_ship
X     if (l1 > noship) then noship=noship+1 end if
X     t(l1)::ship=14\t(l1)::spos=pr::rpos\t(l1)::senergy=5
X     t(l1)::sintent=11\t(l1)::others(1)=a
X     t(l1)::others(2)=pr::shipnum\t(l1)::player=0
X     t(l1)::username=left$(pr::username,3)+"M"
X     update #3%\free #3%
X`20
X3650 ! --------------- check for missile hit -------------
X     i1=i
+-+-+-+-+-+-+-+-  END  OF PART 10 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 11 -+-+-+-+-+-+-+-+
X     for i=1 to noship
X       if t(i)::ship=14 and t(i)::spos=t(t(i)::others(1))::spos  &
X        and (t(t(i)::others(1))::player=0 or (t(t(i)::others(1))::player=1 &
X        and t(i)::others(1)=pr::shipnum)) then gosub 3680
X       end if
X     next i
X     i=i1
X     return
X`20
X3680 ! ----------------- missile hit -------------------
X     get #3%, key #0% eq name$(pr::planet), wait 60
X     t(i)::ship=-1\t(i)::sintent=-1
X     update #3%\free #3%
X     if t(t(i)::others(1))::ship=-1 then
X       a$= "Target lost - missile self-destructing."
X       call display(23,a$)
X       return
X     end if
X     if t(i)::others(1)=pr::shipnum then
X       ! you have taken a missile hit
X       a$= "MISSILE HIT!  The Xionite explosion sends your ship into a spin!
V"
X       call display(23,a$)
X     else
X       a$="You see a blinding flash, as a missile strikes the "+ &
X       edit$(s(t(t(i)::others(1))::ship)::sname,128%)+"."
X       call display(23,a$)
X     end if
X     damage=int(50*rnd)+50
X     tar=t(i)::others(1)
X     if tar=pr::shipnum then
X       pr::energy=pr::energy-damage
X       gosub 1700\gosub damage_report
X       m$="%%mh"
X       gosub 5000
X       if pr::energy<0 then goto 8000 end if
X     end if
X     ! laser hit routine jumps to here
X3690 get #3%, key #0% eq name$(pr::planet), wait 60
X     t(tar)::senergy=t(tar)::senergy-damage
X     if t(tar)::ship=10 then
X       t(tar)::ship=-1
X       update #3%\free #3%
X       return
X     end if
X     if t(tar)::senergy=<0 and t(tar)::player=0 and t(tar)::ship<>-1 then
X         a$="The "+edit$(s(t(tar)::ship)::sname,128%)+&
X         " becomes a huge fireball, instantly vaporizing."
X         call display(23,a$)
X         pr::score=pr::score+s(t(tar)::ship)::menergy
X         if t(tar)::ship<>14 then pr::kills=pr::kills+1 end if
X         t(tar)::ship=-1\t(tar)::sintent=-1\update #3%\free #3%
X         return
X      end if
X      if t(tar)::player=0 and s(t(tar)::ship)::menergy<>0 then`20
X        if t(tar)::senergy/s(t(tar)::ship)::menergy<.27 and rnd>.2 and &
X`09     t(tar)::sintent<>9 and t(tar)::ship<>14 then
X          a$="Escape capsule launch detected from "+ &
X          edit$(s(t(tar)::ship)::sname,128%)+"."
X          call display(23,a$)
X          t(tar)::sintent=9
X        end if
X      end if
X     update #3%\free #3%
X     return
X`20
X3700 ! ------------------- energy bomb ---------------------
X     if pr::equip(9)=0 then`20
X`09call display(33,"Wishful thinking! You don't have one.")
X`09action_combat=action_combat-1
X`09return
X     end if
X     a$="The consequences of this action could be unimmaginable:"
X     call display(23,a$)
X     a$="PROCEED? (Y/N) "\call display(1,a$)
X     if a$<>"y" and a$<>"Y" then`20
X`09a$="Abort sequence initiated - disarm countdown in process."
X        call display(23,a$)
X`09return
X     end if
X     a$="Energy shield created - Antimatter expansion initiated"
X     call display(23,a$)
X     pr::equip(9)=0
X     get #3%, key #0% eq name$(pr::planet), wait 60
X     for i=1 to noship
X      if t(i)::ship=-1 then iterate end if
X      if i=pr::shipnum then iterate end if
X      if t(i)::ship=20 then
X         t(i)::sintent=20
X         if abs(t(i)::spos-pr::rpos)<pr::scanrange then
X           a$= "Energy bomb shield activation detected from Star Base."
X           call display(23,a$)
X         end if
X         iterate
X      end if
X      if abs(t(i)::spos-pr::rpos)<4 then
X        a$= edit$(s(t(i)::ship)::sname,128%)+" VAPORIZED."
X        call display(23,a$)
X        pr::kills=pr::kills+1
X        pr::score=pr::score+int(s(t(i)::ship)::menergy/10)
X        if t(i)::player=0 then
X          t(i)::ship=-1
X          t(i)::senergy=-1
X          t(i)::sintent=-1
X        else`20
X          if (t(i)::player = 1) then
X            m$="%%eb"
X            sender$=pr::username
X            u$=t(i)::username
X            isave=i
X            gosub send_message
X            i=isave
X          end if
X        end if
X      end if
X     next i
X     update #3%\free #3%
X     if pt::zone<>4 and pt::zone<>3 then pr::legal=5 end if
X     if rnd<.12 then
X       a$="You sense something is wrong - the matter/anti-matter chain" &
X`09  +" reaction is running wild!! - It's totally out of control!"
X       call display(23,a$)
X       a$= edit$(pt::pname,128%)+" Vaporized!!!! You just wiped a "&
X`09  +"world off the map."
X       call display(23,a$)
X       a$="Energy expansion stabilizing - Oh no!  Energy recession is"&
X`09  +" out of control!!!"
X       call display(23,a$)
X       call display(23,"")
X       a$="BBBBBBBBOOOOOOOOOMMMMMMMMMMMMMMMM!!!!!!!"
X       call display(23,a$)
X       goto 8000
X     else
X       call display(23,"")
X       a$="Antimatter field receeding - It worked!!!!"
X       call display(23,a$)
X     end if
X     return
X`20
X
X3800 ! ***** escape capsule *****
X     if pr::equip(7)<>1 then`20
X`09a$="You'll have to go down with your ship! - "&
X`09+"You don't have an escape capsule!!!"
X        call display(23,a$)
X        action_move=action_move-1
X`09return
X     end if
X     a$= "Are you sure you want to abandon ship (You'll lose all except" &
X         +" your gold and"
X     call display(23,a$)
X     a$="money, and your replacement ship will have no optional equipment):"
X     call display(23,a$)
X     a$="ABANDON? (Y/N)"\call display(1,a$)
X     if a$="n" or a$="N" then
X`09action_move=action_move-1
X`09return
X     end if
X     get #3%, key #0% eq name$(pr::planet), wait 60
X     t(pr::shipnum)::sintent=9\t(pr::shipnum)::player=0\update #3%\free #3%
X     call display(23,"")
X     a$="Escape sequence initiated."
X     call display(23,"")
X     a$="You are thrown clear of your ship and hurtle towards the planet"
X     call display(23,a$)
X     m$="%%ab"
X     gosub 5000                         ! check if any players in range
X     pr::escapes=pr::escapes+int(pr::time_owned/10)
X     call display(4,)`09`09`09! erase trading window
X     call display(12,)\scanner_on=0
X     a$="Soon you enter the atmosphere, your recovery shutes open,"&
X`09+" and you float down"
X     call display(24,a$)
X     a$= "and land near the spaceport"
X     call display(24,a$)
X     if pt::zone=4 then`20
X`09a$="You are captured by Thargoids and literally " &
X`09+"ripped apart on the spot."
X        call display(24,a$)
X        quit=2\goto 8000
X     end if
X     if pt::zone<>1 then`20
X`09a$="You spend a month on "+edit$(pt::pname,128%)+ &
X`09" while you claim insurance on your ship."
X        call display(24,a$)
X`09goto 3830
X     end if
X     a$="When you try to claim insurance on your ship, the friendly local"&
X`09+" representative"
X     call display(24,a$)
X     a$="of the Galactic Insurance Co. smiles and points to clause C.4 of"&
X`09+" your policy"
X     call display(24,a$)
X     a$="which reads 'Coverage Limitations and Exclusions. We will not pay"&
X`09+" for direct or"
X     call display(24,a$)
X     a$="indirect loss in these cases A) War  B) Nuclear Hazard  C) Sabotage
V"
X     call display(24,a$)
X     if pr::credits>200000 then`20
X`09a$="You'll have to pay for a new ship yourself."`20
X        call display(24,a$)
X`09goto get_new
X     else`20
X`09a$= "You retire."
X        call display(24,a$)
X`09quit=1
X`09goto 8000
X     end if
X3830 a$="The insurance policy will cover replacement cost of your ship.  Not
Ve"
X     call display(24,a$)
X     a$="that equipment is NOT covered."
X     call display(24,a$)
X     pr::credits=pr::credits+s(pr::shiptype)::cost
X     gosub 1700`09`09! update status
Xget_new:
X     a$="You can now choose your next ship."
X     call display(24,a$)
X     call display(17,)
X     for i=1 to 9\pr::cargo(i)=0\next i`09`09!clear all cargo except gold
X     pr::totcargo=pr::cargo(10)
X     pr::energy=0
X     pr::rpos=0
X     pr::on_ground = 1
X     pr::lsj = 0\pr::cloak = 0
X     pr::legal=1
X     pr::shiptype = 0
X     gosub 6000
X     find #2%, key #0% eq pr::username, wait 60\update #2%\free #2%
X     mine=0
X     return
X
X3900 ! -------------------- board abandoned ship --------------------
X     mine=0
X     ! check if you are right above a ship, if yes ==> board
X     get #3%, key #0% eq name$(pr::planet), wait 60
X
X     for i=1 to noship
X       if t(i)::ship<>-1 and abs(t(i)::spos-pr::rpos)=0 and (t(i)::sintent=9
V &
X`09 `09or t(i)::sintent < -1) then
X`09   ! big ships allow more than 1 person to board
X           a$="You board the badly damaged "+edit$(s(t(i)::ship)::sname,128%
V)+ &
X`09      " and check out the cargo hold."
X           call display(23,a$)
X
X`09   if t(i)::sintent > 0 then
X`09     select t(i)::ship
X`09       case 20
X`09`09 t(i)::sintent = -10
X`09       case 17
X`09         t(i)::sintent = -5
X`09       case 21
X`09`09 t(i)::sintent = -3
X`09       case 13,15,16
X`09`09 t(i)::sintent = -2
X`09       case else
X`09`09 t(i)::sintent = -1
X                 pr::score=pr::score+s(t(i)::ship)::menergy
X                 pr::kills=pr::kills+1
X`09`09 t(i)::ship = -1
X`09`09 t(i)::senergy=-1
X`09     end select
X           else
X`09     ! if more than one person on board, up count by one
X`09     if t(i)::sintent < -1 then
X`09`09t(i)::sintent = t(i)::sintent + 1
X                pr::score=pr::score+s(t(i)::ship)::menergy
X                pr::kills=pr::kills+1
X                if t(i)::sintent = -1 then
X`09`09  t(i)::ship = -1
X`09`09  t(i)::senergy=-1
X`09`09end if
X`09     end if
X         end if
X         goto 3910
X       end if
X     next i
X     free #3%
X     ! check if a starbase in docking range
X     for i=1 to noship
X       if t(i)::ship=20 and abs(t(i)::spos-pr::rpos)<2 then goto 3970 end if
X     next i
X     call display(33,"There is no abandoned ship right above you.")
X     action_move=action_move-1
X     return
X
X3910 update #3%\free #3%
X     if rnd>.8 then`20
X        a$="You find that the cargo hold has been totally"&
X`09+" consumed by intense fire."
X        call display(23,a$)
X        goto 3940
X     end if
X      if t(i)::player=1 then
X`09c=t(i)::cargo(1)`09! cargo item
X        b=t(i)::cargo(2)`09! amount carried
X`09goto 3930
X      else
X        a=t(i)::ship
X`09select a
X`09  case 1
X`09    b=int(10*rnd+10)
X`09    if rnd>.5 then c=10 else c=5 end if
X`09  case 2,8,6
X`09    b=int(50*rnd+50)
X`09    c=int(9*rnd+1)
X`09  case 4,5,7
X`09    b=int(20*rnd+1)
X`09    c=int(9*rnd+1)
X`09  case 3
X`09    b=int(200*rnd+100)
X`09    c=int(9*rnd+1)
X`09  case 9
X`09    b=int(50*rnd+5)
X`09    if rnd>.5 then`20
X`09      c=8
X`09    else
X              if rnd>.5 then c=2
X              else c=9
X`09      end if
X`09    end if
X`09  case 11,15
X`09    b=16
X`09    c=-1
X`09  case 12
X`09    b=14
X`09    c=-1`09   `20
X`09  case 13
X`09    b=15
X`09    c=-1
X`09  case 16
X`09    b=19
X`09    c=-1
X`09  case 17
X`09    if rnd>.96 then
X`09      b=17`09
X`09      c=-1
X`09    else`20
X`09      if rnd<.70 then
X`09        b=int(450*rnd+320)
X`09        c=10
X`09      else
X`09        b=20
X`09        c=-1
X`09      end if
X`09    end if
X`09  case 18
X`09    b=int(50*rnd+1)
X`09    c=10
X`09  case 19`09! boa`20
X`09    if rnd>.95 then
X`09      b=21
X`09      c=-1
X            else
X`09      b=int(400*rnd+5)
X`09      c=int(4*rnd+1)
X`09    end if
X`09  case 20`09! starbase
X`09    if rnd> .5 then
X`09      b=int(100*rnd+300)
X`09      c=10
X`09    else
X`09      b=21
X`09      c=-1
X`09    end if
X`09  case 21
X`09    if rnd>.50 then
X`09      b=22
X`09      c=-1
X`09    else
X`09      b=int(400*rnd+100)
X`09      c=int(3*rnd+4)
X`09    end if
X          case else
X `09    b=int(100*rnd+1)
X`09    c=int(10*rnd+1)
X        end select
X     end if
X3930 if c=-1 then goto found_equipment end if
X       a$="You find "+str$(b)+" "+edit$(c(c)::unit,128%)+"s of "+ &
X  `09 edit$(c(c)::trade,128%)+"."
X       call display(23,a$)
X       a$="n"
X       if (pr::totcargo+b)>pr::maxcargo then
X         a$="You won't be able to take it all."
X         call display(23,a$)
X         a$= "FLUSH CARGO HOLD? (Y/N)"
X         call display(1,a$)
X       end if
X       if a$<>"y" and a$<>"Y" then goto 3935 end if
X       a$="Cargo hold flushed.  All cargo except your gold has been discarde
Vd."
X       call display(23,a$)
X       for k=1 to 9\pr::cargo(k)=0\next k
X       pr::totcargo=pr::cargo(10)
X3935   a$="How much do you want to take?"
X       call display(23,a$)
X       a$="QUANTITY> "\call display(1,a$)`20
X       a=abs(val(a$))
X       if (pr::totcargo+a)>pr::maxcargo then`20
X`09 a$="You only have room for "+str$(pr::maxcargo-pr::totcargo)+" tonnes."
X         call display(23,a$)
X`09 goto 3935
X       end if
X3938   if a>b then`20
X `09 call display(33,"There isn't that much here!")
X         goto 3935`20
X       end if
X       pr::cargo(c)=pr::cargo(c)+a\pr::totcargo=pr::totcargo+a
X       a$="You load "+str$(a)+" "+edit$(c(c)::unit,128%)+"s of "+ &
X`09 edit$(c(c)::trade,128%)+" into your hold."
X       call display(23,a$)
X3940   if mine=0 then
X`09 if t(i)::ship = -1 then
X           a$="You return to your ship.  As you uncouple with the wrecked"+
V &
X              " ship, the strain"
X           call display(23,a$)
X           a$="causes the wreck to break up and disintegrate."
X           call display(23,a$)
X`09 else
X`09   a$="While uncoupling, you note that the damaged ship has " + &
X`09      "another docking port."
X`09   call display(23,a$)
X       else
X         ! operation was mining
X         mine=0
X       end if
X       return
X
X3970 ! board starbase
X     if t(i)::sintent<>0 then
X       a$= "STARBASE DOCKING REQUEST DENIED."
X       call display(23,a$)
X       return
X     end if
X     a$="STARBASE DOCKING PROGRAM ACTIVATED - Docking maneouver completed."
X     call display(23,a$)
X     clean=(pr::legal-1)`5E4*1000
X     clean=clean+int(clean*rnd)
X     if clean<>0 and pr::credits>clean then
X       a$= "For "+str$(clean)+" credits, you can be clean again..."
X       call display(23,a$)
X       a$="PAY IT? (Y/N)"\call display (1,a$)
X       if a$="n" then goto 3975 end if
X       pr::credits=pr::credits-clean\pr::legal=1\clean=0
X     end if
X     if clean<>0 then
X       a$= "A junior official throws you off the base, mumbling about how"
X       call display(23,a$)
+-+-+-+-+-+-+-+-  END  OF PART 11 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 12 -+-+-+-+-+-+-+-+
X       a$= "he would have you arrested if it wasn't for all the paperwork."
X       call display(23,a$)
X       goto 3975
X     end if
X     if pr::credits<1000 then
X       a$= "Your credit rating isn't good - thrown out."
X       call display(23,a$)
X       goto 3975
X     end if
X     a$="Energy recharged and Missiles replenished.  Service Fee: CR 1000"
X     call display(23,a$)
X     pr::energy=pr::maxenergy
X     get #3%, key #0% eq name$(pr::planet), wait 60
X     t(pr::shipnum)::senergy=pr::maxenergy
X     update #3%\free #3%
X     pr::equip(13)=pr::maxmissile
X     pr::credits=pr::credits-1000
X3975 a$="DEPARTURE SEQUENCE INITIATED - Successful release from starbase."
X     call display(23,a$)
X     return
X   `20
Xfound_equipment:
X     ! ----------------- Found a piece of equipment -----------------
X     a$= "You find a working "+edit$(e(b)::ename,128%)+"."
X     call display(23,a$)
X     a$="Do you want to install it? (Y/N)"\call display(1,a$)
X     if a$="n" then goto 3940 end if
X     if b=14 then      ! excimer=14 / x-ray=17
X       if s(pr::shiptype)::mlaser<4 then a$="Sorry, your "+ &
X`09  edit$(s(pr::shiptype)::sname,128%)+ &
X`09  " just doesn't have a strong enough mount."
X          call display(23,a$)
X          return
X       else
X         pr::equip(1)=0\pr::equip(3)=0\pr::equip(5)=0\pr::equip(17)=0
X       end if
X     end if
X     if b=17 then
X       if s(pr::shiptype)::mlaser<5 then a$="Sorry, your "+ &
X`09  edit$(s(pr::shiptype)::sname,128%)+ &
X`09  " just doesn't have a strong enough mount."
X          call display(23,a$)
X          return
X       else
X         pr::equip(1)=0\pr::equip(3)=0\pr::equip(5)=0\pr::equip(14)=0
X       end if
X     end if
X     if b=13 then pr::scanrange=5 end if
X     pr::equip(b)=1
X     a$= "You install the "+edit$(e(b)::ename,128%)+" in your ship."
X     call display(23,a$)
X     goto 3940
X
X4000 ! -------------------- Police Trap -----------------------------
X     if pt::law>6 and rnd>.8 and pr::moves>10 then gosub 4030 end if
X     if pr::legal=4 and rnd<.95 then return end if
X     if pr::legal=5 and rnd<.85 then return end if
X     a=int(10*rnd+8)
X     for i=noship+1 to noship+a
X        t(i)::ship=1
X        t(i)::senergy=s(1)::menergy
X`09t(i)::smissile=s(1)::mmissile
X        t(i)::spos=int(rnd*5+2)
X        t(i)::sintent=0
X        t(i)::username="GP"+str$(i)
X     next i
X     noship=noship+a
X     return
X`20
X4030 ! ---------------- Galactic Commando ships --------------------
X     b=int(20*rnd+5)
X     if rnd>.3 then`20
X       a=1`20
X     else`20
X       if rnd>.5 then`20
X         a=2`20
X       else`20
X         a=3`20
X       end if
X     end if
X     for i=1 to a
X       noship=noship+1
X       t(noship)::ship=18
X       t(noship)::senergy=s(18)::menergy
X       t(noship)::smissile=s(18)::mmissile
X       t(noship)::spos=b+int(5*rnd-2)
X       t(noship)::sintent=0
X       t(noship)::username="GC"+str$(noship)
X     next i
X     return
X
X sand_blaster:
X     ! ---------------------- Sand blaster ------------------------
X     if pr::equip(24)<>1 then
X        a$= "Not Mounted"
X        call display(23,a$)
X`09action_combat=action_combat-1
X        return
X     end if
X     a$= "Sand Discharge initiated:  Millions of tiny particles envelop"&
X`09+" your ship."
X     call display(23,a$)
X     get #3%, key #0% eq name$(pr::planet), wait 60
X     l1 = next_ship
X     if (l1 > noship) then noship=noship+1 end if
X     t(l1)::ship=22
X     t(l1)::senergy=s(22)::menergy
X     t(l1)::spos=pr::rpos
X     t(l1)::sintent=0
X     t(l1)::username=" -  "
X     update #3%\free #3%
X     return
X
Xdamage_report:
X     ! -------------------- damage report -----------------------
X     a=pr::energy/pr::maxenergy
X     dmg$="ENERGY FAILING"
X     if a>.2 then dmg$="ENERGY LOW." end if
X     if a>.4 then dmg$="Major energy loss." end if
X     if a>.7 then dmg$="Minor energy loss." end if
X     if a=1 then dmg$="Ship undamaged." end if
X     call display(14,dmg$)
X     return
X
X galactic_fleet:
X     ! -------------------- Galactic Fleet ----------------------
X     if pt::zone=4 or (pt::zone=2 and rnd>.2) then return end if
X     if rnd>.3 then return end if
X     fleetsize=int(pr::moves/10*rnd+1)\fleetpos=int(10*rnd+5)
X     if fleetsize>30 then fleetsize=30 end if
X     for i=11 to 10+fleetsize
X       noship=noship+1
X       if i<14 then t(noship)::ship=i else t(noship)::ship=int(3*rnd+11)
X       end if
X       t(noship)::spos=int(3*rnd-1)+fleetpos
X       shipno=noship\gosub 3100
X       t(noship)::senergy=s(t(noship)::ship)::menergy
X       t(noship)::smissile=s(t(noship)::ship)::mmissile
X       t(noship)::username="GF"+str$(noship)
X     next i
X     return
X`20
X4300 ! ------------------ multi-fire missile rack -------------------
X     simult=3`09`09! default firing is 3 missiles
X     if pr::equip(13)<3 then simult=pr::equip(13) end if
X     a$="You can fire up to "+str$(simult)+" missiles - Press return when do
Vne."
X     call display(23,a$)
X     for k=1 to simult
X       gosub 3614
X       if action_combat=0 and k<>1 then`20
X         action_combat= 1
X         return`20
X       end if
X     next k
X     return
X`20
X4400 ! -------------------- Equipment Destroyed ---------------------
X     a=int(ntequip*rnd+1)
X     if pr::equip(a)=1 then
X       a$= edit$(e(a)::ename,128%)+" DESTROYED!"
X       call display(23,a$)
X       pr::equip(a)=0
X       select a
X`09case 8
X`09  pr::maxcargo=s(pr::shiptype)::mcargo
X          if pr::totcargo>pr::maxcargo then`20
X`09    pr::totcargo=0
X`09    for j=1 to 10
X`09      pr::cargo(j)=int(pr::cargo(j)/3)
X              pr::totcargo=pr::totcargo+pr::cargo(j)
X            next j
X            a$="Some of your cargo has been lost into space."
X            call display(23,a$)
X`09    return
X          end if
X`09case 11
X          pr::maxenergy=s(pr::shiptype)::menergy
X          if pr::energy>pr::maxenergy then`20
X            pr::energy=pr::maxenergy
X            a$="Some of your energy has been lost."
X            call display(23,a$)
X          end if
X`09case 12
X          pr::maxmissile=s(pr::shiptype)::mmissile
X          if pr::equip(13)>pr::maxmissile then`20
X            pr::equip(13)=pr::maxmissile
X            a$="Some of your missiles were destroyed."
X            call display(23,a$)
X          end if
X`09case 16
X`09  pr::scanrange=2
X      end select
X     end if
X     return
X`20
X4500 ! ---------------------- war zone ------------------------------
X     fighters=int(pr::moves/8*rnd+4)+int(5*rnd)\fightpos=int(5*rnd+5)
X     if fighters>40 then fighters=40 end if
X     for i=1 to fighters
X       noship=noship+1
X       t(noship)::spos=int(3*rnd-1)+fightpos
X       shipno=noship\gosub 3100
X       if rnd>.5 then t(noship)::ship=4 else t(noship)::ship=7
X       end if
X       t(noship)::senergy=s(t(noship)::ship)::menergy
X       t(noship)::smissile=s(t(noship)::ship)::mmissile
X       t(noship)::username="S"+str$(noship)+str$(int(10*rnd))
X     next i
X     return
X`20
X4800 ! -------------------- Zone messages --------------------------
X     if pr::legal<=2 then
X       select pt::zone
X`09 case 1
X`09   m$="WARNING! You are in a War Zone - Proceed at your own risk."
X`09   sender$="GPHQ"\u$=pr::username\gosub send_message
X     `09 case 3
X`09   m$="ATTENTION: This world is unclassified - proceed with caution."
X`09   sender$="GPHQ"\u$=pr::username\gosub send_message
X`09 case 4
X           m$="ALERT! Your trading permit is not recognized here - LEAVE AT"
V &
X`09`09+" ONCE."
X           sender$="GPHQ"\u$=pr::username\gosub send_message
X        end select
X     end if
X     return
X
X4900 ! -----------------  messages for thargoids ------------------
X     if pr::legal<=2 then
X       pr::thargoid=int(pr::moves/10)
X       sender$="GPHQ"\u$=pr::username\m$=""
X       select pr::moves
X`09 case 10
X           m$="WARNING: Increased Thargoid presence reported in your area."
X`09 case 20
X           m$="ALERT: Thargoid raids believed probable in your area."
X`09 case 30
X           m$="EMERGENCY WARNING! Thargoid invasion of this world expected."
X`09 case 40
X           m$="CONDITION RED! Thargoid invasion zone. Seek shelter."
X`09 case 50
X           m$="FINAL MESSAGE!  Local Thargoid presence has forced temporary"
V&
X            +"@surrender of Gal Pol forces - The situation is out of control
V."
X     `09end select
X        if m$<>"" then gosub send_message end if
X     end if
X     return
X`20
X5000 ! -----------Send to nearby player ships m$ -------------------
X     when error in
X       for i=1 to noship
X         if t(i)::player=1 and abs(t(i)::spos-pr::rpos)<pr::scanrange then
X           find #2%, key #0% eq t(i)::username, wait 60\free #2%
X           sender$=pr::username
X           u$=t(i)::username
X           gosub send_message
X         end if
X       next i
X     use
X       call display(23, "The 'ghost' disappears from your scanner.")
X       free #2%
X       get #3%, key #0% eq name$(pr::planet), wait 60
X       t(i)::ship=-1\t(i)::sintent=-1
X       update #3%\free #3%
X       continue
X     end when
X     return
X`20
X5100 ! ----------------- Save current game state -------------------
X     when error in
X       a$= "Entering suspended animation..."
X       call display(23,a$)
X       free #1%\free #2%\free #3%
X       pr::message = ""
X       op = pr
X       a$="gal_disk:gal-saves2.dat"
X       open a$ as file #4%, organization indexed fixed, &
X           allow modify, access modify, primary key op::username, &
X           map playermap
X       put #4%
X       close #4%
X       m$=pr::username+ " has entered suspended animation."
X       sender$="GPHQ"\chan=0\gosub broadcast_message
X       free #1%\free #2%\free #3%
X       oldplanet=pr::planet\gosub delete_player_from_action
X       find #2%, key #0% eq pr::username, wait 60%
X       delete #2%\free #2%
X       a$= "Suspension completed."
X       call display(23,a$)
X     use
X       print "Sorry... An error has occured writing the suspend file."
X       print "Error is "+ert$(err)
X     end when
X     goto 10000
X
Xother_save:`20
X     ! ------------ Dump another player into SU ------------------
X     when error in
X       op::date(1) = 11`09`09! set CTRL-C lockout
X       op::message = ""
X       a$="gal_disk:gal-saves2.dat"
X       open a$ as file #4%, organization indexed fixed, &
X           allow modify, access modify, primary key op::username, &
X           map playermap
X       put #4%
X       close #4%
X     use
X       free #4%\close #4%
X     end when
X     return
X`20
X5200 ! ------------------ Process event queue --------------------
X     for i=1 to numevents
X       if ev(i)::source <> pr::username then
X       select ev(i)::event
X         case "ab"
X           a$= ev(i)::source+" has abandonned ship."
X`09   call display(23,a$)
X         case "eb"
X           a$= "ENERGY BOMB LAUNCH DETECTED FROM "+ev(i)::source+"."
X`09   call display(23,a$)
X           if pr::equip(18)=1 then
X             a$= "ENERGY BOMB SHIELD UP - ANTI-MATTER SAFELY DISPERSED."
X`09     call display(23,a$)
X           else
X             a$= "EVERY ATOM IN YOUR BODY IS CONVERTED TO PURE ENERGY..."
X`09     call display(23,a$)
X             goto 8000
X           end if
X         case "mi"
X           if ev(i)::dest=pr::username then
X             a$= "INCOMING MISSILE detected from "+ev(i)::source+"."
X`09     call display(23,a$)
X           else
X             a$= ev(i)::source+" fired a missile at "+ev(i)::dest+"."
X`09     call display(23,a$)
X           end if
X         case "la"
X           if ev(i)::dest=pr::username then
X             a$= "LASER ATTACK!  Attacking ship: "+ev(i)::source+"."
X`09     call display(23,a$)
X             damage=ev(i)::p1
X             gosub 3369
X           else
X             a$=ev(i)::source+" fired it's laser at "+ev(i)::dest+"."
X`09     call display(23,a$)
X           end if
X         case "mo"
X           call display(23,"--- GALACTIC BANK TRANSACTION NOTICE ----")
X           a$= str$(ev(i)::p1)+" credits received from "+ev(i)::source+"."
X`09   call display(23,a$)
X           pr::credits=pr::credits+ev(i)::p1
X         case "mh"
X           a$=ev(i)::source+" shakes from the blast of a missile hit."
X`09   call display(23,a$)
X         end select
X       end if
X     next i
X     numevents=0
X     return
X`20
X
X6000 ! ----------------------- select ship -----------------------
X     if revived$="OK" then`20
X       call display(23,"The ship dealer is closed by government order.")
X       return
X     end if
X     call display(21,)`09! clear text window
X     call display(4,)`09! clear trade window
X     if pr::ban=TRUE then
X       call display(23,"A security guard throws you out of the building.")
X       return
X     end if
X     if pr::shiptype = 23 and s(23)::soldhere=0 and rnd > .5 then
X       call display(23, "You'll have to sell that piece of !*?* Yugo elsewhe
Vre.")
X       pr::ban=TRUE
X       return
X     end if
X     tradein% = 0
X     if  pr::shiptype<>0 then
X       ! assess value of old ship
X       a$="We access the total value of the options on your ship as shown."
X       call display(23,a$)
X       oldevalue% = 0
X       for i=7 to ntequip
X         if pr::equip(i) = 1 then`20
X           oldevalue% = oldevalue% + int(e(i)::usedeprice*factor*pr::equip(i
V))
X`09   a$=str$(pr::equip(i))+" "+edit$(e(i)::ename,128%)+": "+ &
X`09  `09str$(int(e(i)::usedeprice*factor))
X           call display(24,a$)
X         end if
X       next i
X       a$= "Total equipment value = "+str$(oldevalue%)
X       call display(24,a$)
X       call display(24,"")
X       tradein% = s(pr::shiptype)::cost - int((pr::time_owned * &
X`09(1- s(pr::shiptype)::resale/100) / 50%)*s(pr::shiptype)::cost) &
X`09- s(pr::shiptype)::cost/500
X       if tradein% < 5000 then tradein% = 5000 end if
X       a$ = "Value of a used "+edit$(s(pr::shiptype)::sname,128%)+ " = " + &
X`09`09`09`09    `09str$(tradein%)
X       call display(24,a$)
X       call display(17,)`09`09! wait for key
X       call display(4,)
X       call display(21,)
X     end if
X     a$="The above ships are for sale at the spaceport on "+ &
X`09edit$(pt::pname,128%)+"."
X     call display(23,a$)
X     a$="Ship"+space$(34)+"Cost    Energy  Cargo   Laser   Missiles"
X     call display(24,a$)
+-+-+-+-+-+-+-+-  END  OF PART 12 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 13 -+-+-+-+-+-+-+-+
X     for i=1 to ntships
X       b$=space$(20)
X       if s(i)::soldhere=0 and super_user_mode%=0 then iterate end if
X       a1$=str$(s(i)::neg_cost)
X       a2$=str$(s(i)::menergy)
X       a3$=str$(s(i)::mcargo)
X       select s(i)::slaser
X`09 case 0
X`09   a4$="None"
X`09 case 1
X`09   a4$="Pulse"
X`09 case 2
X`09   a4$="Beam"
X`09 case 3
X`09   a4$="Mil."
X`09 case 4
X`09   a4$="Excmr"
X`09 case 5
X`09   a4$="X-ray"
X`09 case else
X`09   a4$="Mega"
X       end select
X       a5$=str$(s(i)::mmissile)
X       a$=str$(i)+space$(3-len(str$(i)))+left$(s(i)::sname,36)+ a1$ + &
X`09   space$(8-len(a1$)) + &
X`09   a2$+space$(8-len(a2$))+a3$+space$(8-len(a3$))+a4$+ &
X`09   space$(8-len(a4$))+a5$+space$(8-len(a5$))
X       call display(24,a$)
X     next i
X
Xselect_ship:
X     a$="Ship to purchase> "\call display(1,a$)\b=val(a$)
X     if b<0 or b>ntships then goto select_ship end if
X     if b=0 and pr::energy<>0 then return end if
X     if super_user_mode%=1 then
X       pr::credits=10000000
X       goto 6081
X     end if
X     if b=0 and pr::shiptype=0 then`20
X`09call display(23,"Are you planning on trading in a bathtub or what?!?")
X`09goto select_ship
X     end if
X     if s(b)::soldhere=0 then
X`09call display(33,"Not Available here.")
X`09goto select_ship
X     end if
X
X     if (s(b)::temperature = -1) then
X       temp% =  (100 - s(b)::resale)   ! starting temp = % below can accept
X       if tradein%=0 then temp% = int(temp%/10) end if
X     else
X       temp% = s(b)::temperature
X     end if
X     interested% = 1
X     while (interested% > 0)
X       cost% = s(b)::neg_cost - oldevalue% - tradein%
X       call display(23, "List price : "+str$(s(b)::neg_cost))
X       call display(23, "Your cost  : "+str$(cost%))
X       a$="Your Offer> (0 to abort) "
X       call display(1,a$)
X       if (integerp(a$) = TRUE) then
X         offer=val(a$)
X       else
X`09 offer=0
X       end if
X       if s(b)::cost = 0 then s(b)::cost = -1 end if
X       real_offer = offer+oldevalue%+tradein%
X       if offer=0 then`20
X         interested%=0`20
X       else`20
X           if (abs (( s(b)::neg_cost - real_offer) &
X`09`09 /s(b)::neg_cost)*100) > ((rnd*0.3*temp%)+ (0.1*temp%)) then
X`09     call display(23,"That offer is so low you CAN'T be interested.")
X             temp% = temp% * 0.5`20
X           else`20
X             if (real_offer /s(b)::neg_cost > &
X`09              (s(b)::neg_cost -s(b)::neg_cost*(temp%/(10000.0+ &
X`09              int(3000*rnd))))/s(b)::neg_cost) then
X`09       a$ = "The ship is yours at " + str$(offer) + " credits."
X               call display(23,a$)
X               a$ = "Buy it? (y/n)"
X               call display(1, a$)
X               if ((a$ = "y") or (a$ = "Y")) then
X                 interested% = -1
X               end if
X               temp% = temp% * 0.7
X               s(b)::neg_cost = offer+oldevalue%+tradein%
X             else
X               s(b)::neg_cost = int(s(b)::neg_cost - (s(b)::neg_cost - &
X`09`09`09real_offer)*temp% *(rnd*.8+.2)/ (1+temp%))
X               a$ = "You can have the ship for " + str$(s(b)::neg_cost - &
X`09`09`09oldevalue% - tradein%)+"."
X               call display(23,a$)
X               a$ = "Buy it? (y/n)"
X               call display(1, a$)
X               if ((a$ = "y") or (a$ = "Y")) then
X                 interested% = -1`20
X`09       end if
X               temp% = temp% * (0.4 + rnd*0.3)
X             end if
X           end if
X       end if
X     next
X     cost% = s(b)::neg_cost - oldevalue% - tradein%
X     s(b)::temperature = temp%
X
X     if pr::shiptype=0 and interested%=0 then`20
X`09call display(23,"Are you planning on trading in a bathtub or what?!?")
X`09goto select_ship
X     end if
X     if interested%=0 then`20
X       return
X     end if
X     if pr::totcargo>s(b)::mcargo and pr::energy=0 then`20
X`09pr::totcargo=s(b)::mcargo\pr::cargo(10)=pr::totcargo
X`09call display(33,"Excess gold dumped.")
X     end if
X     if pr::totcargo>s(b)::mcargo then`20
X       a$="You'll have to sell some cargo first - there isn't room for"&
X`09+" it all."
X       call display(23,a$)
X       return
X     end if
X     if s(pr::shiptype)::slaser>1 and pr::equip(1)=1 and rnd>.6 then`20
X`09call display(23,"Trying to pull a fast one huh! Forget it." )
X`09c=int(3000*rnd+500)
X`09a$="Surcharge for damage: "+str$(c)+"."
X`09call display(23,a$)
X`09pr::ban=TRUE
X        if pr::credits-c>0 then`20
X`09  pr::credits=pr::credits-c`20
X`09else`20
X`09  call display(23,"Kicked out!")
X`09  return
X        end if
X     end if
X     if (pr::credits-cost%)<0 then
X       call display(33,"You don't have enough credits.")
X       goto select_ship
X     end if
X6081 for i=1 to ntequip\pr::equip(i)=0\next i
X     call display(23,"")
X     a$="You buy a used "+edit$(s(b)::sname,128%)+"."
X     call display(23,a$)
X     if pr::fuel>s(b)::mfuel then pr::fuel=s(b)::mfuel end if
X     s(b)::soldhere=0
X     if pr::energy=0 then pr::fuel=s(b)::mfuel end if
X     pr::time_owned = 1
X     pr::energy=s(b)::menergy\pr::maxenergy=pr::energy
X     pr::equip(13)=s(b)::mmissile-1
X     pr::equip(s(b)::slaser*2-1)=1\pr::maxmissile=s(b)::mmissile
X     pr::maxcargo=s(b)::mcargo
X     pr::credits=pr::credits-cost%
X     call display(3,)
X     pr::lsj = 0\pr::cloak=0
X     ecm_status%=0`09`09`09  ! ecm (if present) is off
X     pr::chan1=1
X     pr::chan2=2
X     pr::legal=1
X     pr::shiptype=b
X     pr::scanrange=3
X     pr::maxfuel=s(b)::mfuel\pr::speed=s(b)::mdrive
X     gosub 1700
X     return
X
X`20
X7800 ! -------------------- Initial Display ---------------------
X     call display(19,)`09! set up big window
X     call display(28,"GALACTIC  TRADER")
X     call display(8,"")
X     call display(8,"")
X     call display(8,"                                v. 4.55")
X     call display(8,"")
X     call display(8,"                       Written by: Stephan Meier")
X     call display(8,"")
X     call display(8,"                          Cornell University")
X     call display(8,"")
X     call display(8,"                             Playtested by:")
X     call display(8,"")
X     call display(8,"                 Elias Michaelides, Cam Haugen, Ben Lee
V,")
X     call display(8,"               Mike Ahn, Hyung Paek, Sunil William Savk
Var")
X     call display(8,"")
X     call display(8,"     (c) Copyright 1989 by Stephan Meier.  All rights r
Veserved.")
X
X     p$="Enter your name, Commander> "
X     call display(1,p$)
X     pr::personalname=p$
X     call display(9,)   `09! erase input
X`20
X7900 ! ------------------------------------------------------------
X     !                Introductory Blurb
X     ! ------------------------------------------------------------
X     call display(7,)`09`09! clear big window
X
X     a$= " ---------  CONGRATULATIONS COMMANDER "+edit$(pr::personalname, &
X`09`09128%)+"  ----------"
X     call display(8,a$)
X     call display(8,"")
X     a$= "The democratic government of "+edit$(name$(pr::planet),128)+ &
X`09" is pleased to inform you"
X     call display(8,a$)
X     a$="That your request for a Trading Permit has been approved.  " &
X`09+"You are one of "
X     call display(8,a$)
X     a$="a select few who will have the opportunity to reap the profits" &
X`09 +" and fame"
X     call display(8,a$)
X     a$= "associated with the successful trader.  Please note that your "&
X`09+"Trading Permit"
X     call display(8,a$)
X     a$= "may be revoked at any time for conduct in violation of the Code"&
X`09+" of Statutes."
X     call display(8,a$)
X     a$= "The following is a noncomprehensive list of offences punishable"&
X`09+" by the above: "
X     call display(8,a$)
X     call display(8,"")
X     call display(8,"  - Use of Anti-matter weapons against Federation ships
V.")
X     call display(8,"  - Excessive overdue taxes.")
X     call display(8,"  - Violation of the spirit of Free and Fair Trade.")
X     call display(8,"")
X     a$="You have managed to amass the 200,000 credits necessary to" &
X`09+" purchase"
X     call display(8,a$)
X     a$="get a used Cobra class Trader at list price."
X     call display(8,a$)
X     a$= "On behalf of the government of "+ &
X`09edit$(name$(pr::planet),128)+" we wish you a profitable"
X     call display(8,a$)
X     call display(8,"and rewarding career.")
X     call display(17,)
X     return
X
X7980 ! ------------------ Delete Dead ship ----------------------
X     free #1%\free #2%\free #3%
X     oldplanet=pr::planet\gosub delete_player_from_action
X     find #2%, key #0% eq pr::username, wait 60%\delete #2%\free #2%
X
X8000 ! -------------------- Game Over --------------------------
X     if quit=0 then
X       m$="ARGG!! She's breaking up... I can't hold her..."
X       chan=0
X       gosub broadcast_message
X       call display(21,"")
X       call display(21,"")
X       call display(21,"Captain, we're breakin' up...ARGH!!!!")
X     end if
X     call display(17,)\scanner_on=0
X     call display(9,)`09! clear io
X     call display(7,)   ! clear big window
X     call display(19,)  ! fetch big window
X     if quit=0 or quit=2 then
X       call display(8,"")
X       call display(8,"")
X       a$="      REST IN PEACE COMMANDER "+edit$(pr::personalname,128%)
X       call display(8,a$)
X     end if
X     call display(8,"")
X     call display(8,"")
X     call display(8,"")
X     call display(8,"      Ships Destroyed: "+str$(pr::kills))
X     call display(8,"")
X     call display(8,"      Final Score:     "+str$(pr::score))
X     call display(8,"")
X     call display(8,"      Final Rank:      "+rank$(pr::rank))
X     call display(8,"")
X     wealth=pr::credits-pr::debt+s(pr::shiptype)::cost
X     call display(8,"      Final Assets:    "+str$(wealth))
X     call display(8,"")
X     call display(8,"")
X     free #1%\free #2%\free #3%
X     if done<>1 then
X       oldplanet=pr::planet\gosub delete_player_from_action
X       find #2%, key #0% eq pr::username, wait 60%\delete #2%\free #2%
X     end if
X     menumode$="dead"
X    `20
X8050 ! -------------- Update Hall of Fame --------------------
X     close #4%
X     open "gal_disk:gal-scores.dat" as file #4%, organization indexed fixed,
V &
X         allow modify, access modify, primary key dummy, &
X         map scoremap
X     when error in
X       restore #4%
X       get #4%, wait 60
X     use
X       put #4%
X     end when
X     p=11
X     for i=10 to 1 step -1
X       if pr::score>sc(i)::score then p=i end if
X     next i
X     if p=11 then
X       select pr::rank
X         case 1
X           a$="You SUCK big time!  Play again rookie"
X         case 2
X           a$="Pretty USELESS peformance!"
X         case 3
X           a$="Not bad - but not good either - just another average trader."
X         case 4
X           a$="Acceptable - but plenty of room for improvement."
X         case 5
X           a$="Good fighting!  You had the Thargoids scared for a moment."
X         case else
X           a$="Excellent! Too bad others were better..."
X       end select
X       call display(8,a$)
X     else
X       for i=9 to p step -1
X         sc(i+1)=sc(i)
X       next i
X       sc(p)::sname=pr::personalname
X       sc(p)::rank=rank$(pr::rank)
X       sc(p)::score=pr::score
X       sc(p)::money=wealth
X       sc(p)::ships=pr::kills
X       if p=1 then
X         if pr::energy>0 then
X            a$="WOW... A true master Trader!!"
X`09    call display(8,a$)
X            a$="A boring life of gardening and cooking awaits you now..."
X`09    call display(8,a$)
X         else
X            call display(8,"")
X            a$="Quite Impressive... But don't go thinking you're master of"
V &
X               +" the universe"
X`09    call display(8,a$)
X            a$="as you're DEAD.  Still, even death is a small price to pay"
V &
X               +" for 1st place on"
X`09    call display(8,a$)
X            a$= "the Galactic Hall of Fame."
X`09    call display(8,a$)
X         end if
X       else
X         a$="Not bad... you ranked "+str$(p)+" out of 10 on the Galactic Hal
Vl"&
X               +"  of Fame."
X`09 call display(8,a$)
X       end if
X     end if
X     update #4%\free #4%
X8300 ! a$= hall of fame
X     call display(17,)
X     call display(7,)
X     call display(8,"")
X     call display(8,"")
X     call display(8,"")
X     a$="    *********************************************************"
X     call display(8,a$)
X     a$="    *         GALACTIC TRADER     HALL OF FAME              *"
X     call display(8,a$)
X     a$="    *********************************************************"
X     call display(8,a$)
X     call display(8,"")
X     a$="Commander     Score        Rank           Kills      Assets"
X     call display(8,a$)
X     a$="-----------------------------------------------------------"
X     call display(8,a$)
X     for i=1 to 10
X       a1$=str$(sc(i)::score)
X       a2$=str$(sc(i)::ships)
X       if len(edit$(sc(i)::sname,132)) <> 0 then
X         a$=sc(i)::sname+space$(5)+a1$+space$(12-len(a1$))+ &
X            sc(i)::rank+"   "+a2$+space$(12-len(a2$))+str$(sc(i)::money)
X         call display(8,a$)
X       end if
X     next i
X     close #4%
X     call display(8,"")
X
X     ! --------------------- Program Data ---------------------
X9000 data"Company/Corporation.","Participating Democracy.", &
X        "Representative Democracy.","Impersonal Bureaucracy", &
X        "Communist State","Feudal Technocracy","Religious Dictatorship"
X     data"Balkanization","No Government Structure","Total Anarchy"
X     data "No prohibitions","Explosives prohibited", &
X        "Energy weapons prohibited","Military weapons prohibited", &
X        "Light assault weapons prohibited", &
X        "Concealable weapons prohibited", &
X        "All firearms prohibited"
X     data"Shotguns prohibited","Long bladed weapons controlled", &
X        "Lethal weapons outlawed","All weapons outlawed"
X     data"Agricultural","Non-Agricultural","Industrial","Non-Industrial", &
X        "Rich","Poor","Water World","Desert World","Vacuum World", &
X        "Asteroid Belt","Ice-capped","Subsector Capital"
X     data"Stone Age","Bronze Age","Middle Age","Pre Industrial", &
X        "Early Industrial (Steam Age)","Middle Industrial", &
X        "Nuclear Age","Computer Age","Space Age","Galactic Age"
X     data"War Zone","Independent","Unclassified","Alien","Federation", &
X        "Federation","Federation","Federation","Federation"
+-+-+-+-+-+-+-+-  END  OF PART 13 +-+-+-+-+-+-+-+-
-+-+-+-+-+-+-+-+ START OF PART 14 -+-+-+-+-+-+-+-+
X     data"Federation"
X     data"Front Pulse Laser",300,"Rear Pulse Laser",300,"Front Beam Laser",
V &
X`09 600,"Rear Beam Laser",600,"Front Military Laser",1200, &
X         "Rear Military Laser",1100,"Escape Capsule",400, &
X`09 "Large Cargo hold",300,"Energy Bomb",50,"Rear Mining Laser",330,&
X         "Energy Unit",400,"Extra Missile Rack",100,"Missile",5, &
X         "Front Excimer Laser",2300,"Multi-Fire Racks",3100, &
X         "Long Range Scanner",2900,"Front X-Ray Laser",5300, &
X         "Energy Bomb Shield",1130,"ECM System",1540,"LSJ System",2300, &
X         "Cloaking Device",3600,"Fire-Control Comp.",7500, &
X`09 "Trading Computer",60, "Sand Blaster", 750
X     data "food",2,1,81,"tonne","slaves (*)",20,1,6417,"head","textiles", &
X`098,2,1160, &
X        "tonne","minerals",15,1,3617,"tonne","alloys",20,4,7488,"tonne"
X     data "luxuries",200,1,640017,"tonne","narcotics (*)",150,1,360017,"kilo
V"
X     data "computers",100,8,168704,"unit","machinery",60,7,63431,"unit", &
X`09"gold",80,1,102417,"kilo"
X     data "clean","mild offender","offender","fugitive","outlaw"
X     data "Viper class GalPol ship",70,2,3,50,3,9,200000,1,8,85,70,-75181, &
X        "Cobra Class free trader",100,1,5,200,3,0,200000,1,10,95,85,-66898
X     data "Python class transport",95,1,2,350,2,3,200000,.75,12,95,80,9150,
V &
X        "Adder class fighter",50,2,5,50,4,200500,-500,1.25,8,90,65,80116872
X     data "Ophidion class scout ship",110,2,4,100,4,7,204000,1.5,15,95,90, &
X      -115908, "Asp class luxury yacht",120,2,4,150,3,5,205000,1,10,83,70,-2
V7437
X     data"Krait class fighter",30,3,5,50,4,6,199950,1.25,7,80,70,-62742, &
X        "Fer de Lance",150,3,5,130,4,7,400000,1.25,12,95,90,-102452
X     data"Thargoid ship",250,3,5,100,4,8.5,500000,1,10,80,90,-65094, &
X        "Asteroid",5,0,0,0,0,9,0,0,0,0,0,3615, &
X        "Imperial Destroyer",200,3,5,170,5,8,450000,1,12,80,70,-8618
X     data"Imperial Cruiser",300,4,5,400,6,8.8,1200000,1.25,13,80,70,93865, &
X        "Imperial Battlestar",420,5,5,1000,9,8.95,5200000,1.25,14,80,70,3585
V44
X     data"Missile",5,0,0,0,0,9,0,1.5,0,0,0,4927
X     data"Exploration ship",340,4,5,200,8,8.9,2200000,1.5,14,99,93,-88484, &
X         "Heavy Battle Carrier",650,2,3,100,3,8.7,1700000,.75,10,82,80,-5764
V6
X     data"Death Star",3000,5,20,500,20,9,9200000,.75,15,65,50,201231, &
X         "GalPol Commando ship",230,3,6,200,6,9,500000,1,11,80,85,-14333, &
X         "Boa Class Bounty Hunter",135,2,5,400,3,4,225000,1.25,12,55,55,1603
V60,&
X         "Federation Starbase",50000,7,50,10000,5,9,10200000,0,0,90,50,44650
V27,&
X         "Thargoid Mothership",850,6,20,1000,6,9,6000000,1,10,98,92,270071,
V &
X         "Sand Cloud",1000,0,0,0,0,9,0,0,0,0,0, 6600,&
X`09 "Yugo class Rescue ship",15,1,1,8,1,6,195000,.75,5,80,35,-37819
X     data"Rookie",0,"Novice",250,"Average",800,"Dangerous",2000, &
X         "Deadly",5000,"ELITE",12000
X     data"MASTER",30000,"SUPREME",60000,"ULTIMATE",150000,"GAL GOD",500000
X     data"j","m","re","f","ah","m","ab","m","a","m","c","f","t","m", &
X`09 "o","f","m","c","r","c","f","c","bo","m","d","m","e","c","s", &
X`09 "f","b","f","fl","m","sa","c","ec","c","?","f","cl","c","ls","c"
X    `20
X
X     use    ! *************** GLOBAL ERROR HANDLER *******************
X       if debug%=1 then`20
X`09 a$= "ERR:"+str$(err)`20
X`09 call display(23,a$)
X       end if
X       if err=52 or err=50 then
X         call display(23, "Numeric input expected - Re-enter.")
X         a$="0"
X`09 b=0
X`09 a=0
X         continue
X       end if
X       if err=28 then
X         call display(23,"CTRL-C TRAP!  Auto-SUing game.")
X         aa$="s"
X!        call display(23,"Q) Quit   - Terminate game immediately")
X!         call display(23,"S) SU     - Suspend game and DISABLE IT FOR A WEE
VK")
X!         call display(23,"R) Resume - Resume play at current point")
X!         aa$ = "Enter Q,S or R >"
X!         while (aa$<>"Q" and aa$<>"S" and aa$<>"R")
X!           call display(1,aa$)
X!         next
X         select aa$
X           case "q"
X`09     quit=1
X             continue 8000
X           case "r"
X`09     continue
X           case "s"
X             pr::date(1)=11
X             continue 5100
X         end select
X       end if
X
X       ! error cannot be recovered from - attempt to save situation
X       if err=15 then
X         a$="A File Lock condition has been detected for 60 seconds."
X`09 call display(23,a$)
X         a$="SUing game and exiting - please wait a while and try again."
X         call display(23,a$)
X       end if
X       call display(23,"****************************************************
V**")
X       call display(23,"*  FATAL ELECTRONICS ERROR - LIFE SUPPORT GONE
V       *")
X       call display(23,"*  CRYOSTAT ACTIVATED - SUSPENDED ANIMATION ACHIEVED
V *")
X       call display(23,"*        ERRORS WRITTEN TO GAL-TRADER.DMP
V            *")
X       call display(23,"****************************************************
V**")
X       open "gal-trader.dmp" for output as file #5%
X       print #5%;"Gal-Trader v. 4.55 crash log "+date$(0%)+" "+time$(0%)+"."
X       print #5%;"Error =";err;" Loc = ";erl;" Module = ";ern$;"."
X       print #5%;ert$(err)
X       print #5%
X       print #5%;"Please send this file to HONY@CRNLVAX5.BITNET if you expec
Vt "
X       print #5%;"it to be useful for debugging purposes."
X       continue 5100
X     end when
X
X10000 close #1%\close #2%\close #3%\close #4%\close #5%
X
X      end program
$ CALL UNPACK GAL_TRADER4.BAS;1 508687615
$ create 'f'
Xgal.exe : gal_trader4.obj, display.obj, pname.obj
X`09link gal_trader4,display,pname/exe=gal.exe
X
Xgal_trader4.obj : gal_trader4.bas, gal-trader.h
X`09basic gal_trader4/variant=0
X
Xdisplay.obj : display.bas, display.e
X`09basic display
X
Xpname.obj : pname.bas
X`09basic pname
$ CALL UNPACK MAKEFILE.;3 892763200
$ create 'f'
X! ************************************************************************
X! * Planet Name Generation Routine`09`09N. Utzig `20
X! * Args:    1 dummy string
X! * Returns: String (20 character max)
X! * Uses external data list - should be independent of main prog DATA
X! ************************************************************************
X
XFUNCTION STRING Pnamegen( STRING Ptype )
X
X! Returns Random Planet Name <pname>
X! Ptype is a dummy variable, but could be used to alter the generation
X! routine for things other than planet names (I made a random corporation
X! name gen routine using this algorithm also)
X! Ptype is also used in a recursive call procedure, below
X
X st_limit=170 ! planet-name-prefix data limit (increase as data added)`20
X en_limit=160 ! planet-name-suffix data limit (increase as data added)
X sf_limit=30  ! optional ending planet name word
X
XRedoit:
X RANDOMIZE
X RESTORE
X
X FOR x=1 to INT(st_limit*RND)+1   ! pick a random starting string
X  READ d1$
X NEXT x
X
Xd4$=""
XIF RND<.05 then`09`09`09! 5% chance of concatinating another prefix
XRESTORE`09`09`09`09! to the planet name
X FOR x=1 to INT(st_limit*RND)+1
X  READ d4$
X NEXT x
XEND IF
X
Xrloop1:
X READ x$
X if x$<>"***" then goto rloop1    ! skip to endings
X END IF
X
X
X
X FOR x=1 to INT(en_limit*RND)+1   ! pick a random ending
X  READ d2$
X NEXT x
X
Xif Ptype="one" then goto skipit
XEND IF
Xif rnd<.05 then d2$=d2$+"-"+Pnamegen("one") ! 5% chance of hyphenated double
XEND IF`09`09`09`09`09 ! planet name - genreated via a
X`09`09`09`09`09 ! recursive call to Pname
X
Xd3$=""
X!IF RND<.05 then`09`09       `20
X`09`09`09`09`09 ! 5% chance of optional ending
X`09`09`09`09`09 ! word such as 'world', 'base', etc.
X!Rloop2:
X! READ x$
X! if x$<>"**2" then goto rloop2
X! END IF
X!
X! FOR x=1 to INT(sf_limit*RND)+1
X!  READ d3$
X! NEXT x
X!END IF
X
XSkipit:
Xd0$=d1$+d4$+d2$+" "+d3$`09`09  ! concatinate substrings into full name
Xif len(d0$)>10 then goto redoit   ! strings large than 20 chars thrown out
XEND IF
XPnamegen=d0$`09`09`09  ! return Pname
X!
X! Planet name prefixes - ten per line can be modified to alter the
X! distribution and flavor of the names
X!
Xdata alpha,beta,gamma,omega,tri,duo,spectra,bina,hydra,cano
Xdata expo,mega,do,ma,bi,qua,pen,load,test,mono
Xdata ursa,cepha,leo,aqua,tau,span,neo,sex,dra,dil
Xdata poly,ban,ben,pre,excel,homo,tel,fru,micro,mini
Xdata sim,cim,cut,cru,ja,ki,lar,bung,ever,god
Xdata wonder,water,necro,win,sun,sola,luna,stella,o,i
Xdata zo,zone,plane,top,out,off,in,other,xeno,thar
Xdata bo,no,oni,uni,doo,boo,snea,tar,dia,yu
Xdata en,eg,my,hol,jar,kli,kro,mole,pi,ro
Xdata xero,ya,in,ib,cy,zy,by,rhino,anti,omni
Xdata gli,cla,pro,re,spu,ana,fun,fore,ga,go
Xdata pha,pho,terra,vo,vul,snow,blood,mar,ven,mer
Xdata gore,aa,ee,ii,oo,uu,gna,who,bur,sala
Xdata reci,reta,pyro,ultra,bul,ir,hemo,co,hyper,meso
Xdata emi,dark,slave,narco,fighter,last,first,second,third,mid
Xdata main,dog,cat,fish,sky,hunter,pitt,crown,king,queen
Xdata flex,cor,proto,pola,equi,lata,longi,ad,at,ith
X!
X! planet name suffixes - ten per line
X!
Xdata ***
Xdata con,lex,ni,peia,ces,cron,gus,tax,nor,ceros
Xdata ris,sus,sos,sis,can,goid,star,num,nus,bis
Xdata culum,culus,dar,dis,dun,don,dill,den,fu,fus
Xdata vid,vun,xor,xon,zian,sian,scior,xior,sion,tion
Xdata pus,-world,land,go,axx,star,a,i,o,y
Xdata hole,pit,put,dud,du,pu,ono,unu,nu,home
Xdata center,-one,ex,ox,ix,mania,manx,end,cross,jun
Xdata ov,s,x,dolar,nius,as,less,bie,ker,di
Xdata to,utu,ufi,obi,ab,ble,ree,some,pe,it
Xdata shi,l,ne,le,re,ap,tron,eki,ki,cho
Xdata gr,ikh,okka,zoa,era,na,th,ch,sh,tch
Xdata angulum,rrus,alis,lios,line,tech,lf,stock,bar,bone
Xdata mander,pori,c,k,nk,full,ot,rt,gle,glo
Xdata vis,vane,ac,ack,new,dee,-planet,jip,gen,gan
Xdata dock,port,-landing,harbor,bay,cove,-island,field,city,town
Xdata vus,ibod,inor,ivin,haven,nest,pot,ng,gh,tk
X!
X! optional ending words to planet names - ten per line
X!
Xdata **2
Xdata major,minor,prime,1,2,3,4,5,6,7
Xdata port,base,ring,cluster,point,stop,8,9,outpost,nebula
Xdata quasar,cloud,nova,cluster,prime,major,minor,base,outpost,landing
XEND FUNCTION
$ CALL UNPACK PNAME.BAS;1 68713938
$ v=f$verify(v)
$ EXIT
42 min to Spreed
